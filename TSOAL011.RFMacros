<Record FileDesc="SO - Add Order" FileVersion="5.0.8.0" Desc="SO - Add Order">
<Param Name="tmCO" />
<Param Name="tmDCTO" />
<Param Name="tmDOCO" />
<Param Name="tmLNTY" />
<Param Name="tmMCU" />
<Param Name="tmLOAD" />
<Param Name="tmToMCU" />
<Param Name="tmNXTR" />
<Param Name="tmPalletType" />
<Param Name="tmUSER" />
<Param Name="tmZVERSION" />
<Param Name="tmPrevDOCO" />
<Param Name="tmERRID" />
<Param Name="tmERRTEXT" />
</Record>
<Code>
' -------------------------------------------------------------------------------
' | (C)opyright 2003-2012 The DataMAX Software Group, Inc., All Rights Reserved.|
' | RFgen JD Edwards Integration Suite Vers.# 420                               |
' -------------------------------------------------------------------------------
'
' TRANSACTION: SO - ADD ORDER
'
' NOTES:
'
' MODIFICATION HISTORY:
'

Option Explicit

Private Function Transaction(ByRef tmCO As Variant, ByRef tmDCTO As Variant, ByRef tmDOCO As Variant, ByRef tmLNTY As Variant, ByRef tmMCU As Variant, ByRef tmLOAD As Variant, ByRef tmToMCU As Variant, ByRef tmNXTR As Variant, ByRef tmPalletType As Variant, ByRef tmUSER As Variant, ByRef tmZVERSION As Variant, ByRef tmPrevDOCO As Variant, ByRef tmERRID As Variant, ByRef tmERRTEXT As Variant) As Boolean
  On Error Resume Next

  '---------------'
  '  Declarations '
  '---------------'
  Dim bSuccess    As Boolean
  Dim sErrDesc    As String
  Dim sSQL        As String
  Dim sCols       As String
  Dim sRows       As String
  Dim sSQL1       As String
  Dim sCols1      As String
  Dim sRows1      As String
  Dim sUOM2       As String
  Dim nQty2       As Currency
  Dim nITM        As Long
  Dim iCnt        As Long
  Dim nAN8        As Long
  Dim tmSHAN      As Long
  Dim tmLPID      As String
  Dim tmLITM      As String
  Dim tmUOM       As String
  Dim tmQTY       As Currency
  Dim sLPIDok     As String
  Dim vArray      As Variant
  Dim cTNId       As String

  Dim emGetAuditInfo                    As New EmbeddedProc
' Dim emSetELCalledFromSOEL16           As New EmbeddedProc
  Dim emGetItemUoMConversionFactor      As New EmbeddedProc
  Dim emF4211FSEndDoc                   As New EmbeddedProc
  Dim emF4211FSEditLine                 As New EmbeddedProc
  Dim emF41001GetAddressNoFromBranch    As New EmbeddedProc
  Dim emF4211FSBeginDoc                 As New EmbeddedProc

  '----------------'
  ' Initialization '
  '----------------'
  cTNId = "TSOAL011"

  Call SetEnvironment()  ' in case macro is running in TM
  '
  If Not ERP.BeginTrans Then  ' Force all business functions to use the same connection
    TM.AbortTrans
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", "ERP.BeginTrans failed" , "", Nothing, tmUSER, TM.QueueName, TM.SeqNo)
    tmERRTEXT = "No ERP Handle - retry!"
    Exit Function
  End If

  '------------------------------'
  ' F41001GetAddressNoFromBranch '
  '------------------------------'
  'From MCU
  emF41001GetAddressNoFromBranch.Name                = "F41001GetAddressNoFromBranch"
  emF41001GetAddressNoFromBranch.Param("CostCenter") = tmMCU
  '
  If Not emF41001GetAddressNoFromBranch.Execute Then
    sErrDesc = "F41001GetAddressNoFromBranch"
    Call TranLog(cTNId, emF41001GetAddressNoFromBranch, "BSFN Failed", sErrDesc, Nothing)
    GoTo ErrLine
  End If
  '
  nAN8 = emF41001GetAddressNoFromBranch.Param("AddressNumber")

  If nAN8 = 0 Then
    sErrDesc = "Failed get Adress number for Plant:" & tmMCU
    GoTo ErrLine
  End If
  '
  sSQL = "select A6CRRP from F0401 where A6AN8 = " & nAN8

  DB.Execute(sSQL,sCols,sRows)

  If Ext(gsLog,5) = "1" Then Call TranLog(cTNId, "", "F0401", Replace(sSQL, "'", "`"))

  If Len(sRows) = 0 Then
    If Ext(gsLog,6) = "1" Then Call TranLog(cTNId, "6", "F0401", Replace(sSQL, "'", "`"))
  End If

  '------------------------------'
  ' F41001GetAddressNoFromBranch '
  '------------------------------'
  'To MCU
  emF41001GetAddressNoFromBranch.Param("CostCenter") = tmToMCU
  '
  If Not emF41001GetAddressNoFromBranch.Execute Then
    sErrDesc = "F41001GetAddressNoFromBranch"
    Call TranLog(cTNId, emF41001GetAddressNoFromBranch, "BSFN Failed", sErrDesc, Nothing)
    GoTo ErrLine
  End If
  '
  tmSHAN = emF41001GetAddressNoFromBranch.Param("AddressNumber")
  If tmSHAN = 0 Then
    sErrDesc = "Failed get Adress number for Ship To:" & tmToMCU
    GoTo ErrLine
  End If

  '--------------'
  ' GetAuditInfo '
  '--------------'
  emGetAuditInfo.Name = "GetAuditInfo"
  '
  If Not emGetAuditInfo.Execute Then
    sErrDesc = "GetAuditInfo"
    Call TranLog(cTNId, emGetAuditInfo, "BSFN Failed", sErrDesc, Nothing)
    GoTo ErrLine
  End If

  '-----------------'
  ' F4211FSBeginDoc '
  '-----------------'
  If tmPrevDOCO = "" Then
    emF4211FSBeginDoc.Name = "F4211FSBeginDoc"
    emF4211FSBeginDoc.Param("CMDocAction")          = "A"
    emF4211FSBeginDoc.Param("CMProcessEdits")       = "1"
    emF4211FSBeginDoc.Param("CMComputerID")         = emGetAuditInfo.Param("Workstation_UserId")
    emF4211FSBeginDoc.Param("CMUpdateWriteToWF")    = "2"
    emF4211FSBeginDoc.Param("CMProgramID")          = "EP4210"
    emF4211FSBeginDoc.Param("CMVersion")            = tmZVERSION
    emF4211FSBeginDoc.Param("OrderCo")              = tmCO
    emF4211FSBeginDoc.Param("OrderType")            = tmDCTO
    emF4211FSBeginDoc.Param("BusinessUnit")         = tmMCU
    emF4211FSBeginDoc.Param("ShipToNo")             = tmSHAN
    emF4211FSBeginDoc.Param("OrderDate")            = emGetAuditInfo.Param("Date")
    emF4211FSBeginDoc.Param("Mode")                 = "F"
    emF4211FSBeginDoc.Param("DateUpdated")          = emGetAuditInfo.Param("Date")
    emF4211FSBeginDoc.Param("UserID")               = emGetAuditInfo.Param("UserName")
    emF4211FSBeginDoc.Param("WKBaseCurrency")       = DB.Extract(sCols,sRows,1,"A6CRRP")
    emF4211FSBeginDoc.Param("RetrieveOrderNo")      = "1"
    If Not emF4211FSBeginDoc.Execute Then
      sErrDesc = "F4211FSBeginDoc"
      Call TranLog(cTNId, emF4211FSBeginDoc, "BSFN Failed", sErrDesc, Nothing)
      GoTo ErrLine
    End If
    tmPrevDOCO = emF4211FSBeginDoc.Param("OrderNo")
  End If

  '--------------'
  ' GetAuditInfo '
  '--------------'
  emGetAuditInfo.Name       = "GetAuditInfo"
  emGetAuditInfo.LogMode = LogNever
  emGetAuditInfo.DebugLog   = cJDELogPath
  '
  If Not emGetAuditInfo.Execute Then
    sErrDesc = "GetAuditInfo"
    Call TranLog(cTNId, emGetAuditInfo, "BSFN Failed", sErrDesc, Nothing)
    GoTo errline
  End If

' '-----------------------'
' ' SetELCalledFromSOEL16 '
' '-----------------------'
'  emSetELCalledFromSOEL16.Name = "SetELCalledFromSOEL16"
'  '
'  emSetELCalledFromSOEL16.Param("EditLineSOEMBFFlags")   = "000000000000000000000000000000"
'  emSetELCalledFromSOEL16.Param("Value")                 = "3"
'  '
'  If Not emSetELCalledFromSOEL16.Execute Then
'    sErrDesc = "SetELCalledFromSOEL16"
'    Call TranLog(cTNId, emSetELCalledFromSOEL16, "BSFN Failed", sErrDesc, "")
'    GoTo ErrLine
'  End If

  If gbCustomerMaster ="F0301" Then
    sSQL = "select A5CRCA from F0301 where A5AN8 = " & tmSHAN
  Else
    sSQL = "select AICRCA from F03012 where AIAN8 = " & tmSHAN
  End If

  DB.Execute(sSQL,sCols,sRows)

  If Ext(gsLog,5) = "1" Then Call TranLog(cTNId, "", gbCustomerMaster, Replace(sSQL, "'", "`"))

  If (Len(sRows) = 0) Then
    App.LogError "DB.Execute", "SQL call did not return any rows from " &gbCustomerMaster & " / TSOAL011" & vbCrLf & sSQL
    If Ext(gsLog,6) = "1" Then Call TranLog(cTNId, "6", gbCustomerMaster, Replace(sSQL, "'", "`"))
    GoTo ErrLine
  End If

' sSQL = "select LDLITM,LDLOTN,LMLOCN,LDUORG,LDLPID,LDUOM from F55101" & _
'        " inner join F55102 on LMLPID = LDLPID" & _
'        " where LMTYPE = '" & tmPalletType & "' and LMPALP = '" & tmLOAD & "' and (LDRDOCO is Null or LDRDOCO = 0)"

  sSQL = "select LDLITM,LDLOTN,LMLOCN,LDUORG,LDLPID,LDUOM from F55101" & _
         " inner join F55102 on LMLPID = LDLPID" & _
         " where LMTYPE = '" & tmPalletType & "' and LMPALP = '" & tmLOAD & "'"

  DB.Execute(sSQL,sCols,sRows)
  '
  If Ext(gsLog,5) = "1" Then Call TranLog(cTNId, "", "F55101", Replace(sSQL, "'", "`"))

  If DB.Count(sRows) = 0 Then
    sErrDesc = "No Lines found for Load: " & tmLOAD
    If Ext(gsLog,6) = "1" Then Call TranLog(cTNId, "6", "F55101", Replace(sSQL, "'", "`"))
    GoTo ErrLine
  End If
  '
  For iCnt = 1 To DB.Count(sRows)
    tmLPID = DB.Extract(sCols,sRows,iCnt,"LDLPID")
    tmLITM = DB.Extract(sCols,sRows,iCnt,"LDLITM")
    tmUOM  = DB.Extract(sCols,sRows,iCnt,"LDUOM")
    tmQTY  = DB.Extract(sCols,sRows,iCnt,"LDUORG")
    ' Get default information for this item
    sSQL1 = "select IMITM, IMUOM2 from F4101" & _
           " where IMLITM = '" & tmLITM & "' "
    DB.Execute(sSQL1,sCols1,sRows1)
    If Ext(gsLog,5) = "1" Then Call TranLog(cTNId, "", "F4101", Replace(sSQL, "'", "`"))
    If (Len(sRows1) = 0) Then
      App.LogError "DB.Execute", "SQL call did not return any rows" & vbCrLf & sSQL
      If Ext(gsLog,6) = "1" Then Call TranLog(cTNId, "6", "F4101", Replace(sSQL, "'", "`"))
      GoTo ErrLine
    End If
    nITM  = Trim(DB.Extract(sCols1,sRows1,1,1))
    sUOM2 = Trim(DB.Extract(sCols1,sRows1,1,2))
    If Trim(tmUOM) <> sUOM2 Then
      '----------------------------'
      ' GetItemUoMConversionFactor '
      '----------------------------'
      emGetItemUoMConversionFactor.Name = "GetItemUoMConversionFactor"
      emGetItemUoMConversionFactor.DataSource = "JDE"
      emGetItemUoMConversionFactor.Param("BranchPlant")         = tmMCU
      emGetItemUoMConversionFactor.Param("FromUnitOfMeasure")   = tmUOM
      emGetItemUoMConversionFactor.Param("ToUnitOfMeasure")     = sUOM2
      emGetItemUoMConversionFactor.Param("QuantityToConvert")   = tmQTY
      emGetItemUoMConversionFactor.Param("ShortItemNumber")     = nITM
      If Not emGetItemUoMConversionFactor.Execute Then
        sErrDesc = "GetItemUoMConversionFactor"
        Call TranLog(cTNId, emGetItemUoMConversionFactor, "BSFN Failed", sErrDesc, Nothing)
        GoTo ErrLine
      End If
      nQty2 = emGetItemUoMConversionFactor.Param("QuantityConvertedFromtoTo")
      '**** nQty2 = ConvUOM(nITM, CCur(tmQTY), tmUOM, sUOM2)
    End If
    '-----------------'
    ' F4211FSEditLine '
    '-----------------'
    emF4211FSEditLine.Name = "F4211FSEditLine"
    emF4211FSEditLine.Param("CMJobNo")                  = emF4211FSBeginDoc.Param("CMJobNumber")
    emF4211FSEditLine.Param("CMLineAction")             = "A"
    emF4211FSEditLine.Param("CMProcessEdits")           = "1"
    emF4211FSEditLine.Param("CMWriteToWFFlag")          = "2"
    emF4211FSEditLine.Param("CMComputerID")             = emGetAuditInfo.Param("Workstation_UserId")
    emF4211FSEditLine.Param("OrderCo")                  = tmCO
    emF4211FSEditLine.Param("OrderNo")                  = tmPrevDOCO
    emF4211FSEditLine.Param("OrderType")                = tmDCTO
    emF4211FSEditLine.Param("LineNo")                   = iCnt
    emF4211FSEditLine.Param("BusinessUnit")             = tmMCU
    emF4211FSEditLine.Param("ShipToNo")                 = tmSHAN
    emF4211FSEditLine.Param("ItemNo")                   = tmLITM
    emF4211FSEditLine.Param("Location")                 = DB.Extract(sCols,sRows,iCnt,"LMLOCN")
    emF4211FSEditLine.Param("LotNo")                    = DB.Extract(sCols,sRows,iCnt,"LDLOTN")
    emF4211FSEditLine.Param("LineType")                 = tmLNTY
    emF4211FSEditLine.Param("NextStatus")               = tmNXTR
    emF4211FSEditLine.Param("QtyOrdered")               = tmQTY
    emF4211FSEditLine.Param("TransactionUOM")           = tmUOM
    emF4211FSEditLine.Param("CMLineNo")                 = iCnt
    emF4211FSEditLine.Param("CMProgramID")              = "EP4210"
    emF4211FSEditLine.Param("CMVersion")                = tmZVERSION
    emF4211FSEditLine.Param("OverridePrice")            = "0"
    emF4211FSEditLine.Param("OverrideCost")             = "0"
    emF4211FSEditLine.Param("UserID")                   = emGetAuditInfo.Param("UserName")
    emF4211FSEditLine.Param("DateUpdated")              = emGetAuditInfo.Param("Date")
    emF4211FSEditLine.Param("WKCheckAvailability")      = "1"
    emF4211FSEditLine.Param("SalesOrderFlags")          = "0000000000000000000000000000000000000000"
    emF4211FSEditLine.Param("TransferOrderToBranch")    = tmToMCU
    emF4211FSEditLine.Param("TOEPOCurrencyCode")        = emF4211FSBeginDoc.Param("CurrencyCode")
    emF4211FSEditLine.Param("F4201BranchPlant")         = tmMCU
    emF4211FSEditLine.Param("RevenueBusinessUnit")      = tmMCU
    emF4211FSEditLine.Param("ProcessID")                = emF4211FSBeginDoc.Param("ProcessID")
    emF4211FSEditLine.Param("TransactionID")            = emF4211FSBeginDoc.Param("TransactionID")
'   emF4211FSEditLine.Param("SOEMBFInternalFlags")      = emSetELCalledFromSOEL16.Param("EditLineSOEMBFFlags")
'   emF4211FSEditLine.Param("DualQuantity")             = nQty2
'   emF4211FSEditLine.Param("DualUOM")                  = sUOM2
    If Not emF4211FSEditLine.Execute Then
      sErrDesc = "F4211FSEditLine"
      Call TranLog(cTNId, emF4211FSEditLine, "BSFN Failed", sErrDesc, Nothing)
      GoTo LoopEdit
    End If
    sLPIDok = sLPIDok & tmLPID & "|"
LoopEdit:
  Next iCnt

  '---------------'
  ' F4211FSEndDoc '
  '---------------'
  emF4211FSEndDoc.Clear
  emF4211FSEndDoc.Name       = "F4211FSEndDoc"
  emF4211FSEndDoc.LogMode = LogNever
  emF4211FSEndDoc.DebugLog   = cJDELogPath
  '
  emF4211FSEndDoc.Param("CMJobNo")                  = emF4211FSEditLine.Param("CMJobNo")
  emF4211FSEndDoc.Param("SalesOrderNo")             = "" '*
  emF4211FSEndDoc.Param("CMComputerID")             = emGetAuditInfo.Param("Workstation_UserId")
  emF4211FSEndDoc.Param("OrderType")                = tmDCTO
  emF4211FSEndDoc.Param("KeyCompany")               = tmCO
  emF4211FSEndDoc.Param("OrderTotal")               = emF4211FSEditLine.Param("WKOrderTotal")
  emF4211FSEndDoc.Param("ForeignOrderTotal")        = emF4211FSEditLine.Param("WKForeignOrderTotal")
  emF4211FSEndDoc.Param("BaseCurrencyCode")         = DB.Extract(sCols,sRows,1,"A5CRCA")
  emF4211FSEndDoc.Param("ProgramID")                = "EP4210"
  emF4211FSEndDoc.Param("CMProgramID")              = "EP4210"
  emF4211FSEndDoc.Param("CMVersion")                = tmZVERSION
  emF4211FSEndDoc.Param("TimeOfDay")                = emGetAuditInfo.Param("Time")
  emF4211FSEndDoc.Param("TotalCost")                = emF4211FSEditLine.Param("WKTotalCost")
  emF4211FSEndDoc.Param("ForeignTotalCost")         = emF4211FSEditLine.Param("WKForeignTotalCost")
  emF4211FSEndDoc.Param("SuppressRlvBlnktFlag")     = "0"
  emF4211FSEndDoc.Param("WKRelatedOrderProcess")    =  1
  emF4211FSEndDoc.Param("CMUseWorkFiles")           = "2"
  emF4211FSEndDoc.Param("CMProcessEdits")           = "1"
  '
  If Not emF4211FSEndDoc.Execute Then
    sErrDesc = "F4211FSEndDoc"
    Call TranLog(cTNId, emF4211FSEndDoc, "BSFN Failed", sErrDesc, Nothing)
    GoTo ErrLine
  End If
  '
  tmDOCO = emF4211FSEndDoc.Param("SalesOrderNo")
    '
  '* Flag as processed
  vArray = Split(sLPIDok,"|")

  For iCnt = 1 To UBound(vArray)
    tmLPID = vArray(iCnt -1)
    sSQL = "update F55102 set LDRDOCO = '" & tmDOCO & "', LDRDCTO = '" & tmDCTO & "', " _
        & " LDRLLN = " & iCnt*1000 & ",LDRNXTR = '545', LDUSER = '" & tmUSER & "' " _
        & " where LDLPID = '" & tmLPID & "'"
    DB.Execute(sSQL)
      If Ext(gsLog,5) = "1" Then Call TranLog(cTNId, "", "F55102", Replace(sSQL, "'", "`"))
      If Len(SysErr.Description) <> 0 Then
        If Ext(gsLog,6) = "1" Then Call TranLog(cTNId, "6", "F55102", Replace(sSQL, "'", "`"))
      End If
  Next iCnt

  bSuccess = True

'-------'
' Exits '
'-------'
ErrLine:
  Set emF41001GetAddressNoFromBranch    = Nothing
  Set emGetAuditInfo                    = Nothing
  Set emF4211FSBeginDoc                 = Nothing
' Set emSetELCalledFromSOEL16           = Nothing
  Set emF4211FSEditLine                 = Nothing
  Set emF4211FSEndDoc                   = Nothing
  '
  If Not bSuccess Then
    ERP.RollbackTrans
  Else
    ERP.CommitTrans
  End If
  '
  Transaction = bSuccess

End Function
</Code>
