<Record FileDesc="LP - Pick Confirm P4205" FileVersion="5.0.8.0" Desc="LP - Pick Confirm P4205" Group="LP" LinkTo="No Links" LinkType="0" LinkMode="0" PromptList="txtMCU&vm;txtDOCO&vm;txtDCTO&vm;lbxSO&vm;lblFKey&vm;lbltxtPALP&vm;lblPALP&vm;lbltxtDoco&vm;lblDoco&vm;lbltxtType&vm;lblDcto&vm;lbltxtLine&vm;lblLine&vm;lbltxtLnty&vm;lblType&vm;lblLocn&vm;lblLITM&vm;lblItemDesc&vm;lblLotn&vm;txtLPID&vm;lblQty&vm;txtLOCN&vm;txtLITM&vm;txtLOTN&vm;txtQTY&vm;txtAccept&vm;lblFKeyLP" Depends="X41.bas">
<Schema>
<SchemaParam Linked="0" Attr="1" Name="txtMCU" />
<SchemaParam Linked="0" Attr="2" Name="txtDOCO" />
<SchemaParam Linked="0" Attr="3" Name="txtDCTO" />
<SchemaParam Linked="0" Attr="4" Name="lbxSO" />
<SchemaParam Linked="0" Attr="5" Name="lblFKey" />
<SchemaParam Linked="0" Attr="6" Name="lbltxtPALP" />
<SchemaParam Linked="0" Attr="7" Name="lblPALP" />
<SchemaParam Linked="0" Attr="8" Name="lbltxtDoco" />
<SchemaParam Linked="0" Attr="9" Name="lblDoco" />
<SchemaParam Linked="0" Attr="10" Name="lbltxtType" />
<SchemaParam Linked="0" Attr="11" Name="lblDcto" />
<SchemaParam Linked="0" Attr="12" Name="lbltxtLine" />
<SchemaParam Linked="0" Attr="13" Name="lblLine" />
<SchemaParam Linked="0" Attr="14" Name="lbltxtLnty" />
<SchemaParam Linked="0" Attr="15" Name="lblType" />
<SchemaParam Linked="0" Attr="16" Name="lblLocn" />
<SchemaParam Linked="0" Attr="17" Name="lblLITM" />
<SchemaParam Linked="0" Attr="18" Name="lblItemDesc" />
<SchemaParam Linked="0" Attr="19" Name="lblLotn" />
<SchemaParam Linked="0" Attr="20" Name="txtLPID" />
<SchemaParam Linked="0" Attr="21" Name="lblQty" />
<SchemaParam Linked="0" Attr="22" Name="txtLOCN" />
<SchemaParam Linked="0" Attr="23" Name="txtLITM" />
<SchemaParam Linked="0" Attr="24" Name="txtLOTN" />
<SchemaParam Linked="0" Attr="25" Name="txtQTY" />
<SchemaParam Linked="0" Attr="26" Name="txtAccept" />
<SchemaParam Linked="0" Attr="27" Name="lblFKeyLP" />
</Schema>
<Displays>
<Display Name="EnglishGUI" Type="1" Width="8" Height="7040" Locale="1033" />
</Displays>
<Form FieldId="Form" Attr="0" LinkMode="0" Pages="2">
<Controls>
<Control Type="1" FieldId="txtMCU" Attr="1" Defaults="@LAST" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="22" Width="55" Height="22" AnchorRight="696" AnchorBottom="286" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Plant:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="22" Width="119" Height="22" AnchorRight="584" AnchorBottom="286" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtDOCO" Attr="2" Defaults="@LAST" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="16" Top="44" Width="39" Height="22" AnchorRight="696" AnchorBottom="264" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="SO#:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="44" Width="103" Height="22" AnchorRight="600" AnchorBottom="264" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtDCTO" Attr="3" Defaults="@LAST" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="152" Top="44" Width="47" Height="22" AnchorRight="552" AnchorBottom="264" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Type:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="192" Top="44" Width="39" Height="22" AnchorRight="520" AnchorBottom="264" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="3" FieldId="lbxSO" Attr="4" Sorted="0">
<Layouts>
<Layout PageNo="1" Visible="1" ExtendCol="-1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="88" Width="111" Height="22" AnchorRight="640" AnchorBottom="220" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="select a line" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="1" Left="0" Top="110" Width="751" Height="198" AnchorRight="0" AnchorBottom="22" BackColor1="000001" BackColor2="000001" ForeColor="000000" DisplayOnly="0" />
<Columns />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblFKey" Attr="5">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="308" Width="239" Height="22" AnchorRight="512" AnchorBottom="0" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="F2 - Freight  F3 - Blind exc." />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lbltxtPALP" Attr="6">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="66" Width="47" Height="22" AnchorRight="696" AnchorBottom="242" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Load:" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblPALP" Attr="7">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="66" Width="63" Height="22" AnchorRight="640" AnchorBottom="242" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblPALP" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lbltxtDoco" Attr="8">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="16" Top="22" Width="39" Height="22" AnchorRight="696" AnchorBottom="286" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="SO#:" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblDoco" Attr="9">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="22" Width="63" Height="22" AnchorRight="640" AnchorBottom="286" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblDoco" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lbltxtType" Attr="10">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="44" Width="47" Height="22" AnchorRight="696" AnchorBottom="264" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Type:" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblDcto" Attr="11">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="44" Width="63" Height="22" AnchorRight="640" AnchorBottom="264" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblDcto" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lbltxtLine" Attr="12">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="112" Top="22" Width="47" Height="22" AnchorRight="592" AnchorBottom="286" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Line:" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblLine" Attr="13">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="152" Top="22" Width="63" Height="22" AnchorRight="536" AnchorBottom="286" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblLine" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lbltxtLnty" Attr="14">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="112" Top="44" Width="47" Height="22" AnchorRight="592" AnchorBottom="264" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Type:" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblType" Attr="15">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="152" Top="44" Width="63" Height="22" AnchorRight="536" AnchorBottom="264" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblType" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblLocn" Attr="16">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="66" Width="63" Height="22" AnchorRight="640" AnchorBottom="242" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblLocn" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblLITM" Attr="17">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="88" Width="63" Height="22" AnchorRight="640" AnchorBottom="220" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblLITM" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblItemDesc" Attr="18">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="10" FontStyle="0" MultiLine="0" Left="48" Top="110" Width="95" Height="22" AnchorRight="608" AnchorBottom="198" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblItemDesc" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblLotn" Attr="19">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="132" Width="63" Height="22" AnchorRight="640" AnchorBottom="176" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblLotn" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLPID" Attr="20" Defaults="@LAST" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="176" Width="55" Height="22" AnchorRight="688" AnchorBottom="132" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="LPID :" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="176" Width="183" Height="22" AnchorRight="512" AnchorBottom="132" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblQty" Attr="21">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="154" Width="55" Height="22" AnchorRight="648" AnchorBottom="154" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblQty" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLOCN" Attr="22" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="198" Width="55" Height="22" AnchorRight="688" AnchorBottom="110" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Locn :" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="198" Width="183" Height="22" AnchorRight="512" AnchorBottom="110" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLITM" Attr="23" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="220" Width="55" Height="22" AnchorRight="688" AnchorBottom="88" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Item#:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="220" Width="183" Height="22" AnchorRight="512" AnchorBottom="88" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLOTN" Attr="24" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="242" Width="55" Height="22" AnchorRight="688" AnchorBottom="66" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Lot# :" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="242" Width="183" Height="22" AnchorRight="512" AnchorBottom="66" BackColor1="000001" BackColor2="000001" ForeColor="000000" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtQTY" Attr="25" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="24" Top="264" Width="39" Height="22" AnchorRight="688" AnchorBottom="44" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Qty:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="264" Width="87" Height="22" AnchorRight="608" AnchorBottom="44" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtAccept" Attr="26" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="308" Width="151" Height="22" AnchorRight="592" AnchorBottom="0" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Enter to accept..." />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="0" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="0" Width="0" Height="0" AnchorRight="751" AnchorBottom="330" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblFKeyLP" Attr="27">
<Layouts>
<Layout PageNo="2" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="286" Width="95" Height="22" AnchorRight="648" AnchorBottom="22" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="F2 - new LP" />
</Layout>
</Layouts>
</Control>
</Controls>
<Layouts>
<Layout Visible="1" FormWidth="751" FormHeight="330" Scrollbars="0">
<Label Align="1" AutoSize="2" FontSize="0" FontStyle="0" Width="0" Height="22" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="[SO - Confirmation]" />
<Field AutoSize="0" BorderStyle="3" DropShadow="1" FontSize="0" FontStyle="0" BackColor1="000001" BackColor2="000001" ForeColor="000001" />
</Layout>
</Layouts>
</Form>
</Record>
<Code>
' -------------------------------------------------------------------------------
' | (C)opyright 2003-2012 The DataMAX Software Group, Inc., All Rights Reserved.|
' | RFgen JD Edwards Integration Suite Vers.# 418                               |
' -------------------------------------------------------------------------------
'
' RFgen LP: Pick Confirm
'
' NOTES:
'
' MODIFICATION HISTORY:
'

Option Explicit

Private Const cForceLOTN    = False     ' True = force User to confirm same Lot Number
Private Const cForceLOCN    = False     ' True = force User to confirm same Location
Private Const cTNId         = "FLPPC0100"
Private msPgm               As String
Private msVersion           As String
Private msStatusF           As String
Private msStatusT           As String
Private msStsConf           As String
Private msRelInv            As Boolean
Private mbAddFr             As Boolean
Private mnMaxQty            As Currency
Private mnMaxQoH            As Currency
Private msHardLOCN          As String
Private msHardLOTN          As String
Private mbSerialized        As Boolean
Private mbFkey3             As Boolean
Private mbLPNew             As Boolean
Private mbRunP4205          As Boolean
Private msResKey            As String
Private msResKeySav         As String
Private msAppl              As String
Private mnUKID              As Long
Private msOrderBy           As String
Private msITVers            As String

Private Sub Form_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  Dim iCN As Integer
  Dim sFieldId As String
  '
  iCN = App.PromptNo
  RFPrompt(iCN).BorderStyle = DisplayStandard
  RFPrompt(iCN).BackColor1 = cFieldFocusBC
  RFPrompt(iCN).ForeColor = cFieldFocusFC
  '
  If Left(RFPrompt(iCN).FieldId,3) = "txt" Then RFPrompt(Replace(RFPrompt(iCN).FieldId,"txt","lbl")).Label.Font.Underline = True

End Sub

Private Sub Form_Load()
  On Error Resume Next

  Dim sHeader As String
  Dim I As Integer
  '
  Call SetDisplay()
  '
  ' Initialize the RFGen recordset with extra fields
  App.SetValue("tmCO",      "")
  App.SetValue("tmMCU",     "")
  App.SetValue("tmDOCO",    "")
  App.SetValue("tmDCTO",    "")
  App.SetValue("tmLITM",    "")
  App.SetValue("tmLOTN",    "")
  App.SetValue("tmLOCN",    "")
  App.SetValue("tmQTY",     "")
  App.SetValue("tmUOM",     "")
  App.SetValue("tmLNID",    "")
  App.SetValue("tmSHIPTO",  "")
  App.SetValue("tmCARRIER", "")
  App.SetValue("tmLNTY",    "")
  '
  txtAccept.Visible = False

  ' Get Proc.Opt. Version from Menu
  msPgm     = App.GetValue("Pgm")
  msVersion = App.GetValue("Vers")
  msITVers  = App.GetValue("VersIT")

  ' get Status From from Proc.Opt. and Header
  msStatusF = GetProcOpt(msPgm,msVersion,"1;1",sHeader)

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  If  App.ClientType = "GUI" Then
    Form.Caption = Left(sHeader,29)
  Else
    Form.Caption = Left(sHeader,20)
  End If

  ' get Status To from Proc.Opt. and Header
  msStatusT = GetProcOpt(msPgm,msVersion,"1;2")

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  ' get Status Confirmaed from Proc.Opt. and Header
'  msStsConf = GetProcOpt(msPgm,msVersion,"2;2")
  msStsConf = "560"

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  ' Does Version relieve Inv?  from Proc.Opt.
  msRelInv = True

  If GetProcOpt(msPgm,msVersion,"5;4") = "1" Then msRelInv = False

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  ' Does Version allow Add Freight?  from Proc.Opt.
  mbAddFr = False

  If GetProcOpt(msPgm,msVersion,"3;1") = "1" Then mbAddFr = True

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  ' get line "1" defaults from Proc.Options
  mbFkey3 = False

  If GetProcOpt(msPgm,msVersion,"3;5") = "1" Then mbFkey3 = True

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  If Not mbFkey3 Then  lblFKey.Visible = False

  ' get order sequence from menu
  msOrderBy = App.GetValue("OrderBy")

  If Trim(msOrderBy) = "" Then
    msOrderBy = "SDLOCN"
  Else
    msOrderBy = Trim(UCase(msOrderBy))
  End If

  'App.SetOption(ShowHorizontalScrollBar, True)   ' todo - upgrade: App.SetOption removed

  txtLOTN.Visible = False
  txtLOTN.Required = False
  lblFKeyLP.Visible = False
  '
  lblPALP.Caption = ""
  '
  App.SetValue("LPITVersion", App.GetValue("VersIT"))           'LP - Transfer
  '
  mbRunP4205 = Trim(UCase(App.GetValue("RunP4205Y/N"))) = "Y"   'LP only?
  '
End Sub

Private Sub Form_LostFocus()
  On Error Resume Next
  '
  Dim iCN As Integer
  '
  iCN = App.PromptNo
  RFPrompt(iCN).BorderStyle = DisplayTransparent
  RFPrompt(iCN).BackColor1 = cFieldDefaultBC
  RFPrompt(iCN).ForeColor = cFieldDefaultFC
  '
  RFPrompt(Replace(RFPrompt(iCN).FieldId,"txt","lbl")).Label.Font.Underline = False

End Sub

Private Sub Form_OnFkey(ByRef Fkey As Long)
  On Error Resume Next
  '
  Dim iOK   As Integer
  Dim iRow  As Integer
  Dim vRsp  As Variant
  Dim sData As String

  If Fkey = 2 And Not mbLPNew Then
    If mbAddFr Then
      sData = " -MCU="  & Trim(App.GetValue("tmMCU"))   & _
              " -DOCO=" & Trim(App.GetValue("tmDOCO"))  & _
              " -DCTO=" & Trim(App.GetValue("tmDCTO"))  & _
              " -Pgm=" & Trim(msPgm)  & _
              " -Vers=" & Trim(msVersion)
      App.CallForm("FSOAL0100" & sData,True,True)
    End If
  End If

  If mbFkey3 = True  Then       ' only if blind execution is allowed in JDE Procc.Options
    If Fkey = 3 Then
      vRsp = App.MsgBox(GetMsg(9),vbYesNo, vbNo)
      If vRsp = vbNo Then Exit Sub
      iRow = lblFKey.Label.Top
      Screen.Print 0, iRow, "Processing...", False, True, True
      '
      If BlindExecute Then
        App.SetFocus("txtDOCO")
      Else
        App.SetFocus("lbxSO")
      End If
    End If
    If Fkey = 5 Then
      Call lbxSO_OnEnter("*", 1, "")     ' if List.Data empty, go to 1st. page
      App.SetFocus("lbxSO")
    End If
    Screen.Refresh
  End If
  '
  mbLPNew = False
  '
End Sub

Private Sub Form_Unload()
  On Error Resume Next
  '
  F00095RemoveReservation("F4211", msResKeySav, msAppl)
  'App.SetOption(ShowHorizontalScrollBar, False)   ' todo - upgrade: App.SetOption removed

End Sub

Private Sub txtDOCO_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  lblPALP.Caption = ""

End Sub

'Private Sub txtLPID_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
'  On Error Resume Next
'  '
'  lblFKeyLP.Visible = True
'  '
'End Sub
'
'Private Sub txtLPID_LostFocus()
'  On Error Resume Next
'  '
'  lblFKeyLP.Visible = False
'  '
'End Sub

Private Sub txtLOCN_OnFkey(ByRef Fkey As Long)
  On Error Resume Next
  '
  If Fkey = 2 Then
    If gbLPPrePrnt Then
        txtLPID.Text = "NEW"
    End If

    mbLPNew = True
    App.SetFocus("txtLPID")
  End If
  '
End Sub

Private Sub txtLPID_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sAttachedTo As String
  Dim sLPID       As String
  Dim sError      As String
  Dim bExists     As Boolean
  Dim uLP101 As LP101Data       ' create LP101 Structure
  '
  Rsp = UCase(Trim(Rsp))
  Cancel = True
  If (Len(Rsp)=0) Then Rsp = "NEW"
  '
  txtLOCN.DisplayOnly = False
  Call LP101_Reset(uLP101)      ' init LP101 Structure
  '
  uLP101.sLMLPID = Rsp
  '
  ' Check if LP exists
  '
  If X_LP101("I",uLP101) Then   ' Inquiry on LP101
    '
    ' Check if belongs to other SO
    '
    If App.GetValue("tmDOCO") <> uLP101.sLMRDOCO And App.GetValue("tmDCTO") <> uLP101.sLMRDCTO Then
      App.MsgBox(GetMsg(273) & uLP101.sLMRDOCO & "/" & uLP101.sLMRDCTO)
      Exit Sub
    End If
    '
  Else
    '
    ' Create New LP
    '
    If Not LP_CreatePlate(Rsp,"P","LP crt. " & Format(Date, "MM/DD/YYYY") & " " & Format(Time, "hh:nn:ss"),App.GetValue("tmLOCN"),False,App.GetValue("tmDOCO"), App.GetValue("tmDCTO"),"") Then
      App.MsgBox(GetMsg(270))
      Exit Sub
    End If
    '
    ' Add to Load if exists
    '
    If Len(App.GetValue("tmPALP")) > 0 Then

      Call LP101_Reset(uLP101)      ' init LP101 Structure
      '
      uLP101.sLMLPID = Rsp
      '
      ' Check if LP exists
      '
      If Not X_LP101("I",uLP101) Then
        App.MsgBox(GetMsg(104))
        Exit Sub
      End If

      uLP101.sLMPALP = App.GetValue("tmPALP")
      uLP101.sLMLOCN = App.GetValue("tmLPLOCN")
      If Not X_LP101("C",uLP101) Then   ' Change LP101
        App.MsgBox(GetMsg(104))
        Exit Sub
      End If
    End If
    '
  End If
  '
  App.SetValue("tmLPID", Rsp)
  Cancel = False
  '
End Sub

Private Sub txtMCU_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  If (Len(Rsp)=0) Then Rsp = GetDefaultMCU()
  If Len(Rsp) > 0 Then AllowChange = False
End Sub

Private Sub txtMCU_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmMCU", "")
  App.SetValue("tmCO",  "")

End Sub

Private Sub txtMCU_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sMCU     As String
  Dim sCompany As String
  Dim sEntity  As String
  '
  If (Len(Rsp)=0) Then Exit Sub
  '
  Cancel = True
  If Not Validate_BranchPlant(Rsp, sMCU, sCompany) Then Exit Sub
  If Not LP_ValidateEntity(sMCU, sEntity) Then Exit Sub     ' Varify Branch is assigned to an Entity
  '
  App.SetValue("tmCO",   sCompany)
  App.SetValue("tmMCU",  sMCU)
  App.SetValue("tmENTITY", sEntity)

  Cancel = False
End Sub

Private Sub txtMCU_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Cancel = Not Search_BranchPlant(Rsp)
End Sub

Private Sub txtDOCO_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmDOCO", "")

End Sub

Private Sub txtDOCO_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel = True
  '
  sSQL = "select DISTINCT SDDOCO, SDDCTO from  F4211" & _
         " where SDDOCO = " & Rsp & " and SDNXTR between '" & msStatusF & "' and '" & msStatusT & "' and SDMCU = '%tmMCU' " & _
         " order by SDDOCO, SDDCTO "
  '
  DB.Execute(sSQL, sCols, sRows)

  If (Len(sRows) = 0) Then
    App.MsgBox GetMsg(198)
    Exit Sub
  End If
  '
  ' If Ordernumber is unique default DocType
  '
  If (DB.Count(sRows) = 1) Then
    txtDCTO.Text = DB.Extract(sCols,sRows,1,"SDDCTO")
  End If
  '
  App.SetValue("tmDOCO", Rsp)
  '
  Cancel = False

End Sub

Private Sub txtDOCO_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU     As String
  Dim sDocType As String
  '
  sMCU = App.GetValue("tmMCU")
  '
  Cancel = Not Search_F4211_DOCO(Rsp, sMCU, msStatusF, msStatusT, sDocType)
  If Not Cancel Then txtDCTO.Text = sDocType
End Sub

Private Sub txtDCTO_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmDCTO", "")

End Sub

Private Sub txtDCTO_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL    As String
  Dim sCols   As String
  Dim sRows   As String
  Dim sLOCN   As String
  Dim sItem   As String
  Dim sITM    As String
  Dim sAITM   As String
  Dim sLOTN   As String
  Dim sSoqs   As String
  Dim sUOM    As String
  Dim sLNID   As String
  Dim sLnty   As String
  Dim sDSC1   As String
  Dim slbx    As String
  Dim sXUser  As String
  Dim sHeader As String
  Dim sCOMM   As String
  Dim sLPID   As String
  Dim I       As Integer

  Dim uLP101 As LP101Data       ' create LP101 Structure
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel = True
  '
  Rsp = UCase(Rsp)
  '
  sSQL = "select count(*) from  F4211" & _
         " where SDDCTO = '" & Rsp & "' and SDDOCO = %tmDOCO and SDMCU = '%tmMCU'"
  '
  DB.Execute(sSQL, sCols, sRows)
  '
  If (Val(sRows) = 0) Then
    App.MsgBox GetMsg(197)
    Exit Sub
  End If

  ' check if SO is on Hold
  sSQL = "select SHHOLD from  F4201" & _
         " where SHDCTO = '" & Rsp & "' and SHDOCO = %tmDOCO and SHMCU = '%tmMCU'"
  '
  DB.Execute(sSQL, sCols, sRows)

  If Trim(DB.Extract(sCols,sRows,1,1)) <> "" Then
    App.MsgBox GetMsg(214)
    Exit Sub
  End If
  '
  App.SetValue("tmDCTO", Rsp)
  '
  ' unlock record from prior document
  If Len(Trim(msResKeySav)) > 0 Then F00095RemoveReservation("F4211", msResKeySav, msAppl)
  '
  ' proceed JDE Record Lock
  msResKey = Trim(App.GetValue("tmDOCO")) & Trim(App.GetValue("tmDCTO")) & Trim(App.GetValue("tmCO"))
  '
  If Not F00095ReserveObject("F4211",msResKey,msAppl,msResKeySav) Then
    txtDOCO.Text = ""
    App.SetFocus("txtDOCO")
    Exit Sub
  End If
  '
  ' Build Listbox
  lbxSO.List.Clear
  '
  ' Headerline
  sHeader = "O|" & FixLeft("Locn",giLenLOCN," ") & "|" & FixLeft("Item#",giLenItem," ") & "|" & FixLeft("Qty",giLenQTY," ") & "|" & "UOM"
  sHeader = sHeader & "|" & FixLeft("Lotn",giLenLOTN," ") & "|" & FixLeft("Line",7," ") & "|" & "L " & "|" & FixLeft("Desc",25," ")
  lbxSO.Caption = sHeader
  '
  sSQL = "Select SDLITM, SDLNID, SDUOM, SDSOQS, SDDSC1, SDLOCN, SDLOTN, SDLNTY, SDDSC1, SDITM, SDAITM, SDCOMM " & _
       " from  F4211 where SDDOCO = %tmDOCO and SDDCTO = '%tmDCTO' and SDSOQS <> 0 and" & _
       " SDNXTR between '" & msStatusF & "' and '" & msStatusT & "' order by " & msOrderBy & " "

  DB.Execute(sSQL,sCols,sRows)
  '
  If Len(sRows) = 0 Then
    App.MsgBox(GetMsg(130))
    Exit Sub
  End If
  '
  For I = 1 To DB.Count(sRows)
    sLOCN = FormatLocnDisplay(DB.Extract(sCols,sRows,I,6), App.GetValue("tmMCU"))
    sItem = FixLeft(DB.Extract(sCols,sRows,I,"SDLITM"),giLenItem," ")
    sLOTN = FixLeft(DB.Extract(sCols,sRows,I,"SDLOTN"),giLenLOTN," ")
    sSoqs = CStr(ConvDecimalsFromSQL("SOQS",DB.Extract(sCols,sRows,I,"SDSOQS")))
    sSoqs = FixRight(sSoqs,giLenQTY," ")
    sUOM  = FixLeft(DB.Extract(sCols,sRows,I,"SDUOM"),3," ")
    sLNID = CStr(ConvDecimalsFromSQL("LNID",DB.Extract(sCols,sRows,I,"SDLNID")))
    sLNID = Format(sLNID,"  #.000")
    sLnty = FixLeft(DB.Extract(sCols,sRows,I,"SDLNTY"),2," ")
    sDSC1 = FixLeft(DB.Extract(sCols,sRows,I,"SDDSC1"),25," ")
    sITM  = CStr(DB.Extract(sCols,sRows,I,"SDITM"))
    sITM  = FixRight(sITM,8," ")
    sAITM = CStr(DB.Extract(sCols,sRows,I,"SDAITM"))
    sAITM = FixRight(sAITM,giLenItem," ")
    sCOMM = DB.Extract(sCols,sRows,I,"SDCOMM")
    slbx = sLOCN & "|" & sItem & "|" & sSoqs & "|" & sUOM & "|" & sLOTN & "|"  & sLNID & "|" & sLnty & "|"  & sDSC1 & "|"  & sITM & "|"  & sAITM & "|" & sCOMM
    If mbFkey3 = True Then    'Default "1" for blind execution
      lbxSO.List.AddItem "1|" & slbx,"1|" & slbx
    Else
      lbxSO.List.AddItem " |" & slbx," |" & slbx
    End If
  Next I
  '
  ' --------------------------------------
  ' Find Load if exists, else create one
  ' --------------------------------------
  '
  sLOCN = ""
  sLPID = ""
  sSQL = "select LMLPID, LMLOCN from F55101 where LMRDOCO = %tmDOCO and LMRDCTO = '%tmDCTO' and LMTYPE = 'L' "
  DB.Execute(sSQL,sCols,sRows)
  '
  If Len(sRows) > 0 Then
    sLOCN = DB.Extract(sCols,sRows,1,2)
    If cFormatJDE Then sLOCN = FormatLocnDisplay(sLOCN, App.GetValue("tmMCU"))
    App.SetValue("tmPALP", DB.Extract(sCols,sRows,1,1))
    App.SetValue("tmLPLOCN", sLOCN)
  Else
    Call LP101_Reset(uLP101)      ' init LP101 Structure
    '
    uLP101.sLMTYPE  = "L"
    uLP101.sLMDSC1  = "Load crt. " & Format(Date, "MM/DD/YYYY") & " " & Format(Time, "hh:nn:ss")
    uLP101.sLMLOCN  = sLOCN
    uLP101.sLMRDOCO = App.GetValue("tmDOCO")
    uLP101.sLMRDCTO = App.GetValue("tmDCTO")
    uLP101.sLMRNXTR = msStsConf

    If Not X_LP101_A(uLP101) Then
      App.MsgBox(GetMsg(270))
      Exit Sub
    End If

    sLPID = uLP101.sLMLPID

    If cFormatJDE Then sLOCN = FormatLocnDisplay(sLOCN, App.GetValue("tmMCU"))
    App.SetValue("tmPALP", sLPID)
    App.SetValue("tmLPLOCN", sLOCN)
  End If
  '
  lblPALP.Caption = Trim(App.GetValue("tmPALP")) & " - " & RTrim(App.GetValue("tmLPLOCN"))
  Cancel = False

End Sub

Private Sub txtDCTO_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim vDOCO As String
  '
  sMCU  = App.GetValue("tmMCU")
  vDOCO = App.GetValue("tmDOCO")
  '
  Cancel = Not Search_F4211_DCTO(Rsp, sMCU, vDOCO, msStatusF, msStatusT)
End Sub

Private Sub lbxSO_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim iLbCurr As Integer
  Dim vArray  As Variant

  Cancel = True

  If mbFkey3 = False Then
    If Left(Rsp, 1) = "*" Then Exit Sub
    vArray = Split(Rsp,"|")
    lblDoco.Caption     = App.GetValue("tmDOCO")
    lblDcto.Caption     = App.GetValue("tmDCTO")
    lblLine.Caption     = vArray(6)
    lblType.Caption     = vArray(7)
    lblLOCN.Caption     = vArray(1)
    lblLITM.Caption     = vArray(2)
    lblItemDesc.Caption = vArray(8)
    lblLotn.Caption     = vArray(5)
    lblQty.Caption      = vArray(3) & " " & vArray(4)
    App.SetValue("SelBlnd",vArray(0))
    App.SetValue("SelLOCN",vArray(1))
    App.SetValue("SelLITM",vArray(2))
    App.SetValue("SelQty", vArray(3))
    App.SetValue("SelUOM", Trim(vArray(4)))
    App.SetValue("SelLOTN",vArray(5))
    App.SetValue("SelLNID",vArray(6))
    App.SetValue("SelLNTY",vArray(7))
    App.SetValue("SelITM", vArray(9))
    App.SetValue("SelAITM",vArray(10))
    App.SetValue("SelCOMM",vArray(11))
    Cancel = False
  Else
    iLbCurr = lbxSO.List.Index                   'current line
    If Left(Rsp,1)  = "1" Then
      Mid$(Rsp,1,1) = " "
    Else
      Mid$(Rsp,1,1) = "1"
    End If
    lbxSO.List.RemoveItem iLbCurr                  'remove line
    lbxSO.List.InsertItem Rsp, Rsp,iLbCurr            'replace line   ' todo - upgrade: 'InsertLocn' is now first parameter
    lbxSO.List.Index = iLbCurr
    Cancel = True                                                ' stay on current prompt
  End If

End Sub

Private Sub txtLOCN_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmLOCN", "")
  App.SetValue("tmFLOCN", "")

End Sub

Private Sub txtLOCN_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sMCU    As String
  Dim sLOCN   As String
  Dim sSQL    As String
  Dim sCols   As String
  Dim sRows   As String
  Dim nOnHand As Currency ' INS 07/25/05 RBR offline inventory
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel = True
  '
  sMCU = App.GetValue("tmMCU")

  If Not Validate_Locn(Rsp, sMCU, sLOCN) Then Exit Sub
  '
  ' Validate if hardcommited in SO
  If cForceLOCN And (Len(App.GetValue("SelLOCN")) > 0) Then
    If (Rsp <> App.GetValue("SelLOCN")) Then
      App.MsgBox(GetMsg(116) & Trim(App.GetValue("SelLOCN")))
      Exit Sub
    End If
  End If
  '
  ' Validate it
  If gbOracleJDE And Len(Trim(App.GetValue("SelLOTN"))) = 0 Then App.SetValue("SelLOTN", " ")

  sSQL = "select LIPQOH from  F41021" & _
         " where LILOCN = '" & sLOCN & "' and LIMCU = '%tmMCU' and LIITM = %SelITM and LILOTN = '%SelLOTN'"
  '
  DB.Execute(sSQL, sCols, sRows)
  '
  If (Len(sRows) = 0) Then
    App.MsgBox(GetMsg(75))
    Exit Sub
  End If
  '
  App.SetValue("tmLOCN", Rsp)
  App.SetValue("tmFLOCN", sLOCN)
  '
  Cancel = False

End Sub

Private Sub txtLOCN_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim sITM  As String
  Dim sLOTN As String
  Dim sLOCN As String
  '
  ' Allow search only when not hardcommited in SO
  If cForceLOCN And (Len(msHardLOCN)>0) Then
    App.MsgBox GetMsg(115)
    Exit Sub
  End If

  sMCU = App.GetValue("tmMCU")
  sITM = App.GetValue("SelITM")
  '
  If Search_F41021_LOCN(Rsp, "", sMCU, sITM, sLOTN) Then
    Call Validate_Locn(Rsp, sMCU, sLOCN)
    lblLOCN.Caption = Rsp
    lblLOTN.Caption = sLOTN
    App.SetValue("SelLOTN",sLOTN)
  End If

  Rsp = ""  ' it should only update the label, user needs to confirm the barcode

End Sub

Private Sub txtLITM_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmLITM", "")
  App.SetValue("tmITM",  "")
  App.SetValue("tmUOM",  "")
  App.SetValue("tmLNID", "")
  App.SetValue("tmLOTN", "")
  '
  mbSerialized = False
  '
End Sub

Private Sub txtLITM_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sITM     As String
  Dim sLITM    As String
  Dim sAITM    As String
  Dim sDSC1    As String
  Dim sUOM     As String
  Dim nType    As Long
  Dim bHasLots As Boolean

  Dim sSQL     As String
  Dim sCols    As String
  Dim sRows    As String
  '
  If (Len(Rsp) = 0) Then Exit Sub

  Cancel=True
  '
  Rsp = Trim(UCase(Rsp))
  '
  ' Validate Item Master / get Item Branch
  If Not Validate_Item(App.GetValue("tmMCU"), Rsp, sITM, sLITM, sAITM, sDSC1, sUOM, nType, bHasLots, mbSerialized) Then Exit Sub

  App.SetValue("tmITM", sITM)
  App.SetValue("tmUOM", sUOM)
  App.SetValue("tmLITM", Rsp)
  App.SetValue("tmLOTN", "")
  '
  If Rsp <> Trim(App.GetValue("SelLITM")) Then
    App.MsgBox(GetMsg(18) & App.GetValue("SelLITM"))
    Exit Sub
  End If
  '
  If bHasLots Or mbSerialized Then
    txtLOTN.Visible = True
    txtLOTN.Required = True
  Else
     App.SetValue("tmLOTN", "")
  End If
  '
  Cancel=False

End Sub

Private Sub txtLOTN_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
   App.SetValue("tmLOTN", "")

End Sub

Private Sub txtLOTN_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL    As String
  Dim sCols   As String
  Dim sRows   As String
  Dim sLots   As String
  Dim sDRDL01 As String
  Dim sDRDL02 As String
  Dim slocn   As String
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel = True
  '
  Rsp = Trim(UCase(Rsp))
  '
  ' Validate against label
  If Rsp <> Trim(lblLotn.Caption) Then
    App.MsgBox GetMsg(17)
    Exit Sub
  End If
  '
  ' Validate
  sSQL = "select LIITM,LILOTS from  F41021" & _
         " where LIMCU = '%tmMCU' and LIITM = %SelITM and LILOCN = '%tmFLOCN' and LILOTN = '" & Rsp & "' "
  '
  DB.Execute(sSQL, sCols, sRows)

  If (Len(sRows) = 0) Then
    App.MsgBox(GetMsg(62))
    Exit Sub
  End If

  sLots = Trim(DB.Extract(sCols,sRows,1,"LILOTS"))

  If sLots <> "" Then
    Call Validate_UDC(FixRight(sLots,10," ") , "41", "L ",sDRDL01, sDRDL02)
    App.MsgBox(GetMsg(118) & sLots & vbCrLf & sDRDL01)
    Cancel = True
    Exit Sub
  End If
  '
  App.SetValue("tmLOTN", Rsp)
  '
  Cancel = False

End Sub

Private Sub txtLOTN_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU As String
  Dim sITM As String
  Dim slocn As String
  '
  ' Allow search only when not hardcommited in SO
  If cForceLOTN And (Len(msHardLOTN)>0) Then
    App.MsgBox GetMsg(123)
    Exit Sub
  End If

  sMCU = App.GetValue("tmMCU")
  sITM = App.GetValue("SelITM")
  slocn = App.GetValue("tmLOCN")
  '
  If Search_F41021_LOTN(Rsp, "", sMCU, sITM, slocn) Then
    lblLotn.Caption = Rsp
  End If

  Rsp = ""

End Sub

Private Sub txtQTY_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmQTY", "")

End Sub

Private Sub txtQTY_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim nQty    As Currency
  Dim nOnHand As Currency
  Dim nAvail  As Currency
  Dim sHold   As String
  Dim sSQL    As String
  Dim sCols   As String
  Dim sRows   As String
  Dim sMCU    As String
  Dim vRsp    As Variant
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel=True
  '
  ' Numeric?
  If Not IsNumeric(Rsp) Then
    App.MsgBox GetMsg(181)
    Exit Sub
  End If
  '
  ' Serialized Item?
  nQty = Val(Rsp)
  If (mbSerialized And nQty <> 1) Then
    App.MsgBox(GetMsg(177))
    Exit Sub
  End If
  '
  ' Not Zero
  nQty = Val(Rsp)
  If (nQty <= 0) Then
    App.MsgBox GetMsg(180)
    Exit Sub
  End If
  '
  mnMaxQty = CCur(App.GetValue("SelQty"))

  ' Exceeds Order Qty?
  If GetProcOpt(msPgm,msVersion,"4;3") = "1" Then
    If (nQty > mnMaxQty) Then
      App.MsgBox(GetMsg(36))
      Exit Sub
    End If
  End If

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  sMCU = App.GetValue("tmMCU")
  GetItemQty(sMCU,App.GetValue("selITM"),App.GetValue("tmLOTN"),App.GetValue("tmLOCN"),"1",nOnHand,nAvail,sHold)

  ' Exceeds QOH?
  If GetProcOpt(msPgm,msVersion,"4;2") = "1" Then
    If (nQty > nOnHand)  Then
      App.MsgBox(GetMsg(35))
      Exit Sub
    End If
  End If

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If
  '
  ' Exceeds Avail?
  If GetProcOpt(msPgm,msVersion,"4;1") = "1" Then
    If App.GetValue("SelCOMM") <> "C" And  App.GetValue("SelCOMM") <> "H" Then  'hardcommitted before, so ignore (SDCOMM)
      If (nQty > nAvail)  Then
        App.MsgBox(GetMsg(37))
        Exit Sub
      End If
    End If
  End If

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If
  '
  ' Splitlines allowed when remaining rest?
  If nQty < CCur(App.GetValue("SelQty"))  Then
    If GetProcOpt(msPgm,msVersion,"5;3") = "1" Then
        vRsp = App.MsgBox(GetMsg(191), vbYesNo, vbNo)
        If vRsp = vbNo Then Exit Sub
    End If
    If gbPOError Then
      App.ExitForm
      Exit Sub
    End If
    ' cannot split more than 9 times
    If Mid(App.GetValue("SelLine"),5,1) = "9" Then
      vRsp = App.MsgBox(GetMsg(190), vbYesNo, vbNo)
      If vRsp = vbNo Then Exit Sub
    End If
  End If

  App.SetValue("tmQTY", Rsp)
  '
  Cancel=False

End Sub

Private Sub txtAccept_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  txtAccept.Visible = True

End Sub

Private Sub txtAccept_LostFocus()
  On Error Resume Next
  '
  txtAccept.Visible = False

End Sub

Private Sub txtAccept_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim iRow As Integer
  '
  iRow = txtAccept.Label.Top
  '
  Screen.Print 0, iRow, "Processing...", False, True, True
  '
  Call ExecuteTM
  '
End Sub

Public Function ExecuteTM
  On Error Resume Next
  '
  Dim bOK     As Boolean
  Dim sVal    As String
  Dim iLbCurr As Integer
  Dim iLbNext As Integer
  Dim iLblMax As Integer
  Dim I       As Integer
  Dim nLine   As Integer
  Dim vArray  As Variant

  Dim emProc  As New EmbeddedProc
  '
  ExecuteTM = False
  '
  emProc.Name                = "TSOSC0100"
  emProc.DataSource          = gsDataSource
  emProc.Param("tmCO")       = App.GetValue("tmCO")
  emProc.Param("tmMCU")      = App.GetValue("tmMCU")
  emProc.Param("tmDOCO")     = App.GetValue("tmDOCO")
  emProc.Param("tmDCTO")     = App.GetValue("tmDCTO")
  emProc.Param("tmLITM")     = App.GetValue("tmLITM")
  emProc.Param("tmLOTN")     = App.GetValue("tmLOTN")
  emProc.Param("tmLOCN")     = App.GetValue("tmLOCN")
  emProc.Param("tmQTY")      = App.GetValue("tmQTY")
  emProc.Param("tmUOM")      = App.GetValue("SelUOM")
  emProc.Param("tmLNID")     = App.GetValue("SelLNID")
  emProc.Param("tmSHIPTO")   = App.GetValue("tmSHIPTO")
  emProc.Param("tmCARRIER")  = App.GetValue("tmCARRIER")
  emProc.Param("tmLNTY")     = App.GetValue("SelLNTY")
  emProc.Param("tmUSER")     = App.User
  emProc.Param("tmZVERSION") = msVersion
  emProc.Param("tmPGM")      = msPgm
  '
  If Ext(gsLog,1) = "1" Then Call TranLog(cTNId, "1", emProc.Name, "", emProc)

  If gbQueueProcessing Then
    If gbQLoadBal Then emProc.QueueName = RFQBalance("", 0)

    If Not emProc.Queue Then
      App.MsgBox GetMsg(222) & vbCrLf & SysErr.Description
      App.SetFocus "txtAccept"
      Exit Function
    End If
  Else
    If Not emProc.Execute Then
      App.MsgBox GetMsg(221) & vbCrLf & emProc.Param("tmERRTEXT")
      If Ext(gsLog,2) = "1" Then Call TranLog(cTNId, "2", emProc.Name, "", emProc)
      App.SetFocus "txtAccept"
      Exit Function
    End If
  End If
  '
' Offline inventory
  If gbOfflineEnabled And msRelInv Then
    If Not WriteOI(App.GetValue("tmCO"),App.GetValue("tmMCU"),App.GetValue("tmLITM"),App.GetValue("tmITM"),"",App.GetValue("SelUOM"),"-" & CStr(App.GetValue("tmQTY")),App.GetValue("tmDOCO"),App.GetValue("tmDCTO"),App.GetValue("SelLNID"),emProc.QueueName,emProc.QueueSeqNo, App.GetValue("tmLOCN"),App.GetValue("tmLOTN")," ") Then
      App.MsgBox(GetMsg(31))
    End If
  End If

  App.SetValue("LPITVersion", msITVers)

  ' Attach quantity to target LP
  Dim uLPOper As LPOper         ' LP Operation
  Dim uLP101 As LP101Data       ' create LP101 Structure
  Dim uLP102 As LP102Data       ' create LP101 Structure

  Call LP101_Reset(uLP101)      ' init LP101 Structure
  Call LP102_Reset(uLP102)      ' init LP102 Structure

  If App.GetValue("tmNLPID") <> "" Then                               ' Attach item to LP
    uLP101.sLMLPID    = App.GetValue("tmLPID")    ' Parent LP
    uLPOper.sPALP     = App.GetValue("tmLPID")   ' LP ID Parent
  Else                                                                ' Attach item directly to load
    uLP101.sLMLPID    = App.GetValue("tmLPID")    ' Parent LP
    uLPOper.sPALP     = App.GetValue("tmPALP")    ' LP ID Parent
  End If

  uLP102.sLDLPID    = uLP101.sLMLPID            ' LP line Details
  uLP102.sLDLITM    = App.GetValue("SelLITM")
  uLP102.nLDSOQS    = 0
  uLP102.nLDUORG    = App.GetValue("tmQTY")
  uLP102.sLDUOM     = App.GetValue("SelUOM")
  uLP102.sLDLOTN    = App.GetValue("tmLOTN")
  uLP102.sLDLOTS    = App.GetValue("tmTOLOTS")
  uLP102.sLDRDOCO   = App.GetValue("tmDOCO")
  uLP102.sLDRDCTO   = App.GetValue("tmDCTO")
  uLP102.sLDRLNID   = ConvDecimalsToSQL("LNID", Trim(App.GetValue("SelLNID")))
  uLP102.sLDRNXTR   = msStsConf
  uLP102.sLDLOT2    = ""
  uLP102.sLDVUOM    = ""
  '
  'Public Type LPOper
  uLPOper.sLPID      = ""                        ' LP ID Child
  uLPOper.sFMCU      = App.GetValue("tmMCU")     ' from Plant
  uLPOper.sTMCU      = App.GetValue("tmMCU")     ' to Plant
  uLPOper.sFLOCN     = App.GetValue("tmFLOCN")   ' from Location
  uLPOper.sTLOCN     = App.GetValue("tmLOCN")    ' to Location
  uLPOper.nQty       = App.GetValue("tmQty")     ' Operation Qty.
  uLPOper.bIsPlate   = False                     ' Plate or Item
  uLPOper.bDetach    = False                     ' remove item
    '
  If Not LP_AttachDetach(uLPOper, uLP102) Then
    App.MsgBox(GetMsg(40))
    ' DB.RollbackTrans(gsLPSource)
    App.SetFocus "txtAccept"
    Exit Function
  End If

  ' db.committrans gsLPSource

  lblItemDesc.Caption = ""
  lblQty.Caption = ""
  '
  txtLOTN.Required = False
  txtLOTN.Visible = False
  '
  msHardLOTN = ""
  msHardLOCN = ""
  mbSerialized = False
  '
  ' update Listbox
  iLbCurr = lbxSO.List.Index                                             'current line
  iLblMax = lbxSO.List.Count                                             'current max line
  sVal = lbxSO.Text                                                     'get current value
  vArray = Split(sVal,"|")
  '
  If App.GetValue("tmQTY") = App.GetValue("SelQty") Or (App.GetValue("SelQty") - App.GetValue("tmQTY")) = 0 Then
    ' stamp current line as processed
    vArray(0) = "*"
    vArray(1) = App.GetValue("tmLOCN")
    vArray(3) = FixRight(App.GetValue("tmQTY"),giLenQTY," ")
    vArray(5) = FixLeft(App.GetValue("tmLOTN"),giLenLOTN," ")
    sVal = ""
    For I = 0 To UBound(vArray)
      sVal = sVal & vArray(I) & "|"
    Next I
    sVal = Left(sVal,Len(sVal) -1)                                                  'truncate last |
    sVal = Replace(sVal,"|",":")
    lbxSO.List.RemoveItem iLbCurr                                            'remove line
    lbxSO.List.InsertItem sVal, sVal,iLbCurr                                    'replace line   ' todo - upgrade: 'InsertLocn' is now first parameter
  Else
    ' add processed record *** Done
    vArray(0) = "*"
    vArray(1) = App.GetValue("tmLOCN")
    vArray(3) = FixRight(App.GetValue("tmQTY"),giLenQTY," ")
    vArray(5) = FixLeft(App.GetValue("tmLOTN"),giLenLOTN," ")
    sVal = ""
    For I = 0 To UBound(vArray)
      sVal = sVal & vArray(I) & "|"
    Next I
    sVal = Left(sVal,Len(sVal) -1)                                                   'truncate last |
    sVal = Replace(sVal,"|",":")
    lbxSO.List.InsertItem sVal, sVal,iLblMax +1                                  'add line   ' todo - upgrade: 'InsertLocn' is now first parameter
    ' replace processed record and change Line and Qty open
    vArray(0) = " "
    nLine = CInt(Mid(vArray(6),5,1))
    If nLine < 9 Then
      vArray(3) = FixRight(App.GetValue("SelQty") - App.GetValue("tmQTY"),(giLenQTY)," ")  'remaining Qty
      Mid(vArray(6),5,1) = CStr(nLine + 1)                                            'add .1 to current line
      sVal = ""
      For I = 0 To UBound(vArray)
        sVal = sVal & vArray(I) & "|"
      Next I
      sVal = Left(sVal,Len(sVal) -1)                                                   'truncate last |
      lbxSO.List.RemoveItem iLbCurr                                             'remove line
      lbxSO.List.InsertItem sVal, sVal,iLbCurr                                     'replace line   ' todo - upgrade: 'InsertLocn' is now first parameter
    End If
  End If
  '
  ' Get next line from listbox
  bOK = False
  iLbNext = iLbCurr

  For I = 1 To iLblMax
    If iLbNext >= iLblMax Then
      iLbNext = 1
    Else
      iLbNext = iLbNext +1
    End If
    lbxSO.List.Index = iLbNext
    sVal = lbxSO.Text
    If Left(sVal,1) <> "*" Then
      Call lbxSO_OnEnter(sVal, 1, "")
      App.SetFocus("txtLOCN")
      bOK = True
      Exit For
    End If
  Next I
  '
  txtLOCN.Text = ""
  txtLITM.Text = ""
  txtLOTN.Text = ""
  txtQTY.Text  = ""
  '
  Screen.Refresh

  If Not bOK Then
    Call lbxSO_OnEnter("*", 1, "")     ' if List.Data empty, go to 1st. page
    App.SetFocus("lbxSO")
  End If
  ExecuteTM = True

End Function

Public Function BlindExecute
  On Error Resume Next
  '
  Dim I       As Integer
  Dim nLine   As Integer
  Dim vArray  As Variant

  Dim emProc  As New EmbeddedProc
  '
  Dim iLblMax As Integer
  Dim sVal    As String
  Dim sData   As String

  BlindExecute = False

  iLblMax = lbxSO.List.Count                                           'max line

  For I = 1 To iLblMax
    lbxSO.List.Index = I
    sVal = lbxSO.Text                                                 'get current value
    vArray = Split(sVal,"|")
    If vArray(0) = "1" Then
      emProc.Name                = "TSOSC0100"
      emProc.DataSource          = gsDataSource
      emProc.Param("tmCO")       = App.GetValue("tmCO")
      emProc.Param("tmMCU")      = App.GetValue("tmMCU")
      emProc.Param("tmDOCO")     = App.GetValue("tmDOCO")
      emProc.Param("tmDCTO")     = App.GetValue("tmDCTO")
      emProc.Param("tmLITM")     = vArray(2)
      emProc.Param("tmLOTN")     = vArray(5)
      emProc.Param("tmLOCN")     = vArray(1)
      emProc.Param("tmQTY")      = vArray(3)
      emProc.Param("tmUOM")      = vArray(4)
      emProc.Param("tmLNID")     = vArray(6)
      emProc.Param("tmSHIPTO")   = App.GetValue("tmSHIPTO")
      emProc.Param("tmCARRIER")  = App.GetValue("tmCARRIER")
      emProc.Param("tmLNTY")     = vArray(7)
      emProc.Param("tmUSER")     = App.User
      emProc.Param("tmZVERSION") = msVersion
      emProc.Param("tmPGM")      = msPgm
      If Ext(gsLog,1) = "1" Then Call TranLog(cTNId, "1", emProc.Name, "", emProc)
      If gbQueueProcessing Then
        If gbQLoadBal Then emProc.QueueName = RFQBalance("", 0)

        If Not emProc.Queue Then
          App.MsgBox GetMsg(222) & vbCrLf & SysErr.Description
          App.SetFocus "txtAccept"
          Exit Function
        End If
      Else
        If Not emProc.Execute Then
          App.MsgBox GetMsg(221) & vbCrLf & emProc.Param("tmERRTEXT")
          If Ext(gsLog,2) = "1" Then Call TranLog(cTNId, "2", emProc.Name, "", emProc)
          App.SetFocus "txtAccept"
          Exit Function
        End If
      End If
      Mid$(sVal,1,1) = "*"
      lbxSO.List.RemoveItem I                  'remove line
      lbxSO.List.InsertItem sVal, sVal,I          'replace line   ' todo - upgrade: 'InsertLocn' is now first parameter
    ' Offline inventory
      If gbOfflineEnabled And msRelInv Then
        If Not WriteOI(App.GetValue("tmCO"),App.GetValue("tmMCU"),vArray(2),App.GetValue("tmITM"),"",vArray(4),"-" & CStr(vArray(3)),App.GetValue("tmDOCO"),App.GetValue("tmDCTO"),vArray(6),emProc.QueueName,emProc.QueueSeqNo, vArray(1),vArray(5)," ") Then
          App.MsgBox(GetMsg(31))
        End If
      End If
    End If
  Next I

  If mbAddFr Then
      sData = " -MCU="  & Trim(App.GetValue("tmMCU"))   & _
              " -DOCO=" & Trim(App.GetValue("tmDOCO"))  & _
              " -DCTO=" & Trim(App.GetValue("tmDCTO"))  & _
              " -Pgm=" & Trim(msPgm)  & _
              " -Vers=" & Trim(msVersion)
    App.CallForm("FSOAL0100" & sData,True,True)
  End If

  BlindExecute = True

End Function

Private Function X_LP101_A(ByRef uLP101 As LP101Data) As Boolean
  On Error Resume Next

  Dim sSql      As String
  Dim sCols     As String
  Dim sRows     As String
  '
  Dim sPfx      As String
  Dim sLPID     As String
  Dim sTNID     As String
  Dim nErrNo    As Long
  Dim nCtr      As Long

  Dim nCCube    As Currency
  Dim nCWeig    As Currency
  Dim nPCube    As Currency
  Dim nPWeig    As Currency
  Dim sPCube    As Currency
  Dim sPWeig    As Currency

  ' Get Next LP Number
  sSQL = "select ENUPFX,ENNNUM from LP002 where ENCO = '%tmENTITY'"
  nErrNo = DB.Execute(sSQL, sCols, sRows)
  '
  If Ext(gsLog,5) = "1" Then Call TranLog(sTNID, "5", "LP002", Replace(sSQL, "'", "`"))

  If nErrNo<>0 Then
    If Ext(gsLog,6) = "1" Then Call TranLog(sTNID, "6", "LP002", Replace(sSQL, "'", "`"))
    ' DB.RollbackTrans gsLPSource
    Exit Function
  End If
  '
  sPfx = Trim(DB.Extract(sCols,sRows,1,"ENUPFX"))
  If sPfx = "*" Then sPfx = Trim(App.GetValue("tmMCU"))

  nCtr = Val(DB.Extract(sCols,sRows,1,"ENNNUM"))
  sLPID = gsLPLead & sPfx & FixRight(nCtr, (giLenLP - (Len(sPfx) + Len(gsLPLead))), "0")
  uLP101.sLMLPID = sLPID

  nCtr = nCtr + 1
  '
  sSQL = "update  LP002" & _
         " set ENNNUM = " & nCtr & _
         " where ENCO = '%tmENTITY'"
  nErrNo = DB.Execute(sSQL)
  '
  If Ext(gsLog,5) = "1" Then Call TranLog(sTNID, "5", "LP002", Replace(sSQL, "'", "`"))

  If nErrNo<>0 Then
    If Ext(gsLog,6) = "1" Then Call TranLog(sTNID, "6", "LP002", Replace(sSQL, "'", "`"))
    ' DB.RollbackTrans gsLPSource
    Exit Function
  End If
  '
  ' update Parent with new weight / volume
  '
  If Len(uLP101.sLMPALP) > 0 Then
    nCCube = uLP101.nLMCUBE
    nCWeig = uLP101.nLMWEIG
    '
    ' get weight / volume from old parent
    '
    sSQL = "select LMWEIG, LMCUBE from  F55101" & _
           " where LMLPID = '" & uLP101.sLMPALP & "' "
    nErrNo = DB.Execute sSql, sCols, sRows
     '
    If Ext(gsLog,5) = "1" Then Call TranLog(sTNID, "5", "LP101", Replace(sSql, "'", "`"))

    If nErrNo<>0 Then
      If Ext(gsLog,6) = "1" Then Call TranLog(sTNID, "6", "LP101", Replace(sSql, "'", "`"))
      ' DB.RollbackTrans gsLPSource
      Exit Function
    End If
     '
    If (Len(sRows)=0) Then
      App.MsgBox(GetMsg(104) & ": " & uLP101.sLMPALP)
      ' DB.RollbackTrans gsLPSource
      Exit Function
    End If
    '
    nPCube = CCur(DB.Extract(sCols,sRows,1,"LMCUBE"))
    nPWeig = CCur(DB.Extract(sCols,sRows,1,"LMWEIG"))

    sPCube = nPCube + nCCube
    sPWeig = nPWeig + nCWeig

    sSql = " update F55101 set LMCUBE = '" & sPCube & "', LMWEIG = '" & sPWeig & "' " & _
           " where LMLPID = '" & uLP101.sLMPALP & "' "
    nErrNo = DB.Execute(sSql)
    '
    If nErrNo <> 0 Then
      ' DB.RollbackTrans gsLPSource
      Exit Function
    End If

  End If  ' update Parent with new weight / volume
  '
 sSql = "INSERT INTO F55101" & _
           " (LMLPID,LMMCU,LMDSC1,LMTYPE,LMLTYI,LMLOCN,LMRDOCO,LMRDCTO,LMRNXTR,LMPSTB,LMPALP,LMSHAN," & _
           " LMMMCU,LMALPH,LMROUT,LMSTOP,LMZON,LMCNID,LMCARS,LMPDAT,LMRLNU,LMIR01,LMIR02,LMIR03,LMIR04," & _
           " LMVUOM,LMCUBE,LMWUOM,LMWEIG,LMPATH,LMVR01,LMVR02,LMURAT,LMURRF,LMUSER,LMDATE,LMTIME)" & _
           " VALUES('" & uLP101.sLMLPID  & "'," & _
                   "'" & uLP101.sLMMCU   & "'," & _
                   "'" & uLP101.sLMDSC1  & "'," & _
                   "'" & uLP101.sLMTYPE  & "'," & _
                   "'" & uLP101.sLMTRAI  & "'," & _
                   "'" & uLP101.sLMLOCN  & "'," & _
                   "'" & uLP101.sLMRDOCO & "'," & _
                   "'" & uLP101.sLMRDCTO & "'," & _
                   "'" & uLP101.sLMRNXTR & "'," & _
                   "'" & uLP101.sLMPSTB  & "'," & _
                   "'" & uLP101.sLMPALP  & "'," & _
                         uLP101.nLMSHAN  & ","  & _
                   "'" & uLP101.sLMMMCU  & "'," & _
                   "'" & uLP101.sLMALPH  & "'," & _
                   "'" & uLP101.sLMROUT  & "'," & _
                   "'" & uLP101.sLMSTOP  & "'," & _
                   "'" & uLP101.sLMZONE  & "'," & _
                   "'" & uLP101.sLMCNID  & "'," & _
                         uLP101.nLMCARS  & ","  & _
                   "'" & uLP101.sLMPDAT  & "'," & _
                   "'" & uLP101.sLMRLNU  & "'," & _
                   "'" & uLP101.sLMIR01  & "'," & _
                   "'" & uLP101.sLMIR02  & "'," & _
                   "'" & uLP101.sLMIR03  & "'," & _
                   "'" & uLP101.sLMIR04  & "'," & _
                   "'" & uLP101.sLMVUOM  & "'," & _
                         uLP101.nLMCUBE  & ","  & _
                   "'" & uLP101.sLMWUOM  & "'," & _
                         uLP101.nLMWEIG  & ","  & _
                   "'" & uLP101.sLMPATH  & "'," & _
                   "'" & uLP101.sLMVR01  & "'," & _
                   "'" & uLP101.sLMVR02  & "'," & _
                         uLP101.nLMURAT  & ","  & _
                   "'" & uLP101.sLMURRF  & "'," & _
                   "'" & uLP101.sLMUSER  & "'," & _
                   "'" & uLP101.sLMDATE  & "'," & _
                   "'" & uLP101.sLMTIME  & "')"

  nErrNo = DB.Execute(sSql)

  If nErrNo<>0 Then
    If Ext(gsLog,6) = "1" Then Call TranLog(sTNID, "6", "LP101", Replace(sSql, "'", "`"))
    ' DB.RollbackTrans gsLPSource
    Exit Function
  End If

  Call PrintLabels("LP", 1, "", 0, "", "", App.GetValue("LMLPID"))

  X_LP101_A = True

End Function
</Code>
