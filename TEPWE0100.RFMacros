<Record FileDesc="EPM - Work Order Entry" FileVersion="5.0.8.0" Desc="EPM - Work Order Entry">
<Param Name="tmMCU" Location="68,4" Size="12" Value="M38" />
<Param Name="tmSUB" Location="68,5" Size="8" Value="310" />
<Param Name="tmASII" Location="19,7" Size="26" Value="10823      " />
<Param Name="tmLITM" Location="19,8" Size="26" Value="1001        " />
<Param Name="tmSTRT" Location="68,13" Size="8" Value="031606" />
<Param Name="tmDRQJ" Location="68,14" Size="8" Value="031606" />
<Param Name="tmDL01" Location="19,4" Size="29" Value="jfjfjfjfjfjfj" />
<Param Name="tmRMK" Location="19,20" Size="60" Value="remark" />
<Param Name="tmEQST" Location="55,15" Size="2" Value="DN" />
<Param Name="tmERRID" />
<Param Name="tmERRTEXT" />
<Param Name="tmUser" />
</Record>
<Code>
' -------------------------------------------------------------------------------
' | (C)opyright 2003-2012 The DataMAX Software Group, Inc., All Rights Reserved.|
' | RFgen JD Edwards Integration Suite Vers.# 420                               |
' -------------------------------------------------------------------------------
'
' TRANSACTION: EPM - WORK ORDER ENTRY
'
' NOTES:
'
' MODIFICATION HISTORY:
'

Option Explicit

Private Const cTNId     = "TEPWE0100"

Private Function Transaction(ByRef tmMCU As Variant, ByRef tmSUB As Variant, ByRef tmASII As Variant, ByRef tmLITM As Variant, ByRef tmSTRT As Variant, ByRef tmDRQJ As Variant, ByRef tmDL01 As Variant, ByRef tmRMK As Variant, ByRef tmEQST As Variant, ByRef tmERRID As Variant, ByRef tmERRTEXT As Variant, ByRef tmUser As Variant) As Boolean
  On Error Resume Next

  '---------------'
  '  Declarations '
  '---------------'
  Dim bSuccess    As Boolean
  Dim nBatchNo    As Currency
  Dim nJobNo      As Currency
  Dim sErrDesc    As String
  Dim sGLDate     As String
  Dim sTNDate     As String
  Dim sMCU        As String
  Dim sSql        As String
  Dim sRows       As String
  Dim sCols       As String
  Dim sCO         As String
  Dim sErrID      As String
  Dim sErrText    As String

  Dim emF4801BeginDocument    As New EmbeddedProc
  Dim emF4801EditLine         As New EmbeddedProc
  Dim emF4801EndDocument      As New EmbeddedProc
  Dim emError                 As New EmbeddedProc
  Dim emGetLocalComputerId    As New EmbeddedProc
  Dim emX0010GetNextNumber    As New EmbeddedProc
  Dim emGetAuditInfo          As New EmbeddedProc
  Dim emGetDefaultBranch      As New EmbeddedProc

  '----------------'
  ' Initialization '
  '----------------'
  Call SetEnvironment()  ' in case macro is running in TM
  '
  If Not gbIsE1 Then GoTo World
  '
  If Not ERP.BeginTrans Then  ' Force all business functions to use the same connection
    TM.AbortTrans
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", "ERP.BeginTrans failed" , "", Nothing, tmUser, TM.QueueName, TM.SeqNo)
    tmERRTEXT = "No ERP Handle - retry!"
    Exit Function
  End If
  '
  sTNDate = Format(Date, "mm/dd/yyyy")
  sGLDate = cDemoGLDate

  If (Len(sGLDate)=0) Then sGLDate = Format(Date, "mm/dd/yyyy")

  sMCU  = FixRight(tmMCU,12," ")

  '--------------------'
  ' GetLocalComputerId '
  '--------------------'
  emGetLocalComputerId.Name       = "GetLocalComputerId"
  emGetLocalComputerId.LogMode = LogNever
  emGetLocalComputerId.DebugLog   = cJDELogPath
  '
  If Ext(gsLog,3) = "1" Then Call TranLog(cTNId, "3", emGetLocalComputerId.Name, "", emGetLocalComputerId)

  If Not emGetLocalComputerId.Execute Then
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", emGetLocalComputerId.Name, "", emGetLocalComputerId, tmUser, TM.QueueName, TM.SeqNo)
    GoTo ExitE1
  End If

  '--------------'
  ' GetAuditInfo '
  '--------------'
  emGetAuditInfo.Name       = "GetAuditInfo"
  emGetAuditInfo.LogMode = LogNever
  emGetAuditInfo.DebugLog   = cJDELogPath
  '
  emGetAuditInfo.Param("UserName")              = " "
  emGetAuditInfo.Param("Date")                  = " "
  emGetAuditInfo.Param("Time")                  = " "
  emGetAuditInfo.Param("Workstation_UserId")    = " "
  emGetAuditInfo.Param("MachineKey")            = " "
  '
  If Ext(gsLog,3) = "1" Then Call TranLog(cTNId, "3", emGetAuditInfo.Name, "", emGetAuditInfo)
  '
  If Not emGetAuditInfo.Execute Then
    sErrDesc = "GetAuditInfo"
    tmERRTEXT = sErrDesc
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", emGetAuditInfo.Name, "", emGetAuditInfo, tmUser, TM.QueueName, TM.SeqNo)
    GoTo ExitE1
  End If

  ' Get required data from F0006
  sSql = "select MCCO from F0006 where MCMCU= '"& sMCU &"'"

  DB.Execute(sSql,sCols,sRows)
  '
  If Len(sRows) = 0 Then
    GoTo ExitE1
  Else
    sCO = DB.Extract(sCols,sRows,1,"MCCO")
  End If

  '------------------'
  ' GetDefaultBranch '
  '------------------'
  emGetDefaultBranch.Name       = "GetDefaultBranch"
  emGetDefaultBranch.LogMode = LogNever
  emGetDefaultBranch.DebugLog   = cJDELogPath
  '
  emGetDefaultBranch.Param("Branch")                = " "
  emGetDefaultBranch.Param("ApprovalRouteCode")    = " "
  '
  If Ext(gsLog,3) = "1" Then Call TranLog(cTNId, "3", emGetDefaultBranch.Name, "", emGetDefaultBranch)
  '
  If Not emGetDefaultBranch.Execute Then
    sErrDesc = "GetDefaultBranch"
    tmERRTEXT = sErrDesc
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", emGetDefaultBranch.Name, "", emGetDefaultBranch, tmUser, TM.QueueName, TM.SeqNo)
    GoTo ExitE1
  End If

  '--------------------'
  ' X0010GetNextNumber '
  '--------------------'
  emX0010GetNextNumber.Name       = "X0010GetNextNumber"
  emX0010GetNextNumber.LogMode = LogNever
  emX0010GetNextNumber.DebugLog   = cJDELogPath
  '
  emX0010GetNextNumber.Param("SystemCode")              = "48"
  emX0010GetNextNumber.Param("NextNumberingIndexNo")    = 1
  '
  If Ext(gsLog,3) = "1" Then Call TranLog(cTNId, "3", emX0010GetNextNumber.Name, "", emX0010GetNextNumber)
  '
  If Not emX0010GetNextNumber.Execute Then
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", emX0010GetNextNumber.Name, "", emX0010GetNextNumber, tmUser, TM.QueueName, TM.SeqNo)
    GoTo ExitE1
  End If

  '--------------------'
  ' F4801BeginDocument '
  '--------------------'
  emF4801BeginDocument.Name       = "F4801BeginDocument"
  emF4801BeginDocument.LogMode = LogNever
  emF4801BeginDocument.DebugLog   = cJDELogPath
  '
  emF4801BeginDocument.Param("InteractiveBatchFlag")    = "I"
  emF4801BeginDocument.Param("SuppressErrorMessages")   = "1"
  emF4801BeginDocument.Param("ProcessEdits")            = "1"
  emF4801BeginDocument.Param("ProcessModule")           = "CSMS"
  emF4801BeginDocument.Param("ProgramID")               = "EP17714"
  emF4801BeginDocument.Param("VersionID")               = "ZJDE0003"                      'do over
  '
  If Ext(gsLog,3) = "1" Then Call TranLog(cTNId, "3", emF4801BeginDocument.Name, "", emF4801BeginDocument)
  '
  If Not emF4801BeginDocument.Execute Then
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", emF4801BeginDocument.Name, "", emF4801BeginDocument, tmUser, TM.QueueName, TM.SeqNo)
    GoTo ExitE1
  End If
  '
  nJobNo = Val(emF4801BeginDocument.Param("JobNumber"))
  '
  If (nJobNo = 0) Then
    sErrDesc = "F4801BeginDocument(JobNumber)"
    GoTo ExitE1
  End If

  '---------------'
  ' F4801EditLine '
  '---------------'
  emF4801EditLine.Name       = "F4801EditLine"
  emF4801EditLine.LogMode = LogNever
  emF4801EditLine.DebugLog   = cJDELogPath
  '
  emF4801EditLine.Param("JobNumber")                  = nJobNo
  emF4801EditLine.Param("ActionCode")                 = "1"
  emF4801EditLine.Param("ProcessEdits")               = "1"
  emF4801EditLine.Param("ErrorCode")                  = "1"
  emF4801EditLine.Param("ProcessModule")              = "EM"
  emF4801EditLine.Param("SuppressErrorMessages")      = "1"
  emF4801EditLine.Param("ProcessToolEditing")         = "0"
  emF4801EditLine.Param("OrderType")                  = "WM"
  emF4801EditLine.Param("OrderNumber")                = emX0010GetNextNumber.Param("NextNumber001")
  emF4801EditLine.Param("WOType")                     = "1"
  emF4801EditLine.Param("WOPriority")                 = "M"
  emF4801EditLine.Param("WODescription")              = tmDL01
  emF4801EditLine.Param("Company")                    = sCO
  emF4801EditLine.Param("BusinessUnit")              = sMCU
  emF4801EditLine.Param("BranchPlant")                = emGetDefaultBranch.Param("Branch")
  emF4801EditLine.Param("WOStatus")                   = "M"
  emF4801EditLine.Param("Subsidiary")                 = tmSUB
  emF4801EditLine.Param("PlannedCompletionDate")      = Format(tmDRQJ, "mm/dd/yyyy")
  emF4801EditLine.Param("OrderDate")                  = Format(tmDRQJ, "mm/dd/yyyy")
  emF4801EditLine.Param("StartDate")                  = Format(tmSTRT, "mm/dd/yyyy")
  emF4801EditLine.Param("RequestedDate")              = Format(tmDRQJ, "mm/dd/yyyy")
  emF4801EditLine.Param("AssetNumber")                = tmASII
  emF4801EditLine.Param("QtyOrdered")                 = 1
  emF4801EditLine.Param("UnitOfMeasure")              = "EA"
  emF4801EditLine.Param("TypeOfBill")                 = "M"
  emF4801EditLine.Param("TypeOfRouting")              = "M"
  emF4801EditLine.Param("ItemNumberUnknownFormat")    = tmLITM
  emF4801EditLine.Param("Issue")                      = "."                                              'do over
  emF4801EditLine.Param("CreatedByUser")              = emGetAuditInfo.Param("UserName")
  '
  If Ext(gsLog,3) = "1" Then Call TranLog(cTNId, "3", emF4801EditLine.Name, "", emF4801EditLine)
  '
  If Not emF4801EditLine.Execute Then
    tmERRID = emF4801EditLine.Param("ErrorMessageID")
    sErrDesc = "F4801EditLine"
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", emF4801EditLine.Name, "", emF4801EditLine, tmUser, TM.QueueName, TM.SeqNo)
    GoTo ExitE1
  End If

  '------------------'
  ' F4801EndDocument '
  '------------------'
  emF4801EndDocument.Name       = "F4801EndDocument"
  emF4801EndDocument.LogMode = LogNever
  emF4801EndDocument.DebugLog   = cJDELogPath
  '
  emF4801EndDocument.Param("JobNumber")               = nJobNo
  emF4801EndDocument.Param("SuppressErrorMessages")   = "1"
  emF4801EndDocument.Param("BeginningTime")           = emGetAuditInfo.Param("Time")
  emF4801EndDocument.Param("BeginDate")               = emGetAuditInfo.Param("Date")
  emF4801EndDocument.Param("EquipmentStatus")         = tmEQST
  emF4801EndDocument.Param("InteractiveBatchFlag")    = "I"
  emF4801EndDocument.Param("WorkFileLineNumber")      = 1
  emF4801EndDocument.Param("NameRemark")              = tmRMK
  emF4801EndDocument.Param("ProcessEdits")            = "1"
  emF4801EndDocument.Param("ProcessModule")           = "EM"
  emF4801EndDocument.Param("ActionCode")              = "1"
  '
  If Ext(gsLog,3) = "1" Then Call TranLog(cTNId, "3", emF4801EndDocument.Name, "", emF4801EndDocument)
  '
  If Not emF4801EndDocument.Execute Then
    tmERRID = emF4801EndDocument.Param("ErrorMessageID")
    sErrDesc = "F4801EndDocument"
    If Ext(gsLog,4) = "1" Then Call TranLog(cTNId, "4", emF4801EndDocument.Name, "", emF4801EndDocument, tmUser, TM.QueueName, TM.SeqNo)
    GoTo ExitE1
  End If
  '
  bSuccess = True

'-------'
' Exits '
'-------'
ExitE1:
  If tmERRID <> "" Then
    emError.Name       = "GetErrorMessageGlossaryText"
    emError.LogMode = LogNever
    emError.DebugLog   = cJDELogPath
    emError.Param("ErrorMessageID") = tmERRID
    emError.Execute
    tmERRTEXT = emError.Param("GlossaryText_500Chars")
  Else
    tmERRTEXT = sErrDesc
  End If
  '
  Set emGetLocalComputerId    = Nothing
  Set emX0010GetNextNumber    = Nothing
  Set emGetAuditInfo          = Nothing
  Set emF4801BeginDocument    = Nothing
  Set emF4801EditLine         = Nothing
  Set emF4801EndDocument      = Nothing
  Set emError                 = Nothing
  Set emGetDefaultBranch      = Nothing
  '
  If Not bSuccess Then
    ERP.RollbackTrans
  Else
    ERP.CommitTrans
  End If
  '
  Transaction = bSuccess

  Exit Function
  '
World:
  Dim sDoc    As String

  ' Force all business functions to use the same connection
  If Not SM.BeginTrans Then
    TM.AbortTrans
    tmERRTEXT = "No ERP Handle - retry!"
    Exit Function
  End If
  '
  SM.GoToScreen("HEPWE0100")
  SM.SendTextAlt 19, 3,  "A"
  SM.SendTextAlt 19, 4,  tmDL01, 29
  SM.SendTextAlt 68, 5,  tmSUB,  8
  SM.SendTextAlt 68, 4,  tmMCU,  12
  SM.SendTextAlt 68, 5,  tmSUB,  8
  SM.SendTextAlt 19, 7,  tmASII, 26
  SM.SendTextAlt 19, 8,  tmLITM, 26
  SM.SendTextAlt 68, 13, tmSTRT, 8
  SM.SendTextAlt 68, 14, tmDRQJ, 8
  SM.SendTextAlt 19, 20, tmRMK,  25
  SM.SendKey KeyEnter
  '
  SM.SendTextAlt 55, 15, tmEQST, 2
  SM.SendKey KeyEnter
  '
  SM.GetText(56,1,24,sDoc,True)
  '
  If sDoc = "" Then GetWorldErr(sErrID, sErrText)  'Indicates a hard error has occured

  bSuccess = (sErrID = "")
  '
  tmERRID = sErrID
  tmERRTEXT = sErrText
  '
ExitWorld:
  SM.SendKey KeyF3                           ' Exit Screen
  SM.WaitForHost(10)
  SM.SendTextAlt 7, 19, gsSMMain              ' Goto back to SM Main Menu
  SM.SendKey KeyEnter

  SM.CommitTrans
  
  Transaction = bSuccess
  
End Function
</Code>
