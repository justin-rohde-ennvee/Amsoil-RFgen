<Record FileDesc="WD - Warehouse Director" FileVersion="5.0.8.0" Desc="WD - Warehouse Director" Depends="WM.bas">
<Param Name="parm1" />
</Record>
<Code>
' -------------------------------------------------------------------------------
' | (C)opyright 2003-2009 The DataMAX Software Group, Inc., All Rights Reserved.|
' | RFgen JD Edwards Integration Suite Vers.# 420                               |
' -------------------------------------------------------------------------------
'
' TRANSACTION: WAREHOUSE DIRECTOR
'
' NOTES:

' VALID STATUS CODES (PSTB)
' 320 = New request
' 321 = Work in process
' 391 = Request canceled
' 399 = Request completed

' JOB TYPES (TYFL)
' 1 = Put Away
' 2 = Pick
' 3 = Replenishment

'
' MODIFICATION HISTORY:
'

Option Explicit
Private Const cTNID      = "TWDXX0100"
Private Const cMinPct    = .10   ' Minimum level
Private Const cPLUom     = "PL"  ' Pallet unit of measure
Private Const cPSTB      = "320" ' Default request status

Private mbRepl      As Boolean   ' Check for replenishments true/false  (TYFL = 3)
Private mbPick      As Boolean   ' Check for picks true/false           (TYFL = 2)
Private mbPut       As Boolean   ' Check for putaway true/false         (TYFL = 1)
'
Private msMCU       As String    ' Default plants
Private msSOStatusF As String    ' SO status from
Private msSOStatusT As String    ' SO status to
Private msPutZone   As String    ' Put away zone ID (LMPZON)
Private msPickZone  As String    ' Pick zone ID (LMKZON)
Private msReplZone  As String    ' Replenishment zone ID (LMZONR)
Private mbLMW       As Boolean   ' Load Management Workbench (LMW) is used instead of F4211 for the pick source
Private msChk       As String    ' Checkboxes from WM Configuration
Private sPrioRepl   As String    ' default priority for replenishment
Private sPrioPut    As String    ' default priority for replenishment
Private sPrioPick   As String    ' default priority for replenishment
Private mnSGBT      As Long      ' Batch Number
Private mbOracleJDE As Boolean   ' JDE DB is Oracle?
Private mbOracleLP  As Boolean   ' LP DB is Oracle?

Private msErrDesc As String

Private Function Transaction(ByRef parm1 As Variant) As Boolean
  On Error Resume Next
  '
  Dim bSuccess As Boolean
  Dim vArray   As Variant
  Dim vArray2  As Variant
  Dim iCnt     As Integer
  '
  gbLPSilent = True
  '
  ' Load values from System Properties
  '
  vArray = Split(SYS.GetProperty("Config", "Env"), "|")
  mbOracleJDE = (vArray(9) = "Oracle")
  mbOracleLP  = (vArray(10) = "Oracle")

  msChk = Trim(SYS.GetProperty("WD", "Boxes"))
  '
  mbPut  = Ext(msChk, 1) = "1"   ' Check for putaway true/false (TYFL = 1)
  mbPick = Ext(msChk, 6) = "1"   ' Check for picks true/false (TYFL = 2)
  mbRepl = Ext(msChk, 9) = "1"   ' Check for replenishments true/false (TYFL = 3)
  '
  If Len(SYS.GetProperty("WD", "PrioPut")) > 0 Then
    sPrioPut  = SYS.GetProperty("WD", "PrioPut")
  Else
    sPrioPut  = "5"
  End If
  '
  If Len(SYS.GetProperty("WD", "PrioPick")) > 0 Then
    sPrioPick  = SYS.GetProperty("WD", "PrioPick")
  Else
    sPrioPick  = "5"
  End If
  '
  If Len(SYS.GetProperty("WD", "PrioRepl")) > 0 Then
    sPrioRepl  = SYS.GetProperty("WD", "PrioRepl")
  Else
    sPrioRepl  = "5"
  End If
  '
  vArray = Split(SYS.GetProperty("WD", "MCU"),";")
  For iCnt = 0 To UBound(vArray)
    vArray2 = Split(vArray(iCnt),"|")
    msMCU = msMCU & "'" & vArray2(0) & "',"
  Next iCnt
  '
  msMCU  = Left(msMCU, Len(msMCU) -2 )  ' cut off last ","
  msMCU  = "(" & msMCU & ")"
  mnSGBT = WDNN()

  ' Process Putaways (TYFL = 1)
  If mbPut Then
    If Not Putaway Then
      App.LogError(cTNID, GetMsg(221) & msErrDesc)
      bSuccess = False
      GoTo ExitMe
    End If
  End If

  ' Process Picks (TYFL = 2)
  If mbPick Then
    If Not Pick Then
      App.LogError(cTNID, GetMsg(221) & msErrDesc)
      bSuccess = False
      GoTo ExitMe
    End If
  End If

  ' Process Replenishments (TYFL = 3)
  If mbRepl Then
    If Not Replenish Then
      App.LogError(cTNID, GetMsg(221) & msErrDesc)
      bSuccess = False
      GoTo ExitMe
    End If
  End If

  ' Notify users of any open requests
'  Call Notifications

  bSuccess = True

  ExitMe:

  If Not bSuccess Then
    App.LogError(cTNID, GetMsg(221))
  End If

  Transaction = bSuccess
  '
  gbLPSilent = False
  '
End Function

Private Function Putaway As Boolean
  On Error Resume Next

  Dim sSql     As String
  Dim sCols    As String
  Dim sRows    As String
  Dim sColsInv As String
  Dim sRowsInv As String
  Dim sColsJB  As String
  Dim sRowsJB  As String
  Dim sRowsPR  As String
  Dim sColsPR  As String
  Dim sColsLP  As String
  Dim sRowsLP  As String
  Dim sTYFL    As String
  Dim sITM     As String
  Dim sLITM    As String
  Dim sFLOC    As String
  Dim sFLOT    As String
  Dim sTLOC    As String
  Dim sTLOT    As String
  Dim sUOM     As String
  Dim sRCDJ    As String
  Dim sTRDJ    As String
  Dim sDRQJ    As String
  Dim sUser    As String
  Dim sPID     As String
  Dim sUPMJ    As String
  Dim sTDAY    As String
  Dim sDSC1    As String
  Dim sDSC2    As String
  Dim sSKLocn  As String
  Dim sSKLpid  As String
  Dim sDOCO    As String
  Dim sDCTO    As String
  Dim sLNID    As String
  Dim sMCU     As String
  Dim sLPID    As String
  Dim sNLIN    As String
  Dim sPutZone As String
  Dim sSelLocn As String
  Dim sItem    As String
  Dim sAITM    As String
  Dim sPrio    As String

  Dim bSerialized As Boolean
  Dim bHasLots As Boolean
  Dim nSGSQ    As Long
  Dim nType    As Long
  Dim nQTY     As Currency
  Dim nMinQty  As Currency
  Dim nFQTY    As Currency
  Dim nPQOH    As Currency
  Dim nQtyOpen As Currency

  Dim iRowCnt  As Integer
  Dim iCnt     As Integer
  Dim iRowCnt2 As Integer
  Dim iCnt2    As Integer
  Dim iFind    As Integer

  Dim nErrNo   As Long
  '
  Dim uLP101 As LP101Data       ' create LP101 Structure
  Dim uLP102 As LP102Data       ' create LP101 Structure
  '
  Putaway = False
  '
  sPutZone = SYS.GetProperty("WD", "ZonePut")
  '
  ' Get Locations that fit the WM configuration
  '
  sSql = "select LMLOCN from F4100 where LMMCU in " & msMCU & " and LMPZON = '" & sPutZone & "' "
  DB.Execute(sSql, sCols, sRows)

  iRowCnt = DB.Count(sRows)

  ' find putaway requests locations
  '
  For iCnt = 1 To iRowCnt
    sSelLocn = sSelLocn & "'" & DB.Extract(sCols,sRows,iCnt,1) & "',"
  Next iCnt
  sSelLocn = Left(sSelLocn, Len(sSelLocn) -1 )   ' cut off last ","
  sSelLocn = "(" & sSelLocn & ")"
  '
  '-------------------------------------------------------------------------------------
  ' Get Put Away request from LP Tables
  '-------------------------------------------------------------------------------------
  If Ext(msChk, 2)  = "1" Then
  '
    sSql = "select LMLPID, LMMCU, LMLOCN, LMPRIO from F55101 " & _
           " where LMLOCN in " & sSelLocn & " and LMSGBT = 0 order by LMLPID"
    DB.Execute(sSql, sCols, sRows)
    '
    iRowCnt = DB.Count(sRows)

    ' find putaway requests locations
    '
    For iCnt = 1 To iRowCnt
    '
      Call LP102_Reset(uLP102)      ' init LP102 Structure
      uLP102.sLDLPID = DB.Extract(sCols,sRows,iCnt,"LMLPID")
      If Not X_LP102("I",uLP102) Then   ' Inquiry on LP102
        App.LogError(cTNID, GetMsg(104) & uLP102.sLDLPID)
      Else
        '
        ' Generate putaway requests
        '
        sMCU  = DB.Extract(sCols,sRows,iCnt,"LMMCU")
        App.SetValue("tmMCU", sMCU)
        sTYFL = "1"
        sLPID = uLP102.sLDLPID
        sDOCO = CStr(Val(uLP102.sLDRDOCO))
        sDCTO = uLP102.sLDRDCTO
        sLNID = CStr(uLP102.sLDRLNID)
        nQTY  = uLP102.nLDUORG
        sUOM  = uLP102.sLDUOM
        sLITM = uLP102.sLDLITM
        sFLOC = DB.Extract(sCols,sRows,iCnt,"LMLOCN")
        sFLOT = uLP102.sLDLOTN
        '
        Validate_Item(sMCU,uLP102.sLDLITM,sITM,sLITM,sAITM,sDSC1,sUOM,nType,bHasLots,bSerialized,True,True)
        GetItemPrimary(sMCU, sITM, sFLOT, sTLOC)
        '
        ' In case database is Oracle
        If mbOracleLP Then
          If Len(Trim(sFLOT)) = 0 Then sFLOT = " "
          If Len(Trim(sFLOC)) = 0 Then sFLOC = " "
        End If

        sTLOT = sFLOT
        sRCDJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
        sTRDJ = "0"
        sDRQJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
        sUser = App.User
        sPID  = cTNID
        sUPMJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
        sTDAY = Format(Time, "hhnnss")
        sDSC1 = Replace(sDSC1, "'", "`")
        sDSC2 = ""
        sPrio = DB.Extract(sCols,sRows,iCnt,"LMPRIO")
        '
        sSql = "insert into WDJOBS" & _
               " (R2TYFL, R2SGBT, R2SGSQ, R2MCU, R2ITM, R2LITM, R2UOM1, R2TQTY, R2FLOC," & _
               " R2FLOT, R2TLOC, R2TLOT, R2DSC1, R2DSC2, R2RCDJ, R2TRDJ, R2DRQJ," & _
               " R2USER, R2PID, R2UPMJ, R2TDAY, R2PSTB, R2DOCO, R2DCTO, R2LNID, R2LPID, R2PRITY)" & _
               " values(" & _
               "'" & sTYFL & "'" & "," & _
                     mnSGBT      & "," & _
                     nSGSQ       & "," & _
               "'" & sMCU  & "'" & "," & _
                     sITM        & "," & _
               "'" & sLITM & "'" & "," & _
               "'" & sUOM  & "'" & "," & _
                     nQTY        & "," & _
               "'" & sFLOC & "'" & "," & _
               "'" & sFLOT & "'" & "," & _
               "'" & sTLOC & "'" & "," & _
               "'" & sTLOT & "'" & "," & _
               "'" & sDSC1 & "'" & "," & _
               "'" & sDSC2 & "'" & "," & _
                     sRCDJ       & "," & _
                     sTRDJ       & "," & _
                     sDRQJ       & "," & _
               "'" & sUser & "'" & "," & _
               "'" & sPID  & "'" & "," & _
                     sUPMJ       & "," & _
                     sTDAY       & "," & _
               "'" & cPSTB & "'" & "," & _
                     sDOCO       & "," & _
               "'" & sDCTO & "'" & "," & _
                     sLNID       & "," & _
               "'" & sLPID & "'" & "," & _
               "'" & sPrio & "'" & ")"
        nErrNo = DB.Execute(sSql)

        If nErrNo <> 0 Then
          App.LogError(cTNID, GetMsg(45))
        End If
        '
        Call LP101_Reset(uLP101)      ' init LP101 Structure
        uLP101.sLMLPID = uLP102.sLDLPID
        '
        If Not X_LP101("I",uLP101) Then   ' Inquiry on LP102
          App.LogError(cTNID, GetMsg(104) & uLP101.sLMLPID)
        Else
          uLP101.nLMSGBT = mnSGBT
          If Not X_LP101("C",uLP101) Then   ' Update LP101
            App.LogError(cTNID, GetMsg(47) & uLP102.sLDLPID)
          End If
        End If
      End If
    Next iCnt
    '
      '
  Putaway = True

  End If
  '-------------------------------------------------------------------------------------
  ' Get Put Away request from JDE Tables
  '-------------------------------------------------------------------------------------
  If Ext(msChk, 3)  = "1" Then
    '
  Putaway = False
    '
    ' Fetch demand locations
    sSql = "Select LIITM, IMLITM, LIPQOH, IMDSC1, IMDSC2, LILOCN, LILOTN, LIMCU, IMUOM1 from F41021" & _
           " inner join F4101 on LIITM = IMITM" & _
           " inner join F4100 on LILOCN = LMLOCN" & _
           " where LIMCU in(" & msMCU & ") and LMPZON = '" & sPutZone & "' and LIPQOH > 0"
    DB.Execute(sSql, sCols, sRows)

    iRowCnt = DB.Count(sRows)

    ' Generate putaway requests
    For iCnt = 1 To iRowCnt

      sTYFL = "1"
      sMCU  = DB.Extract(sCols, sRows, iCnt, "LIMCU")
      sITM  = DB.Extract(sCols, sRows, iCnt, "LIITM")
      sUOM  = DB.Extract(sCols, sRows, iCnt, "IMUOM1")
      sLITM = Trim(DB.Extract(sCols, sRows, iCnt, "IMLITM"))
      sFLOC = Trim(DB.Extract(sCols, sRows, iCnt, "LILOCN"))
      sFLOT = Trim(DB.Extract(sCols, sRows, iCnt, "LILOTN"))
      sRCDJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
      sTRDJ = "0"
      sDRQJ = sRCDJ
      sUser = App.User
      sPID  = cTNID
      sUPMJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
      sTDAY = Format(Time, "hhnnss")
      sDSC1 = Replace(DB.Extract(sCols, sRows, iCnt, "IMDSC1"), "'", "`")
      sDSC2 = Replace(DB.Extract(sCols, sRows, iCnt, "IMDSC2"), "'", "`")

      sDSC1 = Replace(sDSC1, "'", "`")
      sDSC1 = Replace(sDSC2, "'", "`")

      ' In case database is Oracle.
      If mbOracleJDE Then
        If Len(Trim(sFLOT)) = 0 Then sFLOT = " "
        If Len(Trim(sFLOC)) = 0 Then sFLOC = " "
      End If

      ' Get PO receipt
      sSql = "Select PRMATC, PRDOCO, PRDCTO, PRLNID, PRNLIN, PRITM, PRLITM, PRUORG, PRUREC," & _
             " PRUOM, PRNXTR from F43121" & _
             " where PRMCU = '" & sMCU & "' and PRITM = " & sITM & " and PRLOTN = '" & sFLOT & "'" & _
             " and PRLOCN = '" & sFLOC & "' and PRMATC = '1'"
      DB.Execute(sSql, sColsPR, sRowsPR)

      If Len(sRowsPR) > 0 Then

        sDOCO = DB.Extract(sColsPR, sRowsPR, 1, "PRDOCO")
        sDCTO = DB.Extract(sColsPR, sRowsPR, 1, "PRDCTO")
        sLNID = DB.Extract(sColsPR, sRowsPR, 1, "PRLNID")
        nQTY  = DB.Extract(sColsPR, sRowsPR, 1, "PRUREC")
        sNLIN = DB.Extract(sColsPR, sRowsPR, 1, "PRNLIN")

        sSql = "select count(*) from F43121" & _
                " where PRMCU = '" & sMCU & "' and PRDOCO = '" & sDOCO & "'" & _
                " and PRDCTO = '" & sDCTO & "' and PRNLIN = " & sNLIN & " and PRLNID = " & sLNID & _
                " and PRMATC > '1'

        DB.Execute(sSql, sColsPR, sRowsPR)

        If Val(sRowsPR) = 0 Then

          ' Find a put away location
          sSql = "select LILOCN from F41021" & _
                 " inner join F4100 on LILOCN = LMLOCN" & _
                 " where LIMCU = '" & sMCU & "' and LIITM = " & sITM & " and LIPQOH = 0" & _
                 " and LMPZON <> '" & sPutZone & "'"

          If sSKLocn <> "" Then sSql = sSql & " and LILOCN not in(" & sSKLocn & ")"
          If Trim(sFLOT) <> "" Then sSql = sSql & " and LILOCN not in('', ' ')"

          sSql = sSql & " order by LILOTN, LIPQOH, LILOCN"

          DB.Execute(sSql, sColsInv, sRowsInv)

          If Len(sRowsInv) = 0 Then
            GetItemPrimary(sMCU, sITM, "", sTLOC)
            Validate_Locn(sTLOC, sMCU, sTLOC)
            sTLOC = Trim(sTLOC)
          Else
            sTLOC = DB.Extract(sColsInv, sRowsInv, 1, "LILOCN")
          End If

          sTLOT = sFLOT


          ' Add LP number to the putaway request
          sLPID = ""

          ' In case database is Oracle.
          If mbOracleLP Then
            If Len(Trim(sFLOT)) = 0 Then sFLOT = " "
            If Len(Trim(sFLOC)) = 0 Then sFLOC = " "
            If Len(Trim(sTLOT)) = 0 Then sTLOT = " "
            If Len(Trim(sTLOC)) = 0 Then sTLOC = " "
            sLPID = " "
          End If

          sSql = "select LDLPID from F55102" & _
                 " inner join F55101 on LDLPID = LMLPID" & _
                 " where LDLITM = '" & sLITM & "' and LMLOCN = '" & sFLOC & "' and LDLOTN = '" & sFLOT & "'"

          If sSKLpid <> "" Then sSql = sSql & " and LDLPID not in(" & sSKLpid & ")"

          DB.Execute(sSql, sColsLP, sRowsLP)

          If Len(sRowsLP) > 0 Then
            sLPID = Trim(DB.Extract(sColsLP, sRowsLP, 1, "LDLPID"))
          End If


          ' Create putaway request
          sSql = "select count(*) from WDJOBS" & _
                 " where R2TYFL = '" & sTYFL & "' and R2MCU = '" & sMCU & "' and R2ITM = " & sITM & _
                 " and R2FLOT = '" & sFLOT & "' and R2FLOC = '" & sFLOC & "' and R2TLOT = '" & sTLOT & "'" & _
                 " and R2TLOC = '" & sTLOC & "' and R2NLIN = " & sNLIN & " and R2DOCO = " & sDOCO & _
                 " and R2DCTO = '" & sDCTO & "' and R2LNID = " & sLNID & " and R2LPID = '" & sLPID & "'"

          DB.Execute(sSql, sColsJB, sRowsJB)

          If Val(sRowsJB) = 0 Then

            nSGSQ = nSGSQ + 1

            sSql = "insert into WDJOBS" & _
                   " (R2TYFL" & _
                   ",R2SGBT" & _
                   ",R2SGSQ" & _
                   ",R2PSTB" & _
                   ",R2MCU" & _
                   ",R2ITM" & _
                   ",R2LITM" & _
                   ",R2UOM1" & _
                   ",R2TQTY" & _
                   ",R2FLOC" & _
                   ",R2FLOT" & _
                   ",R2TLOC" & _
                   ",R2TLOT" & _
                   ",R2DSC1" & _
                   ",R2DSC2" & _
                   ",R2DOCO" & _
                   ",R2DCTO" & _
                   ",R2LNID" & _
                   ",R2RCDJ" & _
                   ",R2TRDJ" & _
                   ",R2DRQJ" & _
                   ",R2LPID" & _
                   ",R2USER" & _
                   ",R2PID" & _
                   ",R2UPMJ" & _
                   ",R2TDAY" & _
                   ",R2NLIN)" & _
                   " values(" & _
                   "'" & sTYFL & "'" & "," & _
                         mnSGBT      & "," & _
                         nSGSQ       & "," & _
                   "'" & cPSTB & "'" & "," & _
                   "'" & sMCU  & "'" & "," & _
                         sITM        & "," & _
                   "'" & sLITM & "'" & "," & _
                   "'" & sUOM  & "'" & "," & _
                         nQTY        & "," & _
                   "'" & sFLOC & "'" & "," & _
                   "'" & sFLOT & "'" & "," & _
                   "'" & sTLOC & "'" & "," & _
                   "'" & sTLOT & "'" & "," & _
                   "'" & sDSC1 & "'" & "," & _
                   "'" & sDSC2 & "'" & "," & _
                         sDOCO       & "," & _
                   "'" & sDCTO & "'" & "," & _
                         sLNID       & "," & _
                         sRCDJ       & "," & _
                         sTRDJ       & "," & _
                         sDRQJ       & "," & _
                   "'" & sLPID & "'" & "," & _
                   "'" & sUser & "'" & "," & _
                   "'" & sPID  & "'" & "," & _
                         sUPMJ       & "," & _
                         sTDAY       & "," & _
                         sNLIN & ")"

            nErrNo = DB.Execute(sSql)

            If nErrNo <> 0 Then
              App.LogError(cTNID, GetMsg(45))
            End If

          End If

          ' save location as "processed"
          iFind = InStr(sSKLocn, sFLOC)

          If iFind = 0 Then
            If Len(sSKLocn) > 0 Then sSKLocn = sSKLocn & ","
            sSKLocn = sSKLocn & "'" & sFLOC & "',"
            sSKLocn = Left(sSKLocn, Len(sSKLocn) -1)     ' cut last ","
          End If

          ' save LP as "processed"
          iFind = InStr(sSKLpid, sLPID)

          If iFind = 0 Then
            If Len(sSKLpid) > 0 Then sSKLpid = sSKLpid & ","
            sSKLpid = sSKLpid & "'" & sLPID & "',"
            sSKLpid = Left(sSKLpid, Len(sSKLpid) -1)     ' cut last ","
          End If

        End If
      End If

    Next
  End If
  '
  Putaway = True

End Function

Private Function Replenish As Boolean
  On Error Resume Next

  Dim sSql     As String
  Dim sCols    As String
  Dim sRows    As String
  Dim sColsInv As String
  Dim sRowsInv As String
  Dim sColsJB  As String
  Dim sRowsJB  As String
  Dim sColsWM  As String
  Dim sRowsWM  As String
  Dim sColsLI  As String
  Dim sRowsLI  As String
  Dim sTYFL    As String
  Dim sITM     As String
  Dim sLITM    As String
  Dim sLOCN    As String
  Dim sFLOC    As String
  Dim sFLOT    As String
  Dim sTLOC    As String
  Dim sTLOT    As String
  Dim sUOM     As String
  Dim sRCDJ    As String
  Dim sTRDJ    As String
  Dim sDRQJ    As String
  Dim sUser    As String
  Dim sPID     As String
  Dim sUPMJ    As String
  Dim sTDAY    As String
  Dim sDSC1    As String
  Dim sDSC2    As String
  Dim sSKLocn  As String
  Dim sMCU     As String
  Dim sReplZone As String
  Dim sPutZone As String
  Dim sSqlStrg As String
  Dim sPrio    As String
  Dim sXPDT    As String

  Dim nSGSQ    As Currency
  Dim nQTY     As Currency
  Dim nQtyI    As Currency
  Dim nFQTY    As Currency
  Dim nPQOH    As Currency
  Dim nOutb    As Currency
  Dim nHCOM    As Currency
  Dim nQtyOpen As Currency
  Dim nQtyReor As Currency
  Dim nQtyRepl As Currency

  Dim iRowCnt  As Integer
  Dim iCnt     As Integer
  Dim iRowCnt2 As Integer
  Dim iCnt2    As Integer
  Dim iRowCnt3 As Integer
  Dim iCnt3    As Integer
  Dim iFind    As Integer

  Dim nErrNo   As Long

  '
  sReplZone = SYS.GetProperty("WD", "ZoneRepl")
  sPutZone  = SYS.GetProperty("WD", "ZonePut")
  '
  ' Fetch demanding locations
  '
  sSql = "select IMITM, IMLITM, LILOCN, LILOTN, LIPQOH, LIHCOM, IMUOM1, IMDSC1, IMDSC2, LIMCU, LIITM, IBROPI, IBROQI from F41021" & _
         " inner join F4100 on LIMCU = LMMCU and LILOCN = LMLOCN" & _
         " inner join F4101 on LIITM = IMITM" & _
         " inner join F4102 on IBMCU = LMMCU and IBITM = IMITM" & _
         " where LIMCU in " & msMCU & " and LMZONR = '" & sReplZone & "' and IBROQI <> 0 and IBROQI <> 0  and (LIPQOH - LIHCOM) <= IBROPI " & _
         " order by LILOCN, IMLITM"
  DB.Execute(sSql, sCols, sRows)

  iRowCnt = DB.Count(sRows)

  For iCnt = 1 To iRowCnt
    '
    ' Location has fallen to minimum level?
    '
    sITM    = DB.Extract(sCols, sRows, iCnt, "IMITM")
    sUOM    = DB.Extract(sCols, sRows, iCnt, "IMUOM1")
    sMCU    = DB.Extract(sCols, sRows, iCnt, "LIMCU")
    sLOCN   = DB.Extract(sCols, sRows, iCnt, "LILOCN")

    ' In case database is Oracle.
    If mbOracleJDE Then
      If Len(sLOCN) = 0 Then sLOCN = " "
    End If
    '
    nQtyRepl  = ConvDecimalsFromSQL("ROQI", DB.Extract(sCols, sRows, iCnt, "IBROQI"))     ' repl.qty
    nQtyReor  = ConvDecimalsFromSQL("ROPI", DB.Extract(sCols, sRows, iCnt, "IBROPI"))     ' reorder point
    sSql = "select sum(LIPQOH), sum(LIHCOM), sum(LIQTRI) from F41021 where LIMCU = '" & sMCU & "' and LILOCN = '" & sLOCN & "' and LIITM = " & sITM
    DB.Execute(sSql,sColsLI, sRowsLI)
    nPQOH     = ConvDecimalsFromSQL("PQOH", DB.Extract(sColsLI, sRowsLI, 1, 1))     ' qty on hand
    nHCOM     = ConvDecimalsFromSQL("PQOH", DB.Extract(sColsLI, sRowsLI, 1, 2))     ' hard commited SO
    sTLOC     = DB.Extract(sCols, sRows, iCnt, "LILOCN")
    '
    ' reduce repl.quantity with qty. onHand
    '

'    If Not ConvUOM(sITM, nPQOH, cPLUom, sUOM) Then
'      msErrDesc = GetMsg(220)
'      Exit Function
'    End If

    ' In case database is Oracle.
    If mbOracleJDE Then
      If Len(Trim(sTLOC)) = 0 Then sTLOC = " "
    End If

    '
    ' Check if there is a replenishment in WDJOBS already
    '
    sSql = "select sum(R2TQTY) from WDJOBS" & _
           " where R2TYFL = '" & sTYFL & "' and R2MCU = '" & sMCU & "' and R2ITM = " & sITM & _
           " and R2TLOC = '" & sTLOC & "' and R2PSTB in ('320','321')"
    DB.Execute(sSql, sColsJB, sRowsJB)
    nQtyI = CCur(DB.Extract(sColsJB, sRowsJB, 1 ,1))
    '
    If (nPQOH - nHCOM) <= nQtyReor Then       'needs replenishment
      '
      sTYFL = "3"
      sLITM = DB.Extract(sCols, sRows, iCnt, "IMLITM")
      sRCDJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
      sTRDJ = "0"
      sDRQJ = sRCDJ
      sUser = App.User
      sPID  = cTNID
      sUPMJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
      sTDAY = Format(Time, "hhnnss")
      sDSC1 = Replace(DB.Extract(sCols, sRows, iCnt, "IMDSC1"), "'", "`")
      sDSC2 = Replace(DB.Extract(sCols, sRows, iCnt, "IMDSC2"), "'", "`")
      sMCU  = DB.Extract(sCols, sRows, iCnt, "LIMCU")
      '
      ' Find locations to replenish from
      '
      Call GetItemAvailSQL(sMCU, sSqlStrg)
      sSqlStrg = Replace(sSqlStrg,")"," -LIQTRO)")       ' reduce Outbound Qty from prior replenishment

      sSql = "select LILOCN, LILOTN, " & sSqlStrg & " , IOMMEJ from F41021" & _
           " inner join F4100 on LIMCU = LMMCU and LILOCN = LMLOCN" & _
           " left join F4108 on LILOTN = IOLOTN and LIITM = IOITM and LIMCU = LMMCU " & _
           " where LIMCU = '" & sMCU & "' and LIITM = " & sITM & " and " & sSqlStrg & " > 0" & _
           " and LILOTS in(' ', '') and LMZONR <> '" & sReplZone & "' and LMPZON <> '" & sPutZone & "' " & _
           " order by IOMMEJ, IOLOTN"                    ' exclude Put Away Zone
      '
      DB.Execute(sSql, sColsInv, sRowsInv)
      '
      iRowCnt2 = DB.Count(sRowsInv)
      nQtyOpen = nQtyRepl -nQtyI
      '--------------------------------------------------------------
      ' loop to get repl. from bulk warehouse
      '--------------------------------------------------------------
      For iCnt2 = 1 To iRowCnt2

        sFLOC = DB.Extract(sColsInv, sRowsInv, iCnt2, "LILOCN")
        sFLOT = Trim(DB.Extract(sColsInv, sRowsInv, iCnt2, "LILOTN"))
        sXPDT = ConvJDEtoDate(DB.Extract(sColsInv, sRowsInv, iCnt2, "IOMMEJ"))
        nPQOH = ConvDecimalsFromSQL("PQOH",DB.Extract(sColsInv, sRowsInv, iCnt2, 3))

        If nQtyOpen <= nPQOH Then
          nFQTY = nQtyOpen
        Else
          nFQTY = nPQOH
        End If

        ' In case database is Oracle
        If mbOracleLP Then
          If Len(Trim(sFLOT)) = 0 Then sFLOT = " "
          If Len(Trim(sFLOC)) = 0 Then sFLOC = " "
        End If

        ' Create replenishment request
          sSql = "insert into WDJOBS" & _
                 " (R2TYFL, R2SGBT, R2SGSQ, R2MCU, R2ITM, R2LITM, R2UOM1, R2TQTY, R2FLOC," & _
                 " R2FLOT, R2TLOC, R2TLOT, R2DSC1, R2DSC2, R2RCDJ, R2TRDJ, R2DRQJ,R2URRF," & _
                 " R2USER, R2PID, R2UPMJ, R2TDAY, R2PRITY, R2PSTB)" & _
                 " values(" & _
                 "'" & sTYFL & "'" & "," & _
                       mnSGBT      & "," & _
                       nSGSQ       & "," & _
                 "'" & sMCU  & "'" & "," & _
                       sITM        & "," & _
                 "'" & sLITM & "'" & "," & _
                 "'" & sUOM  & "'" & "," & _
                       nFQTY       & "," & _
                 "'" & sFLOC & "'" & "," & _
                 "'" & sFLOT & "'" & "," & _
                 "'" & sTLOC & "'" & "," & _
                 "'" & sTLOT & "'" & "," & _
                 "'" & sDSC1 & "'" & "," & _
                 "'" & sDSC2 & "'" & "," & _
                       sRCDJ       & "," & _
                       sTRDJ       & "," & _
                       sDRQJ       & "," & _
                 "'" & sXPDT & "'" & "," & _
                 "'" & sUser & "'" & "," & _
                 "'" & sPID  & "'" & "," & _
                       sUPMJ       & "," & _
                       sTDAY       & "," & _
                       sPrioRepl   & "," & _
                 "'" & cPSTB & "'" & ")"
          If nFQTY > 0 Then
            nErrNo = DB.Execute(sSql)
          End If

          If nErrNo <> 0 Then
            App.LogError(cTNID, GetMsg(45))
            Exit Function
          End If
          '
          ' In case database is Oracle
          If mbOracleJDE Then
            If Len(Trim(sFLOT)) = 0 Then sFLOT = " "
            If Len(Trim(sFLOC)) = 0 Then sFLOC = " "
          End If

          sSql = "update F41021 set LIQTRO = LIQTRO + " & ConvDecimalsToSQL("QTRO",nFQTY) & _
                 " where LIITM = " & sITM & " and LIMCU = '" & sMCU & "' and  LILOCN = '" & sFLOC & "' and LILOTN = '" & sFLOT & "' "
          DB.Execute(sSql)

        nQtyOpen = nQtyOpen - nFQTY
        If nQtyOpen <= 0 Then Exit For
      Next iCnt2
      '
      '--------------------------------------------------------------
      ' replenish from receiving location if not enough in warehouse
      '--------------------------------------------------------------
      '
      If nQtyOpen > 0 Then
        '
        sSql = "select * from WDJOBS" & _
               " left join F4108 on R2FLOT = IOLOTN and R2ITM = IOITM and R2MCU = IOMCU " & _
               " where R2TYFL = '1' and R2MCU = '" & sMCU & "' and R2ITM = " & sITM & _
               " and R2PSTB = '320' order by IOMMEJ, R2FLOT"
        '       " and R2TLOC = '" & sTLOC & "' and R2PSTB = '320' order by IOMMEJ, R2LOTN"
        '
        DB.Execute(sSql, sColsWM, sRowsWM)
        '
        iRowCnt2 = DB.Count(sRowsWM)
        '
        ' loop to get repl. from bulk warehouse
        '
        For iCnt2 = 1 To iRowCnt2
          '
          If nQtyOpen > 0 Then
            '
            mnSGBT = DB.Extract(sColsWM,sRowsWM,iCnt2,"R2SGBT")
            nPQOH = DB.Extract(sColsWM, sRowsWM, iCnt2, "R2TQTY")

            sFLOC = DB.Extract(sColsWM, sRowsWM, iCnt2, "R2FLOC")
            sFLOT = Trim(DB.Extract(sColsWM, sRowsWM, iCnt2, "R2FLOT"))
            sPrio = DB.Extract(sColsWM,sRowsWM,iCnt2,"R2PRITY")
            sXPDT = ConvJDEtoDate(DB.Extract(sColsWM, sRowsWM, iCnt2, "IOMMEJ"))

            nFQTY = nPQOH

            ' In case database is Oracle
            If mbOracleLP Then
              If Len(Trim(sFLOT)) = 0 Then sFLOT = " "
              If Len(Trim(sFLOC)) = 0 Then sFLOC = " "
            End If

            '
            ' Update Put Away to Replenishment request
            '
            sSql = "update WDJOBS set " & _
                   "R2TYFL = '" & sTYFL     & "', " & _
                   "R2TLOC = '" & sTLOC     & "', " & _
                   "R2URRF = '" & sXPDT     & "', " & _
                   "R2USER = '" & App.User  & "', " & _
                   "R2PID  = '" & sPID      & "', " & _
                   "R2UPMJ = '" & sUPMJ     & "', " & _
                   "R2TDAY = '" & sTDAY     & "', "
                  If sPrio > sPrioRepl Then
                    sSql = sSql & "R2PRITY = '" & sPrioRepl & "'  "
                  End If

                  sSql = sSql &  "where R2SGBT = " & mnSGBT

            nErrNo = DB.Execute(sSql)

            If nErrNo <> 0 Then
              App.LogError(cTNID, GetMsg(45))
              Exit Function
            End If
            '
            ' In case database is Oracle
            If mbOracleJDE Then
              If Len(Trim(sFLOT)) = 0 Then sFLOT = " "
              If Len(Trim(sFLOC)) = 0 Then sFLOC = " "
            End If

            sSql = "update F41021 set LIQTRO = LIQTRO + " & ConvDecimalsToSQL("QTRO",nFQTY) & _
                   " where LIITM = " & sITM & " and LIMCU = '" & sMCU & "' and  LILOCN = '" & sFLOC & "' and LILOTN = '" & sFLOT & "' "
            DB.Execute(sSql)
            '
            nQtyOpen = nQtyOpen - nFQTY
            '
            If nQtyOpen <= 0 Then Exit For
          End If

        Next iCnt2
        '
      End If

    End If
  Next iCnt

  Replenish = True

End Function

Private Function Pick As Boolean
  On Error Resume Next

  Dim sSql     As String
  Dim sCols    As String
  Dim sRows    As String
  Dim sColsInv As String
  Dim sRowsInv As String
  Dim sColsJB  As String
  Dim sRowsJB  As String
  Dim sTYFL    As String
  Dim sITM     As String
  Dim sLITM    As String
  Dim sFLOC    As String
  Dim sFLOT    As String
  Dim sTLOC    As String
  Dim sTLOT    As String
  Dim sUOM     As String
  Dim sRCDJ    As String
  Dim sTRDJ    As String
  Dim sDRQJ    As String
  Dim sUser    As String
  Dim sPID     As String
  Dim sUPMJ    As String
  Dim sTDAY    As String
  Dim sDSC1    As String
  Dim sDSC2    As String
  Dim sSKLocn  As String
  Dim sDOCO    As String
  Dim sDCTO    As String
  Dim sLNID    As String
  Dim sMCU     As String
  Dim sPickZone As String

  Dim nSGSQ    As Long
  Dim nQTY     As Currency
  Dim nMinQty  As Currency
  Dim nFQTY    As Currency
  Dim nPQOH    As Currency
  Dim nQtyOpen As Currency

  Dim iRowCnt  As Integer
  Dim iCnt     As Integer
  Dim iRowCnt2 As Integer
  Dim iCnt2    As Integer
  Dim iFind    As Integer

  Dim nErrNo   As Long
  '
  msSOStatusF  = SYS.GetProperty("WD", "StatusF")
  msSOStatusT  = SYS.GetProperty("WD", "StatusT")
  sPickZone    = SYS.GetProperty("WD", "ZonePick")
  '

  ' Fetch demand orders

  If mbLMW Then
'    sSql = "select LDRDOCO as SDDOCO, LDRDCTO as SDDCTO, LDRLLN as SDLNID, LDLITM as SDLITM," & _
'           " LDUORG as SDUORG, LDSOQS as SDSOQS, LDUOM as SDUOM, LDDRQJ as SDDRQJ, LMMCU as SDMCU from F4211" & _
'           " where SDMCU in(" & cMCU & ") and SDNXTR between '" & cSOStatusF & "' and '" & cSOStatusT & "'" & _
'           " order by SDDRQJ, SDSHAN"
    sSql = "select LDRDOCO as SDDOCO, LDRDCTO as SDDCTO, LDRLLN as SDLNID, LDLITM as SDLITM," & _
           " LDUORG as SDUORG, LDSOQS as SDSOQS, LDUOM as SDUOM, LMMCU as SDMCU, LMLOCN from F55102" & _
           " inner join F55101 on LDLPID = LMLPID" & _
           " where LMMCU in(" & msMCU & ") and LMRNXTR between '" & msSOStatusF & "' and '" & msSOStatusT & "'" & _
           " and LMTYPE = 'L' and LMLTYI = ''" & _
           " order by LMSHAN"
  Else
    sSql = "select SDDOCO, SDDCTO, SDLNID, SDLITM, SDUORG, SDSOQS, SDUOM, SDDRQJ, SDMCU, SDLNTY from F4211" & _
           " where SDMCU in(" & msMCU & ") and SDNXTR between '" & msSOStatusF & "' and '" & msSOStatusT & "'" & _
           " order by SDDRQJ, SDSHAN"
  End If

  DB.Execute(sSql, sCols, sRows)

  iRowCnt = DB.Count(sRows)

  For iCnt = 1 To iRowCnt

    sTYFL = "2"

    sDOCO = DB.Extract(sCols, sRows, iCnt, "SDDOCO")
    sDCTO = DB.Extract(sCols, sRows, iCnt, "SDDCTO")
    sLNID = DB.Extract(sCols, sRows, iCnt, "SDLNID")
    sLITM = DB.Extract(sCols, sRows, iCnt, "SDLITM")
    sRCDJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
    sTRDJ = "0"
    sDRQJ = DB.Extract(sCols, sRows, iCnt, "SDDRQJ")
    If sDRQJ = "" Then sDRQJ = "0"
    sUser = "RFGEN"
    sPID  = cTNID
    sUPMJ = ConvDatetoJDE(Format(Date, "mm/dd/yy"))
    sTDAY = Format(Time, "hhnnss")
    sDSC1 = Replace(DB.Extract(sCols, sRows, iCnt, "SDDSC1"), "'", "`")
    sDSC2 = Replace(DB.Extract(sCols, sRows, iCnt, "SDDSC2"), "'", "`")
    nQtyOpen = ConvDecimalsFromSQL("UORG", DB.Extract(sCols, sRows, iCnt, "SDUORG"))
    sUOM  = DB.Extract(sCols, sRows, iCnt, "SDUOM")
    sMCU  = DB.Extract(sCols, sRows, iCnt, "SDMCU")
    sTLOC = DB.Extract(sCols, sRows, iCnt, "LMLOCN")

    App.SetValue("tmCISY", 2)

    If sDSC1 = "" Then
      Validate_Item(sMCU, sLITM, sITM, "", "", sDSC1)
    Else
      Validate_Item(sMCU, sLITM, sITM)
    End If


    ' Find locations to pick from
    Do While nQtyOpen > 0

      sSql = "select LILOCN, LILOTN, LIPQOH from F41021" & _
           " inner join F4100 on LIMCU = LMMCU and LILOCN = LMLOCN" & _
           " where LIMCU = '" & sMCU & "' and LIITM = " & sITM & " and LIPQOH > 0" & _
           " and LILOTS in(' ', '') and LMKZON <> '" & sPickZone & "'"

      If sSKLocn <> "" Then sSql = sSql & " and LILOCN not in(" & sSKLocn & ")"
      sSql = sSql & " order by LILOTN, LIPQOH, LILOCN"
      DB.Execute(sSql, sColsInv, sRowsInv)

      If Len(sRowsInv) = 0 Then Exit Do

      sFLOC = DB.Extract(sColsInv, sRowsInv, 1, "LILOCN")
      sFLOT = Trim(DB.Extract(sColsInv, sRowsInv, 1, "LILOTN"))
      nPQOH = DB.Extract(sColsInv, sRowsInv, 1, "LIPQOH")

      If nQtyOpen <= nPQOH Then
        nFQTY = nQtyOpen
      Else
        nFQTY = nPQOH
      End If

      ' In case database is Oracle
      If mbOracleLP Then
        If Len(Trim(sFLOT)) = 0 Then sFLOT = " "
        If Len(Trim(sFLOC)) = 0 Then sFLOC = " "
        If Len(Trim(sTLOT)) = 0 Then sTLOT = " "
        If Len(Trim(sTLOC)) = 0 Then sTLOC = " "
      End If

      ' Get next sequence number
'          nSGSQ = CCur(SYS.GetProperty("WAREHOUSE", "SGSQ")) + 1
'          If nSGSQ = 0 Then nSGSQ = 1
'          SYS.SetProperty("WAREHOUSE", "SGSQ", nSGSQ)
      nSGSQ = nSGSQ + 1

      ' Create pick request
      sSql = "select count(*) from WDJOBS" & _
             " where R2TYFL = '" & sTYFL & "' and R2MCU = '" & sMCU & "' and R2ITM = " & sITM & _
             " and R2FLOT = '" & sFLOT & "' and R2FLOC = '" & sFLOC & "' and R2TLOT = '" & sTLOT & "'" & _
             " and R2TLOC = '" & sTLOC & "' and R2PSTB = '320'"
      DB.Execute(sSql, sColsJB, sRowsJB)

      If Val(sRowsJB) = 0 Then

        sSql = "insert into WDJOBS" & _
               " (R2TYFL, R2SGBT, R2SGSQ, R2MCU, R2ITM, R2LITM, R2UOM1, R2TQTY, R2FLOC," & _
               " R2FLOT, R2TLOC, R2TLOT, R2DSC1, R2DSC2, R2RCDJ, R2TRDJ, R2DRQJ," & _
               " R2USER, R2PID, R2UPMJ, R2TDAY, R2PSTB, R2DOCO, R2DCTO, R2LNID)" & _
               " values(" & _
               "'" & sTYFL & "'" & "," & _
                     mnSGBT      & "," & _
                     nSGSQ       & "," & _
               "'" & sMCU  & "'" & "," & _
                     sITM        & "," & _
               "'" & sLITM & "'" & "," & _
               "'" & sUOM  & "'" & "," & _
                     nFQTY       & "," & _
               "'" & sFLOC & "'" & "," & _
               "'" & sFLOT & "'" & "," & _
               "'" & sTLOC & "'" & "," & _
               "'" & sTLOT & "'" & "," & _
               "'" & sDSC1 & "'" & "," & _
               "'" & sDSC2 & "'" & "," & _
                     sRCDJ       & "," & _
                     sTRDJ       & "," & _
                     sDRQJ       & "," & _
               "'" & sUser & "'" & "," & _
               "'" & sPID  & "'" & "," & _
                     sUPMJ       & "," & _
                     sTDAY       & "," & _
               "'" & cPSTB & "'" & "," & _
                     sDOCO       & "," & _
               "'" & sDCTO & "'" & "," & _
                     sLNID & ")"
        nErrNo = DB.Execute(sSql)

        If nErrNo <> 0 Then
          App.LogError(cTNID, GetMsg(45))
          Exit Function
        End If

      End If

      iFind = InStr(sSKLocn, sFLOC)

      If iFind = 0 Then
        If Len(sSKLocn) > 0 Then sSKLocn = sSKLocn & ","
        sSKLocn = sSKLocn & "'" & sFLOC & "',"
        sSKLocn = Left(sSKLocn, Len(sSKLocn) -1)     ' cut last ","
      End If

      nQtyOpen = nQtyOpen - nFQTY

    Loop

    sSKLocn = ""
  Next

  Pick = True

End Function


Private Sub Notifications
  On Error Resume Next

  Dim sSql      As String
  Dim sCols     As String
  Dim sRows     As String
  Dim sUserList As String
  Dim sUser     As String
  Dim sUsrLst   As String
  Dim iCnt      As Integer
  Dim i         As Integer
  Dim iDeviceID As Integer
  Dim sQName    As String
  Dim nSeqNo    As Long
  '
  ' Get a List.Data of all logged in users
  sUserList = SYS.UserList(True)
  '
  ' Check for open requests
  sSql = "select count(*) from WDJOBS" & _
         " where R2PSTB = '" & cPSTB & "'"
  DB.Execute(sSql, sCols, sRows)

  If Val(sRows) > 0 Then

    i = 1
    '
    Do While Len(Ext(sUserList,1,i)) > 0
      sUsrLst = Ext(sUserList,2,i)

      ' If the user is logged on and is a material handler, send the message
      sUser = Trim(UCase(Left(sUsrLst,9)))

      If IsWhseUser(sUser, "1") Then
        iDeviceID = CInt(Ext(sUserList, 1, i))
        SYS.SendMessage(iDeviceID, GetMsg(903) & vbCrLf & vbCrLf & Date)
      End If
      '
      i = i + 1
    Loop

  End If

End Sub
</Code>
