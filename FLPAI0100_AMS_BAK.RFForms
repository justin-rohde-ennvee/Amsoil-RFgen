<Record FileDesc="LP - Attach Item" FileVersion="5.0.8.0" Desc="LP - Attach Item" Group="AMS" LinkTo="No Links" LinkType="0" LinkMode="0" PromptList="Frame2&vm;txtMCU&vm;txtPALP&vm;btnNew&vm;txtPALPLocn&vm;lblNumItems&vm;lblNumUnits&vm;btnInfo&vm;txtNumLabels&vm;Frame1&vm;txtLITM&vm;lblItemDesc&vm;txtLOTN&vm;txtLOCN&vm;txtQTY" Depends="JDE.bas">
<Schema>
<SchemaParam Linked="0" Attr="1" Name="Frame2" />
<SchemaParam Linked="0" Attr="2" Name="txtMCU" />
<SchemaParam Linked="0" Attr="3" Name="txtPALP" />
<SchemaParam Linked="0" Attr="4" Name="btnNew" />
<SchemaParam Linked="0" Attr="5" Name="txtPALPLocn" />
<SchemaParam Linked="0" Attr="6" Name="lblNumItems" />
<SchemaParam Linked="0" Attr="7" Name="lblNumUnits" />
<SchemaParam Linked="0" Attr="8" Name="btnInfo" />
<SchemaParam Linked="0" Attr="9" Name="txtNumLabels" />
<SchemaParam Linked="0" Attr="10" Name="Frame1" />
<SchemaParam Linked="0" Attr="11" Name="txtLITM" />
<SchemaParam Linked="0" Attr="12" Name="lblItemDesc" />
<SchemaParam Linked="0" Attr="13" Name="txtLOTN" />
<SchemaParam Linked="0" Attr="14" Name="txtLOCN" />
<SchemaParam Linked="0" Attr="15" Name="txtQTY" />
</Schema>
<Displays>
<Display Name="EnglishGUI" Type="1" Width="1920" Height="7040" Locale="1033" />
</Displays>
<Form FieldId="Form" Attr="0" LinkMode="0" Pages="1">
<Controls>
<Control Type="12" FieldId="Frame2" Attr="1">
<Layouts>
<Layout PageNo="1" Visible="1" Caption="Target Pallet:" Style="2">
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="22" Width="239" Height="22" AnchorRight="1" AnchorBottom="276" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="1" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtMCU" Attr="2" Defaults="@LAST" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="44" Width="55" Height="22" AnchorRight="185" AnchorBottom="254" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Plant:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="44" Width="127" Height="22" AnchorRight="65" AnchorBottom="254" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtPALP" Attr="3" Defaults="@LAST" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="16" Top="66" Width="39" Height="22" AnchorRight="185" AnchorBottom="232" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="LP#:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="66" Width="127" Height="22" AnchorRight="65" AnchorBottom="232" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="9" FieldId="btnNew" Attr="4">
<Layouts>
<Layout PageNo="1" Visible="1" Caption="New" ImageHeight="16" ImageWidth="16" MarginBottom="3" MarginLeft="3" MarginRight="3" MarginTop="3">
<Field Align="1" Anchor="3" AutoSize="0" BorderStyle="0" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="184" Top="66" Width="47" Height="22" AnchorRight="9" AnchorBottom="232" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtPALPLocn" Attr="5" Defaults="DOCK" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="88" Width="47" Height="22" AnchorRight="185" AnchorBottom="210" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Locn:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="88" Width="87" Height="22" AnchorRight="105" AnchorBottom="210" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblNumItems" Attr="6">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="110" Width="95" Height="22" AnchorRight="97" AnchorBottom="188" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblNumItems" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblNumUnits" Attr="7">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="132" Width="95" Height="22" AnchorRight="97" AnchorBottom="166" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblNumUnits" />
</Layout>
</Layouts>
</Control>
<Control Type="9" FieldId="btnInfo" Attr="8">
<Layouts>
<Layout PageNo="1" Visible="1" Caption="Pallet Info" ImageHeight="16" ImageWidth="16" MarginBottom="3" MarginLeft="3" MarginRight="3" MarginTop="3">
<Field Align="1" Anchor="3" AutoSize="0" BorderStyle="0" BackFill="0" FontSize="0" FontStyle="0" MultiLine="1" Left="168" Top="88" Width="63" Height="44" AnchorRight="9" AnchorBottom="188" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtNumLabels" Attr="9" Defaults="Y;O" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="16" Top="154" Width="87" Height="22" AnchorRight="137" AnchorBottom="144" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Printer #:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="104" Top="154" Width="31" Height="22" AnchorRight="105" AnchorBottom="144" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="12" FieldId="Frame1" Attr="10">
<Layouts>
<Layout PageNo="1" Visible="1" Caption="LP or Items To Attach:" Style="2">
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="176" Width="239" Height="22" AnchorRight="1" AnchorBottom="122" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="1" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLITM" Attr="11" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="198" Width="55" Height="22" AnchorRight="185" AnchorBottom="100" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Itm/LP" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="198" Width="175" Height="22" AnchorRight="9" AnchorBottom="100" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblItemDesc" Attr="12">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="220" Width="95" Height="22" AnchorRight="89" AnchorBottom="78" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblItemDesc" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLOTN" Attr="13" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="242" Width="47" Height="22" AnchorRight="185" AnchorBottom="56" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Lot#:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="242" Width="175" Height="22" AnchorRight="9" AnchorBottom="56" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLOCN" Attr="14" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="264" Width="47" Height="22" AnchorRight="185" AnchorBottom="34" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Locn:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="56" Top="264" Width="143" Height="22" AnchorRight="41" AnchorBottom="34" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtQTY" Attr="15" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="286" Width="79" Height="22" AnchorRight="153" AnchorBottom="12" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Qty (EA):" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="88" Top="286" Width="63" Height="22" AnchorRight="89" AnchorBottom="12" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
</Controls>
<Layouts>
<Layout Visible="1" FormWidth="240" FormHeight="320" Scrollbars="0">
<Label Align="1" AutoSize="2" FontSize="0" FontStyle="0" Width="0" Height="22" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="[Create Pallet / Attach Item]" />
<Field AutoSize="0" BorderStyle="3" DropShadow="1" FontSize="0" FontStyle="0" BackColor1="000001" BackColor2="000001" ForeColor="000001" />
</Layout>
</Layouts>
</Form>
</Record>
<Code>
' -------------------------------------------------------------------------------
' | (C)opyright 2003-2012 The DataMAX Software Group, Inc., All Rights Reserved.|
' | RFgen JD Edwards Integration Suite Vers.# 420                               |
' -------------------------------------------------------------------------------
'
' LICENSE PLATES: ATTACH ITEM
'
' NOTES:
'
' MODIFICATION HISTORY:
'   WLG01:  KMD 8/14/2013 - FIXED COUNT SO LPS WITH NO QUANTITY WOULD NOT BE COUNTED.
'
Option Explicit

Private Const cTRANDESC = "RFGen Attach LP"
Private Const cTNId = "FLPAI0100"

Private msPgm        As String
Private msVersion    As String
Private msDOCTYPE    As String
Private msAllowHold  As String
Private mnMaxQty     As Currency
Private gsLPSource   As String
Private mbSerialized As Boolean
Private mbIsPlate    As Boolean
Private mbIsNew      As Boolean

Private Sub btnInfo_Click()
  On Error Resume Next

  Dim sCallString As String

  gsMCU = App.GetValue("tmMCU")
  gsInquiryLPID = App.GetValue("tmPALP")

  sCallString = "FLPQI0100_AMS"
  '& "-MCU=" & Trim(App.GetValue("tmMCU")) & " -LPID=" & Trim(App.GetValue("tmPALP"))

  App.CallForm(sCallString, True)
End Sub

Private Sub btnNew_Click()
  On Error Resume Next
'  txtPALP.Text = "NEW"
'  App.SetFocus("txtPALP", False, True)
  Call txtPALP_OnEnter("NEW", False, "")
  txtPALP.Text = App.GetValue("tmPALP")
End Sub

Private Sub Form_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  Dim iCN As Integer
  '
  iCN = App.PromptNo

  If iCN <> 4 And iCN <> 8 Then
    RFPrompt(iCN).BorderStyle = DisplayStandard
    RFPrompt(iCN).BackColor1 = cFieldFocusBC
    RFPrompt(iCN).ForeColor = cFieldFocusFC
  End If

End Sub

Private Sub Form_Load()
  On Error Resume Next
  '
  Call SetDisplay()
  '
  Dim sHeader As String
  '
  '
  lblItemDesc.Caption = ""
  lblItemDesc.Label.BackColor1 = cFieldDefaultBC
  lblItemDesc.Label.ForeColor = cFieldDefaultFC

  lblNumItems.Caption = ""
  lblNumItems.Label.BackColor1 = cFieldDefaultBC
  lblNumItems.Label.ForeColor = cFieldDefaultFC

  lblNumUnits.Caption = ""
  lblNumUnits.Label.BackColor1 = cFieldDefaultBC
  lblNumUnits.Label.ForeColor = cFieldDefaultFC
  '
  txtLOTN.Required = False
  txtLOTN.Visible = False
  '

  txtPALP.Visible = False
  txtPALPLocn.Visible = False
  btnNew.Visible = False
  btnInfo.Visible = False
  txtNumLabels.Visible = False
  Frame1.Visible = False
  txtLITM.Visible = False
  txtLOTN.Visible = False
  txtLOCN.Visible = False
  txtQTY.Visible = False

  ' Get Proc.Opt. Version from Menu
  msPgm     = App.GetValue("Pgm")
  msVersion = App.GetValue("Vers")

  ' get DocType from Proc.Opt. for Inv. Transfer
  msDOCTYPE = GetProcOpt(msPgm,msVersion,"1;1",sHeader)

  '
  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If
End Sub

Private Sub Form_LostFocus()
  On Error Resume Next
  '
  Dim iCN As Integer
  '
  iCN = App.PromptNo
  If iCN <> 4 And iCN <> 8 Then
    RFPrompt(iCN).BorderStyle = DisplayTransparent
    RFPrompt(iCN).BackColor1 = cFieldDefaultBC
    RFPrompt(iCN).ForeColor = cFieldDefaultFC
  End If
End Sub

Private Sub Form_OnUpdate(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim bDettach As Boolean
  '
  App.SetValue("LPITVersion", msVersion)
  '
  '--------------------------------------------------------------------------
  ' attach full LP or item.
  '
  If gbCommitCtl Then DB.BeginTrans(gsLPSource)
  '
  Dim uLPOper As LPOper         ' LP Operation
  Dim uLP101 As LP101Data       ' create LP101 Structure
  Dim uLP102 As LP102Data       ' create LP101 Structure
  Call LP101_Reset(uLP101)      ' init LP101 Structure
  Call LP102_Reset(uLP102)      ' init LP102 Structure
  '

  If App.GetValue("tmFromMCU") = "" Then
    App.SetValue("tmFromMCU", App.GetValue("tmMCU"))
  End If
  If mbIsPlate Then
      'Public Type LPOper
    uLPOper.sLPID      = App.GetValue("tmLPID")    ' LP ID Child
    uLPOper.sPALP      = App.GetValue("tmPALP")    ' LP ID Parent
    uLPOper.sFMCU      = App.GetValue("tmFromMCU")    ' from Plant
    uLPOper.sTMCU      = App.GetValue("tmMCU")     ' to Plant
    uLPOper.sFLOCN     = Trim(App.GetValue("tmLOCN"))    ' from Location
    uLPOper.sTLOCN     = Trim(App.GetValue("tmNLOCN"))   ' to Location
    uLPOper.nQty       = App.GetValue("tmQty")     ' Operation Qty.
    uLPOper.bIsPlate   = mbIsPlate                 ' Plate or Item
    uLPOper.bDetach    = False                     ' remove item
    '
  Else
    '
    uLP101.sLMLPID    = App.GetValue("tmPALP")    ' Parent LP

    uLP102.sLDLPID    = uLP101.sLMLPID            ' LP line Details
    uLP102.sLDLITM    = Trim(App.GetValue("tmLITM"))
    uLP102.nLDUORG    = App.GetValue("tmQTY")
    uLP102.sLDUOM     = App.GetValue("tmUOM")
    uLP102.sLDLOTN    = Trim(App.GetValue("tmLOTN"))
    uLP102.sLDLOTS    = App.GetValue("tmTOLOTS")
    '
      'Public Type LPOper
    uLPOper.sLPID      = ""                        ' LP ID Child
    uLPOper.sPALP      = App.GetValue("tmPALP")    ' LP ID Parent
    uLPOper.sFMCU      = App.GetValue("tmFromMCU")     ' from Plant
    uLPOper.sTMCU      = App.GetValue("tmMCU")     ' to Plant
    uLPOper.sFLOCN     = Trim(App.GetValue("tmLOCN"))    ' from Location
    uLPOper.sTLOCN     = Trim(App.GetValue("tmNLOCN"))   ' to Location
    uLPOper.nQty       = App.GetValue("tmQty")     ' Operation Qty.
    uLPOper.bIsPlate   = mbIsPlate                 ' Plate or Item
    uLPOper.bDetach    = False                     ' remove item
    '
  End If
  '
  If Not LP_AttachDetach(uLPOper, uLP102) Then
    App.MsgBox(GetMsg(40))
    If gbCommitCtl Then DB.RollbackTrans(gsLPSource)
    GoTo LPDone
  End If
  '
  If gbCommitCtl Then DB.CommitTrans(gsLPSource)
  LPDone:
  '
  '--------------------------------------------------------------------------
  '
  lblItemDesc.Caption = ""
  '
  txtLOCN.Visible = False
  txtLOCN.Required = False
  txtLOCN.List.Clear

  txtLOTN.Required = False
  txtLOTN.Visible = False
  txtLOTN.List.Clear

  txtQTY.Required = False
  txtQTY.Visible = False
  txtQTY.List.Clear

  '
  mnMaxQty = 0
  mbSerialized = False
  mbIsPlate = False
  Screen.Bell(1)
End Sub

Private Sub txtLITM_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  Frame1.Visible = True
End Sub

Private Sub txtMCU_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  btnNew.Visible = False
  App.SetValue("tmMCU", "")
  App.SetValue("tmCO",  "")
End Sub

Private Sub txtMCU_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  If (Len(Rsp)=0) Then Rsp = GetDefaultMCU()
  If Len(Rsp) > 0 Then AllowChange = False
  btnInfo.Visible = False
  btnNew.Visible = False
  txtPALP.Visible = False
  txtPALPLocn.Visible = False
  txtNumLabels.Visible = False
  Frame1.Visible = False
  lblNumItems.Caption = ""
  lblNumUnits.Caption = ""
End Sub

Private Sub txtMCU_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL   As String
  Dim sCols  As String
  Dim sRows  As String
  Dim sMCU     As String
  Dim sCompany As String
  '
  Rsp = UCase(Trim(Rsp))
  '
  If (Len(Rsp)=0) Then Exit Sub
  Cancel = True
  '
  If Not Validate_BranchPlant(Rsp, sMCU, sCompany) Then Exit Sub
  '
  App.SetValue("tmCO",  sCompany)
  App.SetValue("tmMCU", sMCU)
  App.SetValue("tmNMCU", sMCU)

    ' get Entity from MCU
  sSQL = "select EBCO from LP005 where EBMCU = '%tmMCU' "
  DB.Execute(sSQL, sCols, sRows)
  App.SetValue("tmEntity", DB.Extract(sCols,sRows,1,1))
  txtPALP.Visible = True
  btnNew.Visible = True
  Cancel = False
End Sub

Private Sub txtMCU_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  If Not Search_BranchPlant(Rsp) Then Cancel = True
End Sub

Private Sub txtNumLabels_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next

  Dim iYN As Integer
  If Len(Rsp) = 0 Then
    Cancel = True
    Exit Sub
  End If

  If Val(Rsp) <= 0 Then
    App.MsgBox("Please Input a Printer Number or Scan the Barcode on the Printer")
    Cancel = True
    Exit Sub
  End If

'  If Trim(Rsp) = "Y" Then
'    iYN = 1
'  ElseIf Trim(Rsp) = "N" Then
'    iYN = 0
'  Else
'    App.MsgBox("Please enter Y or N")
'    Cancel = True
'    Exit Sub
'  End If
'  If iYN > 0 Then
'    Dim nPrinterNumber As Integer
'    nPrinterNumber = Val(GetUserInfo("PalletPrinter"))
'    PrintPalletLabel(nPrinterNumber, GetUserInfo("PalletFormat"), App.GetValue("tmPALP"), iYN)
'  End If
  PrintPalletLabel(Val(Rsp), GetUserInfo("PalletFormat"), App.GetValue("tmPALP"), 1)

End Sub

Private Sub txtPALP_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  btnNew.Visible = True
  txtPALPLocn.Visible = False
  lblNumItems.Caption = ""
  lblNumUnits.Caption = ""
  txtNumLabels.Visible = False
  Frame1.Visible = False
  txtLITM.Visible = False
  lblItemDesc.Caption = ""
  txtLOTN.Visible = False
  txtLOCN.Visible = False
  txtQTY.Visible = False
  btnInfo.Visible = False

End Sub

Private Sub txtPALP_LostFocus()
  On Error Resume Next
  btnNew.Visible = False
End Sub

Private Sub txtPALP_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  txtPALP.Visible = False
  App.SetValue("tmPALP",   "")
  App.SetValue("tmTYPE",   "")
  App.SetValue("tmNMCU",  "")
  App.SetValue("tmNLOCN", "")
  '
End Sub

Private Sub txtPALP_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sError    As String
  Dim uLP101    As LP101Data       ' create LP101 Structure
  Dim sLPID     As String
  Dim sSQL      As String
  Dim sSql2     As String
  Dim sRows     As String
  Dim sRows2    As String
  Dim sCols     As String
  Dim sCols2    As String
  Dim sItemList As String
  Dim nNumItems As Long
  Dim nTotalUnits As Long
  Dim sDirectItems  As String
  Dim x As Integer
  Dim y As Integer
  Dim nPos As Integer
  Dim sFirstItem As String


  '
  Rsp = UCase(Trim(Rsp))
  If Trim(Rsp) = "NEW" Then

  End If
  Cancel = True
  If (Len(Rsp)=0) Then Exit Sub
  '
  Call LP101_Reset(uLP101)      ' init LP101 Structure
  '
  uLP101.sLMLPID = Rsp
  sLPID = Rsp
  If Not X_LP101("I",uLP101) Then   ' Inquiry on LP101
    mbIsNew = True
    If Trim(Rsp) = "NEW" Then
      If Not LP_CreatePlate(sLPID,"L","LP created " & Format(Date, "MM/DD/YYYY") & " " & Format(Time, "hh:nn:ss"),"DOCK",False,App.GetValue("tmDOCO"), App.GetValue("tmDCTO"),"") Then
          App.MsgBox(GetMsg(270))
          Cancel = True
          Exit Sub
      End If
      Rsp = sLPID
    Else
      App.MsgBox("That License Plate Does Not Exist")
      Cancel = True
      Exit Sub
    End If
  Else
    If (Val(Trim(uLP101.sLMRNXTR)) >= 545) Then
      App.MsgBox("Can not attach items to a picked license plate")
      Cancel = True
      Exit Sub
    End If
    mbIsNew = False
  End If
  '
'  lblLPDesc.Caption = uLP101.sLMDSC1
'  lblLPLocn.Caption = uLP101.sLMLOCN
  '

  If (Trim(uLP101.sLMMCU) <> Trim(App.GetValue("tmMCU"))) Then
    App.MsgBox("The Entered License Plate Is Not In The Selected Branch Plant")
    Cancel = True
    Exit Sub
  End If

  If Not mbIsNew Then
    txtPALPLocn.DisplayOnly = True
  Else
    txtPALPLocn.DisplayOnly = False
  End If
'  Calculate and Display inventory info about the Pallet

  sSql2 = "select LDLITM, sum(LDUORG) as EachSum from F55102 where LDLPID = '" & Rsp & "' group by LDLITM"
  DB.Execute(sSql2, sCols2, sRows2)
  If (DB.Count(sRows2) > 0 ) Then
    sDirectItems = "+ Items On Pallet.
  End If

  For x = 1 To DB.Count(sRows2)
    If Not (InStr(sItemList, DB.Extract(sCols2,sRows2,x,"LDLITM")&"***") > 0) Then
      sItemList = sItemList & DB.Extract(sCols2, sRows2, x, "LDLITM") & "***"
      nNumItems = nNumItems + 1
    End If

  Next x

'    sSQL = "select CIMCU, ABALPH from  F41001" & _
'         " inner join  F0101 on CIAN8 = ABAN8 order by CIMCU"

  '

'WLG01 START'
  'sSQL = "select LMLPID from F55101 where LMPALP = '" & Rsp & "'"
  sSQL = "select LMLPID from F55101 inner join F55102 on LMLPID = LDLPID where LMPALP = '" & Trim(Rsp) & "'"
'WLG01 END

  DB.Execute(sSQL, sCols, sRows)
  nTotalUnits = DB.Count(sRows)
  For y = 1 To DB.Count(sRows)
    sSql2 = "select LDLITM, sum(LDUORG) as EachSum from F55102 where LDLPID = '" & DB.Extract(sCols, sRows, y, "LMLPID") & "' group by LDLITM"
    DB.Execute(sSql2, sCols2, sRows2)

    For x = 1 To DB.Count(sRows2)
      If Not (InStr(sItemList, DB.Extract(sCols2,sRows2,x,"LDLITM") & "***") > 0) Then
        sItemList = sItemList & DB.Extract(sCols2, sRows2, x, "LDLITM") & "***"
        nNumItems = nNumItems + 1
      End If
    Next x
  Next y

'  App.MsgBox(sItemList & " " & nNumItems)

  '
  If nNumItems = 0 And Trim(sDirectItems) = "" Then
    lblNumItems.Caption = "Pallet is Empty"

  ElseIf nNumItems > 1 Then
    lblNumItems.Caption = nNumItems & " Items"
    lblNumUnits.Caption = nTotalUnits & " Total Units " & sDirectItems
  Else
    nPos = InStr(sItemList, "***") - 1
    sFirstItem = Trim(Mid(sItemList, 1, nPos))
    sSQL = "select  LDLITM, LDUORG, LDUOM from F55102 where LDLPID = '" & Rsp & "' "
    DB.Execute(sSQL, sCols, sRows)
    lblNumItems.Caption = sFirstItem
    lblNumUnits.Caption = nTotalUnits & " Total Units " & sDirectItems
  End If
  '
  txtPALPLocn.Visible = True
  If mbIsNew Then
    App.SetFocus("txtPALPLocn", True)
    txtPALP.DisplayOnly = True
  Else
    App.SetFocus("txtLITM", True)
  End If
  '
  Rsp = UCase(sLPID)
  txtPALP.Text = UCase(sLPID)

  App.SetValue("tmPALP",  Rsp)
  App.SetValue("tmTYPE",  uLP101.sLMTYPE)
  App.SetValue("tmNMCU",  uLP101.slmMCU)          ' Parent MCU
  App.SetValue("tmNLOCN", uLP101.sLMLOCN)         ' Parent Location
  txtPALPLocn.Text = Trim(uLP101.sLMLOCN)

  btnInfo.Visible = True
  Cancel = False
End Sub

Private Sub txtPALP_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Cancel = Not Search_LP101(Rsp, App.GetValue("tmMCU"), "L")
End Sub

Private Sub txtLITM_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmLITM", "")
  App.SetValue("tmITM",  "")
  App.SetValue("tmUOM",  "")
  '
  lblItemDesc.Caption =  ""
  '
  txtLITM.Visible = False
  txtLOTN.Visible = False
  txtLOTN.Required = False
End Sub

Private Sub txtLITM_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim bHasLots    As Boolean
  Dim bCancel     As Boolean
  Dim nType       As Long
  Dim sSQL        As String
  Dim sCols       As String
  Dim sRows       As String
  Dim sDESC       As String
  Dim sUOM        As String
  Dim sITM        As String
  Dim sLITM       As String
  Dim sAITM       As String
  Dim sLPID       As String
  Dim sPALP       As String
  Dim sMCU        As String
  Dim sLOCN       As String
  Dim sLOTN       As String
  Dim sChildLP    As String
  Dim sTYPE       As String
  Dim nChildCube  As Currency
  Dim nParentCube As Currency
  Dim uLPOper As LPOper         ' LP Operation


  Dim vRsp As Variant
  '
  Rsp = UCase(Trim(Rsp))
  '
  If (Len(Rsp) = 0) Then Exit Sub
  Cancel = True

  txtLOCN.DisplayOnly = False
  txtQTY.DisplayOnly = False
  '
  ' Inventory Item?
  '
  If Validate_Item(App.GetValue("tmMCU"), Rsp, sITM, sLITM, sAITM, sDESC, sUOM, nType, bHasLots, mbSerialized, False, True ) Then
    mbIsPlate = False
    '
    ' default From Lot & Location when Proc.Opt. = 1
    If GetProcOpt(msPgm,msVersion,"1;2") = "1" And Not bHasLots And Not mbSerialized Then
      If GetItemPrimary(App.GetValue("tmMCU"),sITM,sLOTN,sLOCN) Then
        txtLOCN.Defaults = sLOCN & ";O"                                       ' default Location
'        If bHasLots And Len(sLOTN) > 0 Then txtLOTN.Defaults = sLOTN & ";O"   ' default Lot Number if lot controlled
      End If
    End If
    '
    If gbPOError Then
      App.ExitForm
      Exit Sub
    End If
    '
    'If the item is a Item then LOCN is req
    txtLOCN.Visible = True
    txtLOCN.Required = True
    '
  Else ' scanned item is a license plate
    '
    sPALP = App.GetValue("tmPALP")
    '
    If sPALP = Trim(Rsp) Then
      App.MsgBox GetMsg(201)
      Cancel = True
      Exit Sub
    End If
    '
    ' Check if LP exists
    '
    Dim uLP101 As LP101Data       ' create LP101 Structure
    Dim uLP102 As LP102Data       ' create LP101 Structure
    Call LP101_Reset(uLP101)      ' init LP101 Structure
    Call LP102_Reset(uLP102)      ' init LP102 Structure
    '
    uLP101.sLMLPID = Rsp          ' Assign LMLPID Value
    '
    If Not X_LP101("I",uLP101) Then   ' Inquiry on LP101
      App.MsgBox("Item or License Plate Entered Does Not Exist.")
      Exit Sub
    End If

    If (uLP101.sLMTYPE <> "P") Then
      App.MsgBox("Cannot Attach Pallets to Other License Plates.")
      Cancel = True
      Exit Sub
    End If

    If (uLP101.sLMTYPE = "P" And App.GetValue("tmTYPE") = "P") Then
      App.MsgBox("Cannot Attach a Case to a Case.")
      Cancel = True
      Exit Sub
    End If

    If (Val(Trim(uLP101.sLMRNXTR)) >= 545) Then
      App.MsgBox("Cannot Attach a Picked License Plate to a Pallet")
      Cancel = True
      Exit Sub
    End If

    If (uLP101.sLMMCU <> App.GetValue("tmMCU") ) Then
      vRsp = App.MsgBox("Warning: The License Plate You Are Attaching Is Not In Your Current Branch Plant.", , , "[Ok] [Cancel]")
      If vRsp = "Ok" Then
        'Continue Normally
      Else
        Cancel = True
        Exit Sub
      End If
    End If

    ' Check if there is enough quantity in the current LP location to change it.
'LP_FindItem(ByRef sLPID As String, ByRef nLNID As Long, ByRef sLITM As String, ByRef sLOTN As String, ByRef nLQty As Currency, ByRef sUOM As String, ByRef sLOCN As String, ByRef bMixedLP As Boolean, Optional ByRef sDOCO As String, Optional ByRef sDCTO As String, Optional ByRef sSN As String) As Boolean


    Dim sSqlGetLITM, sColsGetLITM, sRowsGetLITM As String
    sSqlGetLITM = "select LDLITM, LDLOTN, LDUORG from F55102 where LDLPID = '" & uLP101.sLMLPID & "'"
    DB.Execute(sSqlGetLITM, sColsGetLITM, sRowsGetLITM)

    Dim nLPQty1 As Long
    nLPQty1 = Val(DB.Extract(sColsGetLITM, sRowsGetLITM, 1, "LDUORG"))

    Dim sSqlGetItem, sColsGetItem, sRowsGetItem As String
    sSqlGetItem = "select IMITM from F4101 where IMLITM = '" & Trim(DB.Extract(sColsGetLITM, sRowsGetLITM, 1, "LDLITM")) & "'"
    DB.Execute(sSqlGetItem, sColsGetItem, sRowsGetItem)

    Dim sSqlValidateQty, sColsValidateQty, sRowsValidateQty As String
    sSqlValidateQty = "select LIPQOH from F41021 where LIMCU = '" & uLP101.sLMMCU & "' and LIITM = " & DB.Extract(sColsGetItem, sRowsGetItem, 1, "IMITM") & _
      " and LILOCN = '" & Trim(uLP101.sLMLOCN) & "' and LILOTN = '" & Trim(DB.Extract(sColsGetLITM, sRowsGetLITM, 1, "LDLOTN")) & "'"
    DB.Execute(sSqlValidateQty, sColsValidateQty, sRowsValidateQty)

    If ConvDecimalsFromSQL("PQOH",(DB.Extract(sColsValidateQty, sRowsValidateQty, 1, "LIPQOH"))) < nLPQty1 Then
      App.MsgBox("LP Inventory Does Not Match JDE Inventory. Contact IT Manager")
      Cancel = True
      Exit Sub
    End If
    '
    ' check if already attached as child
    '
    If Len(Trim(uLP101.sLMPALP)) > 0 Then
      'Do a detatch here.
      uLPOper.sLPID      = uLP101.sLMLPID            ' LP ID Child
      uLPOper.sPALP      = uLP101.sLMPALP            ' LP ID Parent
      uLPOper.sFMCU      = uLP101.sLMMCU             ' from Plant
      uLPOper.sTMCU      = uLP101.sLMMCU             ' to Plant
      uLPOper.sFLOCN     = Trim(uLP101.sLMLOCN)            ' from Location
      uLPOper.sTLOCN     = Trim(uLP101.sLMLOCN)            ' to Location
      uLPOper.nQty       = 1                         ' Operation Qty.
      uLPOper.bIsPlate   = True                      ' Plate or Item
      uLPOper.bDetach    = True                      ' remove from LP

      If Not LP_AttachDetach(uLPOper, uLP102) Then
        App.MsgBox(GetMsg(40))
        Cancel = True
        Exit Sub
      End If
    End If
    '
    App.SetValue("tmFromMCU", uLP101.sLMMCU)
    sLOCN = Trim(uLP101.sLMLOCN)
    If sLOCN = "" Then
      sLOCN = " "
    End If
    App.SetValue("tmLOCN", sLOCN)
    '
    App.SetValue("tmLPID", Rsp)


    txtLOCN.Text = uLP101.slmlocn
    txtLOCN.DisplayOnly = True
    txtQTY.Text = 1
    txtQTY.DisplayOnly = True
    '
    mbIsPlate = True
    '
    'If the item is a LP then LOCN is not req
    txtLOCN.Visible = False
    txtLOCN.Required = False
  End If
  '
  App.SetValue("tmLITM", Rsp)
  App.SetValue("tmITM",  sITM)
  App.SetValue("tmUOM",  sUOM)
  App.SetValue("tmLOTN", "")

  '
  mnMaxQty = 0
  '
  lblItemDesc.Caption = sDESC
  '
  txtLOTN.Visible = bHasLots
  txtLOTN.Required = bHasLots

  If mbIsPlate Then
    txtLOTN.DisplayOnly = True
    txtLOCN.DisplayOnly = True
    txtQTY.DisplayOnly = True
    txtLOTN.Required = False
    txtLOCN.Required = False
    txtQTY.Required = False
  End If
  '
  Cancel = False
End Sub

Private Sub txtLITM_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim sSQL  As String
  Dim vRsp  As Variant
  Dim oList As New SearchList
  '
  sMCU = App.GetValue("tmMCU")
  vRsp = App.MsgBox(GetMsg(204),,,"[Item] [Plate]")
  '
  If vRsp = "Plate" Then
    If Not Search_LP101(Rsp, sMCU, "P") Then Cancel = True
  Else
    If Not Search_F4101(Rsp, "", sMCU) Then Cancel = True
  End If
End Sub

Private Sub txtLOTN_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
   App.SetValue("tmLOTN", "")
End Sub

Private Sub txtLOTN_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  '
  If (Len(Trim(Rsp))=0) Then Exit Sub
  Cancel = True
  Rsp = Trim(UCase(Rsp))
  '
  ' Validate
  sSQL = "select count(*) from  F4108" & _
         " where IOLOTN = '" & Trim(Rsp) & "' and IOITM = '%tmITM' and IOMCU = '%tmMCU'"
  DB.Execute(sSQL, sCols, sRows)
  '
  If (Val(sRows) = 0) Then
    App.MsgBox(GetMsg(78))
    Exit Sub
  End If
  '
  App.SetValue("tmLOTN", Rsp)
  Cancel = False
End Sub

Private Sub txtLOTN_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim sITM  As String
  Dim sLOCN As String
  '
  sMCU = App.GetValue("tmMCU")
  sITM = App.GetValue("tmITM")
  '
  If Not Search_F41021_LOTN(Rsp, "", sMCU, sITM, sLOCN, True) Then Cancel = True
End Sub

Private Sub txtLOCN_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmLOCN", "")
End Sub

Private Sub txtLOCN_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sMCU    As String
  Dim sLOCN   As String
  Dim sId     As String
  Dim sSQL    As String
  Dim sCols   As String
  Dim sRows   As String
  Dim nOnHand As Currency
  Dim nAvail  As Currency
  Dim sHold   As String
  '
  If (Len(Rsp)=0) Then Exit Sub
  '
  Cancel = True

  If mbIsPlate Then
    Rsp = Trim(App.GetValue("tmLOCN"))
  End If
  '
  sMCU = App.GetValue("tmFromMCU")
  If sMCU = "" Then
    sMCU = App.GetValue("tmMCU")
  End If
  If Not Validate_Locn(Rsp, sMCU, sLOCN, True) Then Exit Sub
  '
  Cancel = True
  '
  If mbIsPlate Then
    mnMaxQty = 1
  Else
    ' check Proc.Opt.if Lots on Hold are allowed
    msAllowHold = GetProcOpt(msPgm,msVersion,"3;3")
    '
    If gbPOError Then
      App.ExitForm
      Exit Sub
    End If

    Call GetItemQty(sMCU,App.GetValue("tmITM"),App.GetValue("tmLOTN"),sLOCN,msAllowHold,nOnHand,nAvail,sHold)

    If msAllowHold = "" And sHold <> "" Then
      App.MsgBox(GetMsg(121))
      Exit Sub
    End If

    ' show adjustable Qty. regarding Proc.Opt.
    mnMaxQty = nOnHand

'    Select Case GetProcOpt(msPgm,msVersion,"3;5")
'      Case ""   'Disallow neg.qty available
'        If nAvail < 0 Then
'          mnMaxQty = 0
'        Else
'          mnMaxQty = (nAvail)
'        End If
'
'      Case "1"  'Allow neg.qty available
'        mnMaxQty = 99999999
'
'      Case "2"  'Disallow neg.qty on Hand
'        If nOnHand < 0 Then
'          mnMaxQty = 0
'        Else
'          mnMaxQty = nOnHand
'        End If
'    End Select
    '
    If gbPOError Then
      App.ExitForm
      Exit Sub
    End If
  End If
'  If Trim(Rsp) = "" Then
'    Rsp = " "
'  End If

  App.SetValue("tmLOCN", Rsp)
  App.SetValue("tmLOTS", sHold)
  txtQTY.Visible = True
  '
  Cancel = False
End Sub

Private Sub txtLOCN_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim sITM  As String
  Dim sLOTN As String
  '
  If Not mbIsPlate Then
    sMCU  = App.GetValue("tmMCU")
    sITM  = App.GetValue("tmITM")
    sLOTN = App.GetValue("tmLOTN")
    '
    If Not Search_F41021_LOCN(Rsp, "", sMCU, sITM, sLOTN, True) Then Cancel = True
  End If
End Sub

Private Sub txtPALPLocn_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  txtPALPLocn.Visible = False
  lblNumItems.Caption = ""
  lblNumUnits.Caption = ""
End Sub

Private Sub txtPALPLocn_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  Dim sSQL As String
  Dim sRows As String
  Dim sCols As String
  Dim sLOCN As String
  Dim vRsp As Variant

  Rsp = Trim(Rsp)

  If Rsp = "" Then
    Rsp = " "
  End If

  If (Len(Rsp) = 0) Then
    Cancel = True
    Exit Sub
  End If

  If mbIsNew Then
    sSQL = "Select * from F4100 where LMMCU = '" & App.GetValue("tmMCU") & "' and LMLOCN = '" & Rsp & "'"
    DB.Execute(sSQL, sCols, sRows)
    If (DB.Count(sRows) = 0) Then
      App.MsgBox("Location Invalid")
      Cancel = True
      Exit Sub
    End If

    sSQL = "select LMLOCN from F55101 where LMLPID = '" & App.GetValue("tmPALP") & "'"
    DB.Execute(sSQL, sCols, sRows)
    sLOCN = Trim(DB.Extract(sCols, sRows, 1, "LMLOCN"))
    If (sLOCN <> "" And sLOCN <> Rsp) Then
      vRsp = App.MsgBox("The Location Has Already Been Set to " & sLOCN &".  Are You Sure You Want To Change It?", , , "[Yes] [No]")
      If vRsp = "No" Then
        Cancel = True
        Exit Sub
      End If
    End If

    sSQL = "update F55101 set LMLOCN = '" & Rsp & "' where LMLPID = '" & App.GetValue("tmPALP") & "'"
    DB.Execute(sSQL)

    App.SetValue("tmPALPLocn", Rsp)
    App.SetValue("tmNLOCN", Rsp)
    txtNumLabels.Defaults = Val(GetUserInfo("PalletPrinter")) & ";O"
    txtNumLabels.Visible = True

  Else
    txtPALPLocn.DisplayOnly = True
  End If
End Sub

Private Sub txtPALPLocn_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  If Not Search_F4100(Rsp, "",App.GetValue("tmMCU")) Then Cancel = True

End Sub

Private Sub txtQTY_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  If Not mbIsPlate Then Exit Sub
  If (Len(Rsp)>0) Then  Exit Sub
  '
  Rsp = "1"
  AllowChange = False
End Sub

Private Sub txtQTY_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmQTY", "")
End Sub

Private Sub txtQTY_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim nQty  As Currency
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  Dim sId   As String
  Dim nAvail As Long
  '
  If (Len(Rsp)=0) Then Exit Sub
  Cancel = True
  '
  ' Numeric?
  If Not IsNumeric(Rsp) Then
    App.MsgBox GetMsg(181)
    Exit Sub
  End If
  '
  ' Serialized Item?
  nQty = Val(Rsp)
  '
  If ((mbIsPlate Or mbSerialized) And nQty <> 1) Then
    App.MsgBox(GetMsg(177))
    Exit Sub
  End If
  '
  ' Not Zero
  nQty = Val(Rsp)
  '
  If (nQty<= 0) Then
    App.MsgBox GetMsg(180)
    Exit Sub
  End If
  '
  If Not mbIsPlate Then
    '
    ' exceeds
    If nQty > mnMaxQty Then
      App.MsgBox(GetMsg(175))
      Exit Sub
    End If
  End If
  '
  App.SetValue("tmQTY", Rsp)
  '
  Cancel = False
End Sub

'
'Private Sub txtAccept_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
'  On Error Resume Next
'  '
'  Dim iRow As Integer
'  '
'  iRow = txtAccept.Label.Top
'  '
'  Screen.Print 0, iRow, "Processing...", False, True, True
'End Sub
</Code>
