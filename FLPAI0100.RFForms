<Record FileDesc="LP - Attach Item" FileVersion="5.0.8.0" Desc="LP - Attach Item" Group="LP" LinkTo="No Links" LinkType="0" LinkMode="0" PromptList="txtMCU&vm;txtPALP&vm;lblLPDesc&vm;lblLPLocn&vm;txtLITM&vm;lblItemDesc&vm;txtLOTN&vm;txtLOCN&vm;txtOnHand&vm;txtQTY&vm;txtAccept" Depends="JDE.bas">
<Schema>
<SchemaParam Linked="0" Attr="1" Name="txtMCU" />
<SchemaParam Linked="0" Attr="2" Name="txtPALP" />
<SchemaParam Linked="0" Attr="3" Name="lblLPDesc" />
<SchemaParam Linked="0" Attr="4" Name="lblLPLocn" />
<SchemaParam Linked="0" Attr="5" Name="txtLITM" />
<SchemaParam Linked="0" Attr="6" Name="lblItemDesc" />
<SchemaParam Linked="0" Attr="7" Name="txtLOTN" />
<SchemaParam Linked="0" Attr="8" Name="txtLOCN" />
<SchemaParam Linked="0" Attr="9" Name="txtOnHand" />
<SchemaParam Linked="0" Attr="10" Name="txtQTY" />
<SchemaParam Linked="0" Attr="11" Name="txtAccept" />
</Schema>
<Displays>
<Display Name="EnglishGUI" Type="1" Width="1920" Height="7040" Locale="1033" />
</Displays>
<Form FieldId="Form" Attr="0" LinkMode="0" Pages="1">
<Controls>
<Control Type="1" FieldId="txtMCU" Attr="1" Defaults="@LAST" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="22" Width="55" Height="22" AnchorRight="185" AnchorBottom="276" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Plant:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="22" Width="151" Height="22" AnchorRight="41" AnchorBottom="276" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtPALP" Attr="2" Defaults="@LAST" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="16" Top="44" Width="39" Height="22" AnchorRight="185" AnchorBottom="254" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="LP#:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="44" Width="127" Height="22" AnchorRight="65" AnchorBottom="254" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblLPDesc" Attr="3">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="66" Width="79" Height="22" AnchorRight="113" AnchorBottom="232" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblLPDesc" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblLPLocn" Attr="4">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="88" Width="79" Height="22" AnchorRight="113" AnchorBottom="210" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblLPLocn" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLITM" Attr="5" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="110" Width="55" Height="22" AnchorRight="185" AnchorBottom="188" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Itm/LP" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="110" Width="191" Height="22" AnchorRight="1" AnchorBottom="188" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="10" FieldId="lblItemDesc" Attr="6">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="132" Width="95" Height="22" AnchorRight="97" AnchorBottom="166" BackColor1="000001" BackColor2="000001" ForeColor="00FFFF" Caption="lblItemDesc" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLOTN" Attr="7" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="154" Width="47" Height="22" AnchorRight="185" AnchorBottom="144" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Lot#:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="154" Width="191" Height="22" AnchorRight="1" AnchorBottom="144" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtLOCN" Attr="8" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="8" Top="176" Width="47" Height="22" AnchorRight="185" AnchorBottom="122" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Locn:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="176" Width="167" Height="22" AnchorRight="25" AnchorBottom="122" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtOnHand" Attr="9" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="198" Width="79" Height="22" AnchorRight="113" AnchorBottom="100" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="max.Qty :" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="128" Top="198" Width="87" Height="22" AnchorRight="25" AnchorBottom="100" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtQTY" Attr="10" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="16" Top="220" Width="39" Height="22" AnchorRight="185" AnchorBottom="78" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Qty:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="220" Width="87" Height="22" AnchorRight="105" AnchorBottom="78" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtAccept" Attr="11" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="264" Width="151" Height="22" AnchorRight="89" AnchorBottom="34" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Enter to accept..." />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="0" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="0" Width="0" Height="0" AnchorRight="240" AnchorBottom="320" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
</Controls>
<Layouts>
<Layout Visible="1" FormWidth="240" FormHeight="320" Scrollbars="0">
<Label Align="1" AutoSize="2" FontSize="0" FontStyle="0" Width="0" Height="22" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="[LP - Attach Item]" />
<Field AutoSize="0" BorderStyle="3" DropShadow="1" FontSize="0" FontStyle="0" BackColor1="000001" BackColor2="000001" ForeColor="000001" />
</Layout>
</Layouts>
</Form>
</Record>
<Code>
' -------------------------------------------------------------------------------
' | (C)opyright 2003-2012 The DataMAX Software Group, Inc., All Rights Reserved.|
' | RFgen JD Edwards Integration Suite Vers.# 420                               |
' -------------------------------------------------------------------------------
'
' LICENSE PLATES: ATTACH ITEM
'
' NOTES:
'
' MODIFICATION HISTORY:
'
Option Explicit

Private Const cTRANDESC = "RFGen Attach LP"
Private Const cTNId = "FLPAI0100"

Private msPgm        As String
Private msVersion    As String
Private msDOCTYPE    As String
Private msAllowHold  As String
Private mnMaxQty     As Currency
Private gsLPSource   As String
Private mbSerialized As Boolean
Private mbIsPlate    As Boolean

Private Sub Form_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  Dim iCN As Integer
  '
  iCN = App.PromptNo
  RFPrompt(iCN).BorderStyle = DisplayStandard
  RFPrompt(iCN).BackColor1 = cFieldFocusBC
  RFPrompt(iCN).ForeColor = cFieldFocusFC
End Sub

Private Sub Form_Load()
  On Error Resume Next
  '
  Call SetDisplay()
  '
  Dim sHeader As String
  '
  lblLPDesc.Caption = ""
  lblLPDesc.Label.BackColor1 = cFieldDefaultBC
  lblLPDesc.Label.ForeColor = cFieldDefaultFC
  '
  lblLPLocn.Caption = ""
  lblLPLocn.Label.BackColor1 = cFieldDefaultBC
  lblLPLocn.Label.ForeColor = cFieldDefaultFC
  '
  lblItemDesc.Caption = ""
  lblItemDesc.Label.BackColor1 = cFieldDefaultBC
  lblItemDesc.Label.ForeColor = cFieldDefaultFC
  '
  txtLOTN.Required = False
  txtLOTN.Visible = False
  '
  txtAccept.Visible = False

  ' Get Proc.Opt. Version from Menu
  msPgm     = App.GetValue("Pgm")
  msVersion = App.GetValue("Vers")

  ' get DocType from Proc.Opt. for Inv. Transfer
  msDOCTYPE = GetProcOpt(msPgm,msVersion,"1;1",sHeader)
  '
  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If
End Sub

Private Sub Form_LostFocus()
  On Error Resume Next
  '
  Dim iCN As Integer
  '
  iCN = App.PromptNo
  RFPrompt(iCN).BorderStyle = DisplayTransparent
  RFPrompt(iCN).BackColor1 = cFieldDefaultBC
  RFPrompt(iCN).ForeColor = cFieldDefaultFC
End Sub

Private Sub Form_OnUpdate(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim bDettach As Boolean
  '
  App.SetValue("LPITVersion", msVersion)
  '
  '--------------------------------------------------------------------------
  ' attach full LP or item.
  '
  If gbCommitCtl then DB.BeginTrans(gsLPSource)
  '
  Dim uLPOper As LPOper         ' LP Operation
  Dim uLP101 As LP101Data       ' create LP101 Structure
  Dim uLP102 As LP102Data       ' create LP101 Structure
  Call LP101_Reset(uLP101)      ' init LP101 Structure
  Call LP102_Reset(uLP102)      ' init LP102 Structure
  '
  If mbIsPlate Then
      'Public Type LPOper
   uLPOper.sLPID      = App.GetValue("tmLPID")    ' LP ID Child
   uLPOper.sPALP      = App.GetValue("tmPALP")    ' LP ID Parent
   uLPOper.sFMCU      = App.GetValue("tmNMCU")    ' from Plant
   uLPOper.sTMCU      = App.GetValue("tmMCU")     ' to Plant
   uLPOper.sFLOCN     = App.GetValue("tmLOCN")    ' from Location
   uLPOper.sTLOCN     = App.GetValue("tmNLOCN")   ' to Location
   uLPOper.nQty       = App.GetValue("tmQty")     ' Operation Qty.
   uLPOper.bIsPlate   = mbIsPlate                 ' Plate or Item
   uLPOper.bDetach    = False                     ' remove item
    '
  Else
    '
    uLP101.sLMLPID    = App.GetValue("tmPALP")    ' Parent LP

    uLP102.sLDLPID    = uLP101.sLMLPID            ' LP line Details
    uLP102.sLDLITM    = App.GetValue("tmLITM")
    uLP102.nLDSOQS    = 0
    uLP102.nLDUORG    = App.GetValue("tmQTY")
    uLP102.sLDUOM     = App.GetValue("tmUOM")
    uLP102.sLDLOTN    = App.GetValue("tmLOTN")
    uLP102.sLDLOTS    = App.GetValue("tmTOLOTS")
    uLP102.sLDRDOCO   = ""
    uLP102.sLDRDCTO   = ""
    uLP102.sLDRLNID   = 0
    uLP102.sLDLOT2    = App.GetValue("tmLOT1")
    uLP102.sLDVUOM    = App.GetValue("tmUOM")
    '
      'Public Type LPOper
   uLPOper.sLPID      = ""                        ' LP ID Child
   uLPOper.sPALP      = App.GetValue("tmPALP")    ' LP ID Parent
   uLPOper.sFMCU      = App.GetValue("tmMCU")     ' from Plant
   uLPOper.sTMCU      = App.GetValue("tmMCU")     ' to Plant
   uLPOper.sFLOCN     = App.GetValue("tmLOCN")    ' from Location
   uLPOper.sTLOCN     = App.GetValue("tmNLOCN")   ' to Location
   uLPOper.nQty       = App.GetValue("tmQty")     ' Operation Qty.
   uLPOper.bIsPlate   = mbIsPlate                 ' Plate or Item
   uLPOper.bDetach    = False                     ' remove item
    '
  End If
  '
  If Not LP_AttachDetach(uLPOper, uLP102) Then
    App.MsgBox(GetMsg(40))
    If gbCommitCtl then DB.RollbackTrans(gsLPSource)
    GoTo LPDone
  End If
  '
  If gbCommitCtl then DB.CommitTrans(gsLPSource)
  LPDone:
  '
  '--------------------------------------------------------------------------
  '
  lblLPDesc.Caption = ""
  lblLPLocn.Caption = ""
  lblItemDesc.Caption = ""
  '
  txtLOTN.Required = False
  txtLOTN.Visible = False
  '
  mnMaxQty = 0
  mbSerialized = False
  mbIsPlate = False
End Sub

Private Sub txtMCU_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmMCU", "")
  App.SetValue("tmCO",  "")
End Sub

Private Sub txtMCU_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  If (Len(Rsp)=0) Then Rsp = GetDefaultMCU()
  If Len(Rsp) > 0 Then AllowChange = False
End Sub

Private Sub txtMCU_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL   As String
  Dim sCols  As String
  Dim sRows  As String
  Dim sMCU     As String
  Dim sCompany As String
  '
  Rsp = UCase(Trim(Rsp))
  '
  If (Len(Rsp)=0) Then Exit Sub
  Cancel = True
  '
  If Not Validate_BranchPlant(Rsp, sMCU, sCompany) Then Exit Sub
  '
  App.SetValue("tmCO",  sCompany)
  App.SetValue("tmMCU", sMCU)
  App.SetValue("tmNMCU", sMCU)

    ' get Entity from MCU
  sSQL = "select EBCO from LP005 where EBMCU = '%tmMCU' "
  DB.Execute(sSQL, sCols, sRows)
  App.SetValue("tmEntity", DB.Extract(sCols,sRows,1,1))
  Cancel = False
End Sub

Private Sub txtMCU_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  If Not Search_BranchPlant(Rsp) Then Cancel = True
End Sub

Private Sub txtPALP_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmPALP",   "")
  App.SetValue("tmTYPE",   "")
  App.SetValue("tmNMCU",  "")
  App.SetValue("tmNLOCN", "")
  '
  lblLPDesc.Caption = ""
  lblLPLocn.Caption = ""
End Sub

Private Sub txtPALP_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sError    As String
  Dim uLP101    As LP101Data       ' create LP101 Structure
  '
  Rsp = UCase(Trim(Rsp))
  Cancel = True
  If (Len(Rsp)=0) Then Exit Sub
  '
  Call LP101_Reset(uLP101)      ' init LP101 Structure
  '
  uLP101.sLMLPID = Rsp
  If Not X_LP101("I",uLP101) Then   ' Inquiry on LP101
    App.MsgBox(GetMsg(104))
    Exit Sub
  End If
  '
  lblLPDesc.Caption = uLP101.sLMDSC1
  lblLPLocn.Caption = uLP101.sLMLOCN
  '
  App.SetValue("tmPALP",  Rsp)
  App.SetValue("tmTYPE",  uLP101.sLMTYPE)
  App.SetValue("tmNMCU",  uLP101.slmMCU)          ' Parent MCU
  App.SetValue("tmNLOCN", uLP101.sLMLOCN)         ' Parent Location
  '
  Cancel = False
End Sub

Private Sub txtPALP_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Cancel = Not Search_LP101(Rsp, App.GetValue("tmMCU"))
End Sub

Private Sub txtLITM_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmLITM", "")
  App.SetValue("tmITM",  "")
  App.SetValue("tmUOM",  "")
  '
  lblItemDesc.Caption =  ""
  '
  txtLOTN.Visible = False
  txtLOTN.Required = False
End Sub

Private Sub txtLITM_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim bHasLots    As Boolean
  Dim bCancel     As Boolean
  Dim nType       As Long
  Dim sSQL        As String
  Dim sCols       As String
  Dim sRows       As String
  Dim sDESC       As String
  Dim sUOM        As String
  Dim sITM        As String
  Dim sLITM       As String
  Dim sAITM       As String
  Dim sLPID       As String
  Dim sPALP       As String
  Dim sMCU        As String
  Dim sLOCN       As String
  Dim sLOTN       As String
  Dim sChildLP    As String
  Dim sTYPE       As String
  Dim nChildCube  As Currency
  Dim nParentCube As Currency
  '
  Rsp = UCase(Trim(Rsp))
  '
  If (Len(Rsp) = 0) Then Exit Sub
  Cancel = True

  txtLOCN.DisplayOnly = False
  txtQty.DisplayOnly = False
  '
  ' Inventory Item?
  '
  If Validate_Item(App.GetValue("tmMCU"), Rsp, sITM, sLITM, sAITM, sDESC, sUOM, nType, bHasLots, mbSerialized, False, True ) Then
    mbIsPlate = False
    '
    ' default From Lot & Location when Proc.Opt. = 1
    If GetProcOpt(msPgm,msVersion,"1;2") = "1" Then
      If GetItemPrimary(App.GetValue("tmMCU"),sITM,sLOTN,sLOCN) Then
        txtLOCN.Defaults = sLOCN & ";O"                                       ' default Location
        If bHasLots And Len(sLOTN) > 0 Then txtLOTN.Defaults = sLOTN & ";O"   ' default Lot Number if lot controlled
      End If
    End If
    '
    If gbPOError Then
      App.ExitForm
      Exit Sub
    End If

    txtOnHand.Visible = True
    '
    'If the item is a Item then LOCN is req
    txtLOCN.Visible = True
    txtLOCN.Required = True
    '
  Else ' scanned item is a license plate
    '
    sPALP = App.GetValue("tmPALP")
    '
    If sPALP = Trim(Rsp) Then
      App.MsgBox GetMsg(201)
      Exit Sub
    End If
    '
    ' Check if LP exists
    '
    Dim uLP101 As LP101Data       ' create LP101 Structure
    Dim uLP102 As LP102Data       ' create LP101 Structure
    Call LP101_Reset(uLP101)      ' init LP101 Structure
    Call LP102_Reset(uLP102)      ' init LP102 Structure
    '
    uLP101.sLMLPID = Rsp          ' Assign LMLPID Value
    '
    If Not X_LP101("I",uLP101) Then   ' Inquiry on LP101
      App.MsgBox(GetMsg(104))
      Exit Sub
    End If
    '
    ' check if already attached as child
    '
    If Len(Trim(uLP101.sLMPALP)) > 0 Then
      App.MsgBox(GetMsg(13) & " " & uLP101.sLMPALP)
      Exit Sub
    End If
    '
    '
    'check if already attached as child
    App.SetValue("LMLPID",Rsp)
    App.SetValue("LMMCU",App.GetValue("tmMCU"))
    '
    App.SetValue("tmLPID", Rsp)


    txtLOCN.Text = uLP101.slmlocn
    txtLOCN.DisplayOnly = True
    txtQty.Text = 1
    txtQty.DisplayOnly = True
    '
    mbIsPlate = True

    txtOnHand.Visible = False
    '
    'If the item is a LP then LOCN is not req
    txtLOCN.Visible = False
    txtLOCN.Required = False
  End If
  '
  App.SetValue("tmLITM", Rsp)
  App.SetValue("tmITM",  sITM)
  App.SetValue("tmUOM",  sUOM)
  App.SetValue("tmLOTN", "")
  '
  mnMaxQty = 0
  '
  lblItemDesc.Caption = sDESC
  '
  txtLOTN.Visible = bHasLots
  txtLOTN.Required = bHasLots
  '
  Cancel = False
End Sub

Private Sub txtLITM_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim sSQL  As String
  Dim vRsp  As Variant
  Dim oList As New SearchList
  '
  sMCU = App.GetValue("tmMCU")
  vRsp = App.MsgBox(GetMsg(204),,,"[Item] [Plate]")
  '
  If vRsp = "Plate" Then
    If Not Search_LP101(Rsp, sMCU) Then Cancel = True
  Else
    If Not Search_F4101(Rsp, "", sMCU) Then Cancel = True
  End If
End Sub

Private Sub txtLOTN_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
   App.SetValue("tmLOTN", "")
End Sub

Private Sub txtLOTN_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  '
  If (Len(Rsp)=0) Then Exit Sub
  Cancel = True
  Rsp = Trim(UCase(Rsp))
  '
  ' Validate
  sSQL = "select count(*) from  F4108" & _
         " where IOLOTN = '" & Rsp & "' and IOITM = '%tmITM' and IOMCU = '%tmMCU'"
  DB.Execute(sSQL, sCols, sRows)
  '
  If (Val(sRows) = 0) Then
    App.MsgBox(GetMsg(78))
    Exit Sub
  End If
  '
  App.SetValue("tmLOTN", Rsp)
  Cancel = False
End Sub

Private Sub txtLOTN_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim sITM  As String
  Dim sLOCN As String
  '
  sMCU = App.GetValue("tmMCU")
  sITM = App.GetValue("tmITM")
  '
  If Not Search_F41021_LOTN(Rsp, "", sMCU, sITM, sLOCN, True) Then Cancel = True
End Sub

Private Sub txtLOCN_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmLOCN", "")
End Sub

Private Sub txtLOCN_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sMCU    As String
  Dim sLOCN   As String
  Dim sId     As String
  Dim sSQL    As String
  Dim sCols   As String
  Dim sRows   As String
  Dim nOnHand As Currency
  Dim nAvail  As Currency
  Dim sHold   As String
  '
  If (Len(Rsp)=0) Then Exit Sub
  Cancel = True
  '
  sMCU = App.GetValue("tmMCU")
  If Not Validate_Locn(Rsp, sMCU, sLOCN, True) Then Exit Sub
  '
  Cancel = True
  '
  If mbIsPlate Then
    mnMaxQty = 1
  Else
    ' check Proc.Opt.if Lots on Hold are allowed
    msAllowHold = GetProcOpt(msPgm,msVersion,"3;3")
    '
    If gbPOError Then
      App.ExitForm
      Exit Sub
    End If

    Call GetItemQty(sMCU,App.GetValue("tmITM"),App.GetValue("tmLOTN"),sLOCN,msAllowHold,nOnHand,nAvail,sHold)

    If msAllowHold = "" And sHold <> "" Then
      App.MsgBox(GetMsg(121))
      Exit Sub
    End If

    ' show adjustable Qty. regarding Proc.Opt.
    txtOnHand.Visible = True

    Select Case GetProcOpt(msPgm,msVersion,"3;4")
      Case ""   'Disallow neg.qty available
        If nAvail < 0 Then
          mnMaxQty = 0
          txtOnHand.Text = " 0 " & App.GetValue("tmUOM")
        Else
          mnMaxQty = (nAvail)
          txtOnHand.Text = mnMaxQty & " " & App.GetValue("tmUOM")
        End If

      Case "1"  'Allow neg.qty available
        mnMaxQty = 99999999
        txtOnHand.Visible = False

      Case "2"  'Disallow neg.qty on Hand
        If nOnHand < 0 Then
          mnMaxQty = 0
          txtOnHand.Text = " 0 " & App.GetValue("tmUOM")
        Else
          mnMaxQty = nOnHand
          txtOnHand.Text = mnMaxQty & " " & App.GetValue("tmUOM")
        End If
    End Select
    '
    If gbPOError Then
      App.ExitForm
      Exit Sub
    End If
  End If

  App.SetValue("tmLOCN", sLOCN)
  App.SetValue("tmLOTS", sHold)
  '
  Cancel = False
End Sub

Private Sub txtLOCN_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim sITM  As String
  Dim sLOTN As String
  '
  If Not mbIsPlate Then
    sMCU  = App.GetValue("tmMCU")
    sITM  = App.GetValue("tmITM")
    sLOTN = App.GetValue("tmLOTN")
    '
    If Not Search_F41021_LOCN(Rsp, "", sMCU, sITM, sLOTN, True) Then Cancel = True
  End If
End Sub

Private Sub txtQTY_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  If Not mbIsPlate Then Exit Sub
  If (Len(Rsp)>0) Then  Exit Sub
  '
  Rsp = "1"
  AllowChange = False
End Sub

Private Sub txtQTY_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmQTY", "")
End Sub

Private Sub txtQTY_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim nQty  As Currency
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  Dim sId   As String
  '
  If (Len(Rsp)=0) Then Exit Sub
  Cancel = True
  '
  ' Numeric?
  If Not IsNumeric(Rsp) Then
    App.MsgBox GetMsg(181)
    Exit Sub
  End If
  '
  ' Serialized Item?
  nQty = Val(Rsp)
  '
  If ((mbIsPlate Or mbSerialized) And nQty <> 1) Then
    App.MsgBox(GetMsg(177))
    Exit Sub
  End If
  '
  ' Not Zero
  nQty = Val(Rsp)
  '
  If (nQty<= 0) Then
    App.MsgBox GetMsg(180)
    Exit Sub
  End If
  '
  If Not mbIsPlate Then
    '
    ' exceeds
    If nQty > mnMaxQty Then
      App.MsgBox(GetMsg(175))
      Exit Sub
    End If
  End If
  '
  App.SetValue("tmQTY", Rsp)
  '
  Cancel = False
End Sub

Private Sub txtAccept_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  txtAccept.Visible = True
End Sub

Private Sub txtAccept_LostFocus()
  On Error Resume Next
  '
  txtAccept.Visible = False
End Sub

Private Sub txtAccept_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim iRow As Integer
  '
  iRow = txtAccept.Label.Top
  '
  Screen.Print 0, iRow, "Processing...", False, True, True
End Sub
</Code>
