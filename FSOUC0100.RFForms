<Record FileDesc="SO - Print UCC Labels" FileVersion="5.0.8.0" Desc="SO - Print UCC Labels" Group="SO" LinkTo="No Links" LinkType="0" LinkMode="0" PromptList="txtMCU&vm;txtDOCO&vm;txtDCTO&vm;txtQTY&vm;txtAccept&vm;lstAddress" Depends="X41.bas">
<Schema>
<SchemaParam Linked="0" Attr="1" Name="txtMCU" />
<SchemaParam Linked="0" Attr="2" Name="txtDOCO" />
<SchemaParam Linked="0" Attr="3" Name="txtDCTO" />
<SchemaParam Linked="0" Attr="4" Name="txtQTY" />
<SchemaParam Linked="0" Attr="5" Name="txtAccept" />
<SchemaParam Linked="0" Attr="6" Name="lstAddress" />
</Schema>
<Displays>
<Display Name="EnglishGUI" Type="1" Width="1920" Height="7040" Locale="1033" />
</Displays>
<Form FieldId="Form" Attr="0" LinkMode="0" Pages="1">
<Controls>
<Control Type="1" FieldId="txtMCU" Attr="1" Defaults="@LAST" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="22" Width="55" Height="22" AnchorRight="185" AnchorBottom="276" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Plant:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="22" Width="119" Height="22" AnchorRight="73" AnchorBottom="276" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtDOCO" Attr="2" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="16" Top="44" Width="39" Height="22" AnchorRight="185" AnchorBottom="254" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="SO#:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="48" Top="44" Width="103" Height="22" AnchorRight="89" AnchorBottom="254" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtDCTO" Attr="3" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="152" Top="44" Width="47" Height="22" AnchorRight="41" AnchorBottom="254" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Type:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="192" Top="44" Width="39" Height="22" AnchorRight="9" AnchorBottom="254" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtQTY" Attr="4" Defaults="1;O" KeyField="0" MaskInput="0" Required="1">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="242" Width="71" Height="22" AnchorRight="169" AnchorBottom="56" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="#Labels:" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="64" Top="242" Width="87" Height="22" AnchorRight="89" AnchorBottom="56" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="1" FieldId="txtAccept" Attr="5" KeyField="0" MaskInput="0" Required="0">
<Layouts>
<Layout PageNo="1" Visible="1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="286" Width="151" Height="22" AnchorRight="89" AnchorBottom="12" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="Enter to accept..." />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="0" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="0" Width="0" Height="0" AnchorRight="240" AnchorBottom="320" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="0" />
</Layout>
</Layouts>
</Control>
<Control Type="3" FieldId="lstAddress" Attr="6" Sorted="0">
<Layouts>
<Layout PageNo="1" Visible="1" ExtendCol="-1">
<Label Anchor="3" AutoSize="1" BorderStyle="5" BackFill="0" FontSize="0" FontStyle="0" MultiLine="0" Left="0" Top="88" Width="63" Height="22" AnchorRight="177" AnchorBottom="210" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="ListBox" />
<Field Align="0" Anchor="3" AutoSize="0" BorderStyle="3" BackFill="0" FontSize="0" FontStyle="0" MultiLine="1" Left="0" Top="88" Width="239" Height="132" AnchorRight="1" AnchorBottom="100" BackColor1="000001" BackColor2="000001" ForeColor="000001" DisplayOnly="1" />
<Columns />
</Layout>
</Layouts>
</Control>
</Controls>
<Layouts>
<Layout Visible="1" FormWidth="240" FormHeight="320" Scrollbars="0">
<Label Align="1" AutoSize="2" FontSize="0" FontStyle="0" Width="0" Height="22" BackColor1="000001" BackColor2="000001" ForeColor="000001" Caption="[Print Address Labels]" />
<Field AutoSize="0" BorderStyle="3" DropShadow="1" FontSize="0" FontStyle="0" BackColor1="000001" BackColor2="000001" ForeColor="000001" />
</Layout>
</Layouts>
</Form>
</Record>
<Code>
' -------------------------------------------------------------------------------
' | (C)opyright 2003-2012 The DataMAX Software Group, Inc., All Rights Reserved.|
' | RFgen JD Edwards Integration Suite Vers.# 420                               |
' -------------------------------------------------------------------------------
'
' PURCHASE ORDERS: PRINT UCC LABELS
'
' NOTES:
'
' MODIFICATION HISTORY:
'

Option Explicit

Private Const cForceLOTN    = False     ' True = force User to confirm same Lot Number
Private Const cForceLOCN    = False     ' True = force User to confirm same Location
Private Const cTNId         = "FSOUC0100"
Private msPgm               As String
Private msVersion           As String
Private msStatusF           As String
Private msStatusT           As String
Private msRelInv            As Boolean
Private mbAddFr             As Boolean
Private mnMaxQty            As Currency
Private mnMaxQoH            As Currency
Private msHardLOCN          As String
Private msHardLOTN          As String
Private mbSerialized        As Boolean
Private msResKey            As String
Private msResKeySav         As String
Private msAppl              As String
Private mnUKID              As Long

Private Sub Form_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  Dim iCN As Integer
  Dim sFieldId As String
  '
  iCN = App.PromptNo
  RFPrompt(iCN).BorderStyle = DisplayStandard
  RFPrompt(iCN).BackColor1 = cFieldFocusBC
  RFPrompt(iCN).ForeColor = cFieldFocusFC
  '
  sFieldId = RFPrompt(iCN).FieldId



End Sub

Private Sub Form_Load()
  On Error Resume Next
  '
  Call SetDisplay()
  '
  Dim sHeader As String
  '
  ' Initialize the RFGen recordset with extra fields
  App.SetValue("tmCO",      "")
  App.SetValue("tmMCU",     "")
  App.SetValue("tmDOCO",    "")
  App.SetValue("tmDCTO",    "")
  App.SetValue("tmLITM",    "")
  App.SetValue("tmLOTN",    "")
  App.SetValue("tmLOCN",    "")
  App.SetValue("tmQTY",     "")
  App.SetValue("tmUOM",     "")
  App.SetValue("tmLNID",    "")
  App.SetValue("tmSHIPTO",  "")
  App.SetValue("tmCARRIER", "")
  App.SetValue("tmLNTY",    "")
  '
  ' Initialize special controls
'
  '
  txtAccept.Visible = False

  ' Get Proc.Opt. Version from Menu
  msPgm     = App.GetValue("Pgm")
  msVersion = App.GetValue("Vers")

  ' Get Status From from Proc.Opt. and Header
  msStatusF = GetProcOpt(msPgm,msVersion,"1;1",sHeader)

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If



  ' Get Status To from Proc.Opt. and Header
  msStatusT = GetProcOpt(msPgm,msVersion,"1;2")

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  ' Does Version relieve Inv?  from Proc.Opt.
  msRelInv = True

  If GetProcOpt(msPgm,msVersion,"5;4") = "1" Then msRelInv = False

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If

  ' Does Version allow Add Freight?  from Proc.Opt.
  mbAddFr = True

  If GetProcOpt(msPgm,msVersion,"3;1") <> "1" Then mbAddFr = False

  If gbPOError Then
    App.ExitForm
    Exit Sub
  End If



End Sub

Private Sub Form_LostFocus()
  On Error Resume Next
  '
  Dim iCN As Integer
  '
  iCN = App.PromptNo
  RFPrompt(iCN).BorderStyle = DisplayTransparent
  RFPrompt(iCN).BackColor1 = cFieldDefaultBC
  RFPrompt(iCN).ForeColor = cFieldDefaultFC

End Sub

Private Sub Form_OnFkey(ByRef Fkey As Long)
  On Error Resume Next
  '
  Dim sData As String

  If Fkey = 2 Then
    If mbAddFr Then
      sData = " -MCU="  & Trim(App.GetValue("tmMCU"))   & _
              " -DOCO=" & Trim(App.GetValue("tmDOCO"))  & _
              " -DCTO=" & Trim(App.GetValue("tmDCTO"))  & _
              " -Pgm=" & Trim(msPgm)  & _
              " -Vers=" & Trim(msVersion)
      App.CallForm("FSOAL0100" & sData,True,True)
    End If
  End If

End Sub

Private Sub Form_OnUpdate(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  If Not PrintLabels("UCC", App.GetValue("tmQTY")) Then
    App.MsgBox( GetMsg(257))
    Exit Sub
  End If

End Sub

Private Sub Form_Unload()
  On Error Resume Next
  '
  'App.SetOption(ShowHorizontalScrollBar, False)   ' todo - upgrade: App.SetOption removed

End Sub

Private Sub txtMCU_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '
  If (Len(Rsp)=0) Then Rsp = GetDefaultMCU()
  If Len(Rsp) > 0 Then AllowChange = False
End Sub

Private Sub txtMCU_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmMCU", "")
  App.SetValue("tmCO",  "")

End Sub

Private Sub txtMCU_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sMCU     As String
  Dim sCompany As String
  '
  If (Len(Rsp)=0) Then Exit Sub
  '
  Cancel = True
  If Not Validate_BranchPlant(Rsp, sMCU, sCompany) Then Exit Sub
  '
  App.SetValue("tmCO",   sCompany)
  App.SetValue("tmMCU",  sMCU)
  Cancel = False
End Sub

Private Sub txtMCU_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Cancel = Not Search_BranchPlant(Rsp)
End Sub

Private Sub txtDOCO_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmDOCO", "")

End Sub

Private Sub txtDOCO_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel = True
  '
  ' Numeric?
  If Not IsNumeric(Rsp) Then
    App.MsgBox GetMsg(276)
    Exit Sub
  End If
  '
  sSQL = "select DISTINCT SDDOCO, SDDCTO from  F4211" & _
         " where SDDOCO = " & Rsp & " and SDNXTR between '" & msStatusF & "' and '" & msStatusT & "' and SDMCU = '%tmMCU' " & _
         " order by SDDOCO, SDDCTO "
  '
  DB.Execute(sSQL, sCols, sRows)

  If (Len(sRows) = 0) Then
    App.MsgBox GetMsg(198)
    Exit Sub
  End If
  '
  ' If Ordernumber is unique default DocType
  If (DB.Count(sRows) = 1) Then
    txtDCTO.Text = DB.Extract(sCols,sRows,1,"SDDCTO")
  End If
  '
  App.SetValue("tmDOCO", Rsp)
  '
  Cancel = False

End Sub

Private Sub txtDOCO_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU     As String
  Dim sDocType As String
  '
  sMCU = App.GetValue("tmMCU")
  '
  Cancel = Not Search_F4211_DOCO(Rsp, sMCU, msStatusF, msStatusT, sDocType)
  If Not Cancel Then txtDCTO.Text = sDocType
End Sub

Private Sub txtDCTO_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmDCTO", "")

End Sub

Private Sub txtDCTO_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  Dim sHold As String
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel = True
  '
  Rsp = UCase(Rsp)
  '
  sSQL = "select count(*) from  F4211" & _
         " where SDDCTO = '" & Rsp & "' and SDDOCO = %tmDOCO and SDMCU = '%tmMCU'"
  '
  DB.Execute(sSQL, sCols, sRows)

  If (Val(sRows) = 0) Then
    App.MsgBox GetMsg(197)
    Exit Sub
  End If

  ' Check if SO is on Hold
  sSQL = "select SHHOLD, SHSHAN from  F4201" & _
         " where SHDCTO = '" & Rsp & "' and SHDOCO = %tmDOCO and SHMCU = '%tmMCU'"
  '
  DB.Execute(sSQL, sCols, sRows)

  sHold = DB.Extract(sCols,sRows,1,1)

  If Trim(sHold) <> "" Then
    App.MsgBox GetMsg(214)
    Exit Sub
  End If
  '
  App.SetValue("tmDCTO", Rsp)
  App.SetValue("SHSHAN", DB.Extract(sCols, sRows, 1, "SHSHAN"))
  '
  ' Get address
  sSQL = "select * from F0116" & _
         " inner join F0101 on ALAN8 = ABAN8" & _
         " where ALAN8 = %SHSHAN"
  DB.Execute(sSQL, sCols, sRows)

  lstAddress.List.AddItem Trim(DB.Extract(sCols, sRows, 1, "ABALPH"))
  lstAddress.List.AddItem Trim(DB.Extract(sCols, sRows, 1, "ALADD1"))
  lstAddress.List.AddItem Trim(DB.Extract(sCols, sRows, 1, "ALADD2"))
  lstAddress.List.AddItem Trim(DB.Extract(sCols, sRows, 1, "ALADD3"))
  lstAddress.List.AddItem Trim(DB.Extract(sCols, sRows, 1, "ALADD4"))
  lstAddress.List.AddItem Trim(DB.Extract(sCols, sRows, 1, "ALCTY1")) & " " & Trim(DB.Extract(sCols, sRows, 1, "ALADDS")) & ", " & Trim(DB.Extract(sCols, sRows, 1, "ALADDZ"))

  App.SetValue("tmADD1", Trim(DB.Extract(sCols, sRows, 1, "ABALPH")))
  App.SetValue("tmADD2", Trim(DB.Extract(sCols, sRows, 1, "ALADD1")))
  App.SetValue("tmADD3", Trim(DB.Extract(sCols, sRows, 1, "ALADD2")))
  App.SetValue("tmADD4", Trim(DB.Extract(sCols, sRows, 1, "ALADD3")))
  App.SetValue("tmADD5", Trim(DB.Extract(sCols, sRows, 1, "ALADD4")))
  App.SetValue("tmADD6", Trim(DB.Extract(sCols, sRows, 1, "ALCTY1")) & " " & Trim(DB.Extract(sCols, sRows, 1, "ALADDS")) & ", " & Trim(DB.Extract(sCols, sRows, 1, "ALADDZ")))
  App.SetValue("tmADDZ", Trim(DB.Extract(sCols, sRows, 1, "ALADDZ")))

  Cancel = False

End Sub

Private Sub txtDCTO_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim vDOCO As String
  '
  sMCU  = App.GetValue("tmMCU")
  vDOCO = App.GetValue("tmDOCO")
  '
  Cancel = Not Search_F4211_DCTO(Rsp, sMCU, vDOCO, msStatusF, msStatusT)
End Sub

Private Sub txtLITM_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmLITM", "")
  App.SetValue("tmITM",  "")
  App.SetValue("tmUOM",  "")
  App.SetValue("tmLNID", "")
  App.SetValue("tmLOTN", "")
  App.SetValue("tmLNTY", "")
  App.SetValue("tmSOBK", "")
  App.SetValue("tmSOCN", "")
  '
  '
  mnMaxQty = 0
  mnMaxQoH = 0
  msHardLOTN = ""
  msHardLOCN = ""
  mbSerialized = False

End Sub

Private Sub txtLITM_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim nLNID    As Currency
  Dim nSOBK    As Currency
  Dim nSOCN    As Currency
  Dim sMCU     As String
  Dim sLot     As String
  Dim sLocn    As String
  Dim sCOMM    As String
  Dim sITM     As String
  Dim sLITM    As String
  Dim sAITM    As String
  Dim sDesc    As String
  Dim sDSC1    As String
  Dim sUOM     As String
  Dim nType    As Long
  Dim bHasLots As Boolean
  Dim sSQL     As String
  Dim sCols    As String
  Dim sRows    As String
  '
  If (Len(Rsp) = 0) Then Exit Sub

  Cancel=True
  '
  Rsp = Trim(UCase(Rsp))
  '
  ' Validate Item Master / get Item Branch
  If Not Validate_Item(App.GetValue("tmMCU"), Rsp, sITM, sLITM, sAITM, sDSC1, sUOM, nType, bHasLots, mbSerialized) Then Exit Sub

  App.SetValue("tmITM", sITM)
  App.SetValue("tmLITM", Rsp)
  App.SetValue("tmLOTN", "")
  '
  ' Check SO Line
  '
  sSQL = "select SDLNID, SDSOQS, SDUOM, SDNXTR, SDITM, SDDSC1, SDLOCN, SDLOTN, SDLNTY, SDSOBK, SDSOCN, SDCOMM, SDKCOO  from  F4211" & _
         " where SDDOCO = %tmDOCO  and SDDCTO = '%tmDCTO' and SDLITM = '" & Rsp & "' and SDSOQS <> 0 " & _
         " and SDNXTR between '" & msStatusF & "' and '" & msStatusT & "' and SDMCU = '%tmMCU'"
  '
  nLNID = Val(App.GetValue("tmLNID"))

  If (nLNID <> 0) Then
    sSQL = sSQL & " and SDLNID = " & ConvDecimalsToSQL("LNID", nLNID)
  End If
  '
  DB.Execute(sSQL,sCols,sRows)

  If (Len(sRows) = 0) Then
    App.MsgBox(GetMsg(101))
    Exit Sub
  End If
  '
  sDesc    = DB.Extract(sCols, sRows, 1, "SDDSC1")
  sLot     = DB.Extract(sCols, sRows, 1, "SDLOTN")
  sLocn    = DB.Extract(sCols, sRows, 1, "SDLOCN")
  sCOMM    = DB.Extract(sCols, sRows, 1, "SDCOMM")
  nSOBK    = ConvDecimalsFromSQL("SOBK", DB.Extract(sCols,sRows,1,"SDSOBK"))
  nSOCN    = ConvDecimalsFromSQL("SOCN", DB.Extract(sCols,sRows,1,"SDSOCN"))
  nLNID    = ConvDecimalsFromSQL("LNID", DB.Extract(sCols,sRows,1,"SDLNID"))
  mnMaxQty = ConvDecimalsFromSQL("SOQS", DB.Extract(sCols,sRows,1,"SDSOQS"))
  '
  App.SetValue("tmLNID", nLNID)
  App.SetValue("tmUOM",  DB.Extract(sCols,sRows,1,"SDUOM"))
  App.SetValue("tmITM",  DB.Extract(sCols, sRows, 1, "SDITM"))
  App.SetValue("tmLNTY", DB.Extract(sCols, sRows, 1, "SDLNTY"))
  App.SetValue("tmCO",   DB.Extract(sCols, sRows, 1, "SDKCOO"))  ' INS RBR 01/08/2007
  App.SetValue("tmSOBK", nSOBK)
  App.SetValue("tmSOCN", nSOCN)
  App.SetValue("SelCOMM",sCOMM)
  '
  msHardLOTN = Trim(sLot)
  '
  If Len(Trim(sLocn)) > 0 Then
    sMCU = App.GetValue("tmMCU")
    msHardLOCN = sLocn
    Call Validate_Locn(msHardLOCN, sMCU, sLocn)
  End If
  '
  '
  '
  If Not bHasLots Then  App.SetValue("tmLOTN", "")
  '
  Cancel=False

End Sub

Private Sub txtLITM_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim vDOCO As Variant
  Dim sDCTO As String
  Dim sLNID As String
  '
  sMCU  = App.GetValue("tmMCU")
  vDOCO = App.GetValue("tmDOCO")
  sDCTO = App.GetValue("tmDCTO")
  '
  Cancel = Not Search_F4211_LITM(Rsp, Rsp, sMCU, vDOCO, sDCTO, msStatusF, msStatusT, sLNID)
  If Not Cancel Then App.SetValue("tmLNID", sLNID)
End Sub

Private Sub txtLOTN_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
   App.SetValue("tmLOTN", "")

End Sub

Private Sub txtLOTN_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel=True
  '
  Rsp = Trim(UCase(Rsp))
  '
  ' Validate if hardcommited in SO
  If cForceLOTN And (Len(msHardLOTN)>0) Then
    If (Rsp <> msHardLOTN) Then
      App.MsgBox(GetMsg(212))
      Exit Sub
    End If
  End If
  '
  ' Validate
  sSQL = "select count(*) from  F4108" & _
         " where IOLOTN = '" & Rsp & "' and IOLITM = '%tmLITM' and IOMCU = '%tmMCU'"
  '
  DB.Execute(sSQL, sCols, sRows)

  If (Val(sRows) = 0) Then
    App.MsgBox(GetMsg(78))
    Exit Sub
  End If
  '
  App.SetValue("tmLOTN", Rsp)
  '
  Cancel=False

End Sub

Private Sub txtLOTN_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU As String
  Dim sITM As String
  '
  ' Allow search only when not hardcommited in SO
  '
  If cForceLOTN And (Len(msHardLOTN)>0) Then
    App.MsgBox GetMsg(123)
    Exit Sub
  End If
  '
  sMCU = App.GetValue("tmMCU")
  sITM = App.GetValue("tmITM")
  '
  Cancel = Not Search_F41021_LOTN(Rsp, "", sMCU, sITM)

End Sub

Private Sub txtLOCN_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmLOCN", "")

End Sub

Private Sub txtLOCN_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim sMCU  As String
  Dim sLocn As String
  Dim sSQL  As String
  Dim sCols As String
  Dim sRows As String
  '
  If (Len(Rsp)=0) Then Exit Sub

  Cancel = True
  '
  sMCU = App.GetValue("tmMCU")

  If Not Validate_Locn(Rsp, sMCU, sLocn) Then Exit Sub
  '
  ' Validate if hardcommited in SO
  If cForceLOCN And (Len(msHardLOCN)>0) Then
    If (Rsp <> msHardLOCN) Then
      App.MsgBox(GetMsg(114))
      Exit Sub
    End If
  End If
  '
  ' Validate it
  sSQL = "select LIPQOH from  F41021" & _
         " where LILOCN = '" & sLocn & "' and LIMCU = '%tmMCU' and LIITM = %tmITM and LILOTN = '%tmLOTN'"
  '
  DB.Execute(sSQL, sCols, sRows)

  If (Len(sRows) = 0) Then
    App.MsgBox(GetMsg(74))
    Exit Sub
  End If
  '
  App.SetValue("tmLOCN", sLocn)
  '
  Cancel = False

End Sub

Private Sub txtLOCN_OnSearch(ByRef Rsp As String, ByRef Cancel As Boolean)
  On Error Resume Next
  '
  Dim sMCU As String
  Dim sITM As String
  Dim sLOTN As String
  '
  ' Allow search only when not hardcommited in SO
  '
  If cForceLOCN And (Len(msHardLOCN)>0) Then
    App.MsgBox GetMsg(115)
    Exit Sub
  End If
  '
  sMCU = App.GetValue("tmMCU")
  sITM = App.GetValue("tmITM")
  sLOTN = App.GetValue("tmLOTN")
  '
  Cancel = Not Search_F41021(Rsp, "", sMCU, sITM, sLOTN)
End Sub

Private Sub txtQTY_OnBackup(ByRef Cancel As Boolean)
  On Error Resume Next
  '
  App.SetValue("tmQTY", "")
End Sub

Private Sub txtQTY_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '

  '
  App.SetValue("tmQTY", Rsp)
  '
  Cancel=False

End Sub

Private Sub txtAccept_GotFocus(ByRef Rsp As String, ByRef AllowChange As Boolean)
  On Error Resume Next
  '

  txtAccept.Visible = True

End Sub

Private Sub txtAccept_LostFocus()
  On Error Resume Next
  '
  txtAccept.Visible = False

End Sub

Private Sub txtAccept_OnEnter(ByRef Rsp As String, ByRef Cancel As Boolean, ByRef ErrMsg As String)
  On Error Resume Next
  '
  Dim iRow As Integer
  '
  iRow = txtAccept.Label.Top
  '
  Screen.Print 0, iRow, "Processing...", False, True, True
  
End Sub
</Code>
